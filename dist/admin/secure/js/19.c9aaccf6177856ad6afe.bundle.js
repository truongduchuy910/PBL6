(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{371:function(t,e,i){"use strict";i.d(e,"a",(function(){return u}));var a=i(7),s=i(40),n=i(16),l=i(370),r=i.n(l),h=["label","path","type","access","isOrderable","isPrimaryKey","isRequired","isReadOnly","adminDoc","defaultValue"],u=function t(e,i,l){var u=this,o=i.readViews,c=i.preloadViews,p=i.getListByKey,d=e.label,b=e.path,f=e.type,v=e.access,O=e.isOrderable,g=e.isPrimaryKey,y=e.isRequired,j=e.isReadOnly,w=e.adminDoc,V=e.defaultValue,F=Object(a.a)(e,h);Object(s.a)(this,t),Object(n.a)(this,"getQueryFragment",(function(){return u.path})),Object(n.a)(this,"serialize",(function(t){return t[u.path]||null})),Object(n.a)(this,"validateInput",(function(){})),Object(n.a)(this,"deserialize",(function(t){return t[u.path]})),Object(n.a)(this,"hasChanged",(function(t,e){return!r()(t[u.path],e[u.path])})),Object(n.a)(this,"getDefaultValue",(function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=t.originalInput,i=void 0===e?{}:e,a=t.prefill,s=void 0===a?{}:a;return u._getDefaultValue({originalInput:i,prefill:s})})),Object(n.a)(this,"initCellView",(function(){var t=u.views.Cell;t&&u.readViews([t])})),Object(n.a)(this,"initFieldView",(function(){var t=u.views.Field;t&&u.readViews([t])})),Object(n.a)(this,"initFilterView",(function(){var t=u.views.Filter;t&&u.readViews([t])})),Object(n.a)(this,"getFilterTypes",(function(){return[]})),Object(n.a)(this,"getFilterValue",(function(t){return t})),this.config=F,this.label=d,this.path=b,this.type=f,this.maybeAccess=v,this.isOrderable=O,this.isPrimaryKey=g,this.isRequired=y,this.isReadOnly=j,this.adminDoc=w,this.readViews=o,this.preloadViews=c,this.getListByKey=p,this.views=l,this._getDefaultValue="function"!=typeof V?function(t){return t.prefill[u.path]||V}:V}},574:function(t,e,i){"use strict";i.r(e),i.d(e,"default",(function(){return h}));var a=i(6),s=i(7),n=i(16),l=i(371);i(253),i(370);const r=["defaultValue"];class h extends l.a{constructor(t){let{defaultValue:e=null}=t,i=Object(s.a)(t,r);for(var l=arguments.length,h=new Array(l>1?l-1:0),u=1;u<l;u++)h[u-1]=arguments[u];super(Object(a.a)(Object(a.a)({},i),{},{defaultValue:e}),...h),Object(n.a)(this,"getFilterGraphQL",t=>{let{value:{inverted:e,options:i}}=t;if(!i.length)return"";const a=i.length>1;let s=this.path;a&&e?s=this.path+"_not_in":a?s=this.path+"_in":e&&(s=this.path+"_not");return{[s]:a?i.map(t=>t.value):i[0].value}}),Object(n.a)(this,"getFilterLabel",()=>this.label),Object(n.a)(this,"formatFilter",t=>{let{value:e}=t;if(!e.options.length)return e.inverted?this.label+" is set":this.label+" has no value";if(e.options.length>1){const t=e.options.map(t=>t.label).join(", ");return e.inverted?`${this.label} is not in [${t}]`:`${this.label} is in [${t}]`}const i=e.options[0].label;return e.inverted?`${this.label} is not ${i}`:`${this.label} is ${i}`}),Object(n.a)(this,"getFilterValue",t=>t&&t.options&&t.options.length?t:void 0),Object(n.a)(this,"getFilterTypes",()=>[{type:"is",label:"Matches",getInitialValue:()=>({inverted:!1,options:[]})}]),this.options=i.options,this.dataType=i.dataType}}}}]);