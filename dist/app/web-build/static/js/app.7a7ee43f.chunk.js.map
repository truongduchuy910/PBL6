{"version":3,"sources":["theme.js","ui/Provider/Native.js","ui/User/Auth/Controller.js","ui/User/Auth/Short.js","ui/User/SignIn/Controller.js","ui/User/SignIn/Simple.js","ui/User/Create/Controller.js","ui/User/SignUp/Simple.js","ui/User/SignOut/Controller.js","ui/User/SignOut/Button.js","ui/User/List/Controller.js","ui/User/Item/Controller.js","ui/User/Suggest/Controller.js","ui/Relationship/Create/Controller.js","ui/Relationship/Create/Button.js","ui/User/Request/Controller.js","ui/Relationship/Update/Controller.js","ui/Relationship/Update/Button.js","ui/Relationship/Delete/Controller.js","ui/Relationship/Delete/Active.js","ui/Relationship/Delete/Delete.js","ui/User/Suggest/Suggest.js","ui/User/List/Count.js","ui/User/Friends/Controller.js","ui/User/Friends/Simple.js","ui/User/Search/Controller.js","ui/User/Search/Search.js","ui/User/SuggestFixed/Controller.js","ui/User/SuggestFixed/SuggestFixed.js","ui/User/Request/Request.js","ui/Post/Item/ImageOnly.js","ui/Post/List/SkeletonGrid.js","ui/Post/List/Controller.js","ui/Post/Grid/Controller.js","ui/Post/List/Grid.js","ui/Interactive/Comment/Create/Controller.js","ui/User/Auth/Avatar.js","ui/Interactive/Comment/Create/Simple.js","ui/User/Item/Avatar.js","ui/Interactive/Comment/Delete/Controller.js","ui/Interactive/Comment/Delete/Text.js","ui/Interactive/Comment/List/Controller.js","ui/Interactive/Comment/Item/Controller.js","ui/Interactive/List/Controller.js","ui/Interactive/Item/Controller.js","ui/Interactive/Reaction/Delete/Controller.js","ui/Interactive/Reaction/List/Controller.js","ui/Interactive/Reaction/Create/Controller.js","ui/Interactive/Reaction/Create/Text.js","ui/Interactive/Reaction/Create/Button.js","ui/Interactive/Reaction/List/TextWithCount.js","ui/Interactive/Reaction/List/IconTextWithCount.js","ui/Interactive/Item/Short.js","ui/Interactive/Comment/Item/Simple.js","ui/Interactive/Comment/List/Simple.js","ui/Interactive/Comment/List/ToggleButton.js","ui/Interactive/Comment/Update/Controller.js","ui/Album/List/Simple.js","ui/Album/Create/Button.js","ui/Upload/Image/List/Carousel.js","ui/Post/Item/Controller.js","ui/Interactive/Item/Simple.js","ui/Post/Item/Simple.js","ui/Post/Create/Button.js","ui/Post/List/SkeletonSimple.js","ui/Post/List/Simple.js","ui/Post/Search/Search.js","ui/Post/Detail/SkeletonDetail.js","ui/Post/Detail/Controller.js","ui/Post/Detail/Detail.js","ui/Post/Create/Controller.js","ui/Post/Create/Simple.js","ui/Post/Update/Controller.js","ui/Post/Update/Text.js","ui/Post/Delete/Controller.js","ui/Post/Delete/Text.js","ui/User/Item/DetailSkeleton.js","ui/Field/index.js","ui/User/Item/Detail.js","ui/User/Update/Controller.js","ui/User/Update/Simple.js","ui/User/Update/Password.js","ui/Footer/Simple.js","pages/index.js","pages/SignIn.js","pages/Home.js","pages/User.js","pages/Post.js","pages/SignUp.js","pages/NewPost.js","pages/FriendSuggestion.js","pages/FriendRequest.js","pages/Friends.js","pages/UserUpdate.js","pages/UpdatePassword.js","pages/Album.js","pages/EarlyAcess.js","pages/Result.js","pages/Markdown.js","pages/Test.js","ui/Headers/Options.js","ui/Notification/Item/Simple.js","ui/Notification/List/Controller.js","ui/Notification/List/Simple.js","ui/Notification/List/Toggle.js","ui/Headers/Search.js","ui/Headers/Simple.js","App.js","webpack:///./index.js?41f5"],"names":["theme","extendTheme","fonts","heading","body","mono","components","Text","baseStyle","color","fontFamily","defaultProps","size","sizes","lg","fontSize","md","sm","Input","Heading","USER_AUTH","gql","createApolloClient","domain","locale","uri","as","httpLink","HttpLink","headers","link","setContext","_","a","async","AsyncStorage","getItem","token","authorization","concat","cache","InMemoryCache","ApolloClient","ssrMode","window","apolloClients","existingApolloClient","name","mergeState","b","merge","arrayMerge","destinationArray","sourceArray","filter","d","every","s","isEqual","AuthContext","createContext","Stack","createNativeStackNavigator","Native","navigation","header","result","useQuery","loading","error","data","user","customTheme","DefaultTheme","colors","background","useEffect","Provider","value","NavigationContainer","linking","Navigator","screenOptions","initialRouteName","screens","map","screen","index","Screen","key","component","auth","requires","includes","ProviderNative","props","pageProps","client","useMemo","initialState","variables","_apolloClient","existingCache","extract","restore","initializeApollo","ApolloProvider","Controller","UI","useContext","Link","to","params","id","rounded","bgColor","p","px","_text","fontWeight","UserAuthShort","USER_SIGNIN","UserSignIn","useApolloClient","refetch","useMutation","onCompleted","setItem","console","log","clearStore","resetStore","navigate","onError","removeItem","on","signIn","phone","password","phoneRef","useRef","passwordRef","useState","inputError","setInputError","maxW","w","mx","mt","source","alt","my","textAlign","py","borderWidth","borderColor","bg","space","Label","ref","_focus","type","onPress","current","trim","length","isNaN","justifyContent","textDecoration","UserSignInSimple","USER_CREATE","UserCreateController","usernameRef","sex","setSex","mb","Group","accessibilityLabel","onChange","newValue","colorScheme","ml","username","UserSignUp","UserSignOut","status","signOut","e","leftIcon","UserSignOutButton","POST_LIST","UserList","first","where","allUsers","_allUsersMeta","count","POST_ITEM_ME","POST_ITEM","refetchUserItem","makeVar","UserItem","my_id","existing","relationship","User","allPosts","allRelationships","_allRelationshipsMeta","posts","FRIEND_SUGGEST_LIST","UserSuggestRefetch","UserSuggest","allFriends","createdBy","push","friendsSuggest","ar","find","rm","RELATIONSHIP_CREATE","RelationshipCreate","toId","page","userItemRefetch","useReactiveVar","userSuggestRefetch","createRelationship","clickAddFriend","connect","isAccepted","Platform","OS","style","padding","RelationshipCreateButton","FRIEND_LIST","refetchUserRequest","RELATIONSHIP_UPDATE","RelationshipUpdate","children","userRequestRefetch","updateRelationship","clickAgree","relationshipUpdated","RelationshipUpdateButton","RELATIONSHIP_DELETE","RelationshipDelete","deleteRelationship","clickDetete","confirm","RelationshipDeleteActive","RelationshipDeleteDelete","flexWrap","minW","m","alignItems","avatar","publicUrl","UserListSuggest","UserListCount","UserListSimple","SEARCH_USER","keyword","maxw","pl","UserListSearch","FRIEND_SUGGEST_FIXED_LIST","slice","flex","UserListSuggestFixed","UserListRequest","item","position","images","file","JSON","stringify","h","PostListController","skip","sortBy","fetchMore","loadingMore","setLoadingMore","_allPostsMeta","loadMore","updateQuery","previousResult","fetchMoreResult","finally","GRID_POST","overflow","UserPosts","useRoute","COMMENT_CREATE","CommentCreate","interactive","content","setContent","contentChangeHandle","target","userCommentHandle","clickCreate","AuthAvatar","display","flexDirection","placeholder","onSubmitEditing","InteractionCommentCreateSimple","UserAvatar","COMMENT_DELETE","CommentDelete","deleteInteractiveComment","comment","InteractionCommentCreateDelete","COMMENT_LIST","CommentListController","refetchInteractiveItem","_allInteractiveCommentsMeta","allInteractiveComments","COMMENT_ITEM","formatTimeCreate","createdAt","dayjs","require","createdTime","now","format","Number","get","CommenItemController","timeAgo","InteractiveComment","INTERACTIVE_LIST","INTERACTIVE_ITEM","InteractiveItem","Interactive","comments","previousComments","fetchMoreComments","REACTION_DELETE","REACTION_LIST","ReactionListController","allInteractiveReactions","_allInteractiveReactionsMeta","REACTION_CREATE","ReactionCreate","reacted","onCreate","createResult","onDelete","deleteResult","handleClick","reaction","emoji","reactions","InteractionReactionCreateText","FontAwesome","marginTop","_hover","InteractionReactionCreateButton","InteractionReactionListTextWithCount","InteractionReactionListIconTextWithCount","_reactionsMeta","InteractiveItemShort","onDeleted","_commentsMeta","lineHeight","my_interactive","InteractionCommentItemSimple","getMore","InteractionCommentListSimple","loadFont","thumbnailUrl","isSaved","setIsSaved","saveHandle","prev","urls","arrowStyles","top","opacity","currentSlide","setCurrentSlide","urlsCount","carouselStyle","direction","slide","boxSize","src","left","marginRight","right","marginLeft","bottom","Array","from","setSlide","PostItem","Post","post","borderBottomWidth","borderBottomColor","borderTopWidth","borderTopColor","commentsMeta","InteractiveItemSimple","currentUser","isModalOpen","setIsModalOpen","stringCreatedAt","zIndex","PostDeleteText","Entypo","image","PostItemSimple","speed","viewBox","backgroundColor","foregroundColor","animate","x","y","rx","ry","width","height","cx","cy","r","PostListSimple","PostDetail","isOpen","PostDetailSimple","POST_CREATE","PostCreate","createPost","contentRef","event","create","PostCreateSimple","useNavigation","Feather","POST_DELETE","PostDelete","deletePost","paragraph","heading1","heading2","heading3","heading4","heading5","heading6","hr","marginBottom","bullet_list","ordered_list","list_item","textDecorationLine","blockquote","borderLeftWidth","margin","paddingHorizontal","paddingVertical","table","thead","tbody","th","tr","td","Field","round","step","className","strongProps","pProps","DetailSkeleton","mr","orientation","description","UserItemDetail","USER_UPDATE","setUsername","setPhone","setDescription","gender","passwordOldRef","passwordNewRef","passwordConfirmRef","passwordOld","passwordNew","passwordConfirm","pb","pr","options","title","prefixes","config","home","users","signup","newpost","friendsuggestion","friendrequest","userupdate","updatepassword","album","earlyaccess","friends","markdown","test","isOpenOptions","setIsOpenOptions","optionsHandler","hideOptions","contains","document","addEventListener","removeEventListener","notificationHandler","imgUrl","time","NOTIFICATION_LIST","NotificationListController","pollInterval","allInteractives","forEach","arr","sort","itemA","itemB","Date","arrFilter","solvedData","__typename","NotificationListSimple","isOpenNotification","setIsOpenNotification","hideNotification","Ionicons","onKeyPress","route","back","safeAreaTop","pt","Options","HeaderSimple","App","fontLoaded","setfontLoaded","Font","Lexend_300Light","Lexend_400Regular","Lexend_500Medium","Lexend_600SemiBold","Lexend_700Bold","pages","AppRegistry","registerComponent","registerRootComponent"],"mappings":"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","file":"static/js/app.7a7ee43f.chunk.js","sourcesContent":["import {\n  useFonts as fonts,\n  Lexend_300Light,\n  Lexend_400Regular,\n  Lexend_500Medium,\n  Lexend_600SemiBold,\n  Lexend_700Bold,\n} from \"@expo-google-fonts/lexend\";\nimport { extendTheme } from \"native-base\";\nexport const theme = extendTheme({\n  fonts: {\n    heading: \"Lexend\",\n    body: \"Lexend\",\n    mono: \"Lexend\",\n  },\n  components: {\n    Text: {\n      baseStyle: {\n        color: \"gray.800\",\n        fontFamily: \"Lexend_400Regular\",\n      },\n      defaultProps: { size: \"md\" },\n      sizes: {\n        lg: { fontSize: \"32px\" },\n        md: { fontSize: \"14px\" },\n        sm: { fontSize: \"12px\" },\n      },\n    },\n    Input: {\n      baseStyle: {\n        color: \"gray.800\",\n        fontFamily: \"Lexend_400Regular\",\n      },\n      defaultProps: { size: \"md\" },\n      sizes: {\n        lg: { fontSize: \"32px\" },\n        md: { fontSize: \"14px\" },\n        sm: { fontSize: \"12px\" },\n      },\n    },\n    Heading: {\n      baseStyle: {\n        color: \"gray.800\",\n        fontFamily: \"Lexend_400Regular\",\n      },\n      defaultProps: { size: \"lg\" },\n      sizes: {\n        lg: { fontSize: \"32px\" },\n        md: { fontSize: \"24px\" },\n        sm: { fontSize: \"20px\" },\n      },\n    },\n  },\n});\nexport function useFonts() {\n  return fonts({\n    Lexend_300Light,\n    Lexend_400Regular,\n    Lexend_500Medium,\n    Lexend_600SemiBold,\n    Lexend_700Bold,\n  });\n}\n","// react\nimport React, { useEffect, useMemo } from \"react\";\nimport { createContext } from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n// important\nimport { NavigationContainer, DefaultTheme } from \"@react-navigation/native\";\nimport { ApolloClient, useQuery, gql } from \"@apollo/client\";\nimport { HttpLink, InMemoryCache, ApolloProvider } from \"@apollo/client\";\n//\nimport isEqual from \"lodash/isEqual\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport merge from \"deepmerge\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { Text } from \"native-base\";\n\nexport const USER_AUTH = gql`\n  query {\n    user: authenticatedUser {\n      id\n      phone\n      name\n      email\n      avatar {\n        publicUrl\n      }\n      gender\n      description\n    }\n  }\n`;\nexport const APOLLO_STATE_PROP_NAME = \"__apollo_state__\";\nexport const VARIABLE_PROP_NAME = \"__variable__\";\n/**\n * @returns {ApolloClient}\n */\nfunction createApolloClient(domain = \"_\", locale = \"_\") {\n  const uri = \"https://odanang.net/admin/api\";\n  const as =\n    process.env.NODE_ENV === \"production\" ? domain : process.env.HOST_DEV;\n  const httpLink = new HttpLink({\n    uri,\n    headers: {\n      as, // HOST env for dev mode\n      locale,\n    },\n  });\n  const link = setContext(async (_, { headers }) => {\n    const token = await AsyncStorage.getItem(\"@token\");\n    return {\n      headers: {\n        ...headers,\n        authorization: token ? `Bearer ${token}` : \"\",\n      },\n    };\n  }).concat(httpLink);\n\n  const cache = new InMemoryCache();\n  return new ApolloClient({\n    link,\n    ssrMode: typeof window === \"undefined\",\n    cache,\n  });\n}\nexport let apolloClients = {};\n/**\n * @returns {ApolloClient}\n */\nfunction existingApolloClient(name) {\n  return apolloClients[name];\n}\n\nfunction mergeState(a, b) {\n  return merge(a, b, {\n    arrayMerge: (destinationArray, sourceArray) => [\n      ...sourceArray,\n      ...destinationArray.filter((d) =>\n        sourceArray.every((s) => !isEqual(d, s)),\n      ),\n    ],\n  });\n}\n/**\n *\n * @param {*} initialState\n * @param {*} param1\n * @returns {ApolloClient}\n */\nexport function initializeApollo(initialState = null, variables = {}) {\n  const { domain = \"_\", locale = \"_\" } = variables;\n  const _apolloClient =\n    existingApolloClient(domain) || createApolloClient(domain, locale);\n  if (initialState) {\n    const existingCache = _apolloClient.cache.extract();\n    const data = mergeState(initialState, existingCache);\n    _apolloClient.cache.restore(data);\n  }\n  if (!apolloClients[domain]) apolloClients[domain] = _apolloClient;\n  return _apolloClient;\n}\nexport function getContextVar(context) {\n  const { locale, asPath } = context;\n  return {\n    domain: context.req ? context.req.headers.host : window.location.host,\n    locale,\n    asPath,\n  };\n}\nexport function getVariables(pageProps = {}) {\n  return pageProps[VARIABLE_PROP_NAME] || {};\n}\nexport function getApolloState(pageProps = {}) {\n  return pageProps[APOLLO_STATE_PROP_NAME];\n}\n\nexport const AuthContext = createContext();\nconst Stack = createNativeStackNavigator();\nfunction Native({ navigation, header }) {\n  var result = useQuery(USER_AUTH);\n  const { loading, error, data = {} } = result;\n  const { user = null } = data;\n  result.user = user;\n  const customTheme = {\n    ...DefaultTheme,\n    colors: {\n      ...DefaultTheme.colors,\n      background: \"rgb(255, 255, 255)\",\n    },\n  };\n  useEffect(() => {\n    //console.log(\"navigation renderd\", user);\n  });\n  if (result.loading) return <Text>Đang tải</Text>\n  return <AuthContext.Provider value={result}>\n    <NavigationContainer linking={navigation.linking} theme={customTheme}>\n      <Stack.Navigator\n        screenOptions={{\n          header,\n        }}\n        initialRouteName={navigation.initialRouteName}\n      >\n        {navigation.screens?.map((screen, index) => {\n          return (\n            <Stack.Screen\n              {...screen}\n              key={screen.name + index}\n              component={\n                !user && navigation.auth.requires.includes(screen.name)\n                  ? navigation.auth.component\n                  : screen.component\n              }\n            />\n          );\n        })}\n      </Stack.Navigator>\n    </NavigationContainer>\n  </AuthContext.Provider>;\n}\nexport default function ProviderNative(props) {\n  const { pageProps = {}, navigation, header } = props;\n  const client = useMemo(() => initializeApollo(), [pageProps]);\n  return (\n    <ApolloProvider client={client}>\n      <Native navigation={navigation} header={header} />\n    </ApolloProvider>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { AuthContext } from \"../../Provider/Native\";\nexport default function Controller({ UI, navigation, ...props }) {\n  const { loading, error, data = {} } = useContext(AuthContext);\n  const { user = {} } = data;\n  return (\n    <UI\n      {...props}\n      navigation={navigation}\n      loading={loading}\n      error={error}\n      user={user}\n    />\n  );\n}\n","import { Button, Text } from \"native-base\";\nimport React from \"react\";\nimport UserAuth from \"./Controller\";\nimport { Link } from \"@react-navigation/native\";\n\nfunction UI({ loading, error, user }) {\n  if (loading) return <Text></Text>;\n  if (!user) return <Text></Text>;\n  return (\n    <Link to={{ screen: \"users\", params: { id: user.id } }}>\n      <Button\n        rounded={8}\n        bgColor=\"gray.100\"\n        p=\"2\"\n        px=\"3\"\n        _text={{ color: \"gray.400\", fontWeight: \"600\" }}\n      >\n        {user.name}\n      </Button>\n    </Link>\n  );\n}\nexport default function UserAuthShort(props) {\n  return <UserAuth {...props} UI={UI} />;\n}\n","import React, { useContext } from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useMutation, gql, useApolloClient, useQuery } from \"@apollo/client\";\nimport { AuthContext } from \"../../Provider/Native\";\nexport const USER_SIGNIN = gql`\n  mutation($phone: String, $password: String) {\n    user: authenticateUserWithPassword(phone: $phone, password: $password) {\n      token\n      item {\n        phone\n        name\n      }\n    }\n  }\n`;\nexport default function UserSignIn({ UI, navigation }) {\n  const client = useApolloClient();\n  const { refetch } = useContext(AuthContext);\n  const [on, result = {}] = useMutation(USER_SIGNIN, {\n    onCompleted: async ({ user = {} }) => {\n      const { token } = user;\n      try {\n        await AsyncStorage.setItem(\"@token\", token);\n      } catch (e) {\n        console.log(\"User SignIn Error\", e);\n      } finally {\n        await client.clearStore();\n        await client.resetStore();\n        if (refetch) await refetch();\n        console.log('navigation.navigate(\"home\")');\n        await navigation.navigate(\"home\");\n      }\n    },\n    onError: async (error) => {\n      try {\n        await AsyncStorage.removeItem(\"@token\");\n      } catch (e) {\n      } finally {\n        await client.clearStore();\n        await client.resetStore();\n      }\n    },\n  });\n  const signIn = ({ phone, password }) => {\n    return on({ variables: { phone, password } });\n  };\n  const { loading, error, data = {} } = result;\n  const { user } = data;\n  return <UI signIn={signIn} loading={loading} error={error} user={user} />;\n}\n","import React, { Fragment, useRef, useState } from \"react\";\nimport UserSignIn from \"./Controller\";\nimport { Link } from \"@react-navigation/native\";\nimport {\n  Box,\n  Text,\n  Heading,\n  VStack,\n  FormControl,\n  Input,\n  Button,\n  HStack,\n  Image,\n} from \"native-base\";\n\nfunction UI({ signIn, loading, error, user, navigation }) {\n  /**\n   *\n   * @param {Event} e\n   */\n\n  const phoneRef = useRef();\n  const passwordRef = useRef();\n  const [inputError, setInputError] = useState(null);\n\n  const submitSignIn = () => {\n    setInputError(null);\n\n    const phone = phoneRef.current.value;\n    const password = passwordRef.current.value;\n\n    // Validation phone number\n    if (\n      !phone.trim() ||\n      (!(phone.length === 10) && !(phone.length === 11)) ||\n      isNaN(phone)\n    ) {\n      setInputError(\"Kiểm tra lại số điện thoại\");\n      return;\n    }\n\n    // Validation password\n    if (password.trim().length < 8) {\n      setInputError(\"Độ dài mật khẩu ít nhất 8 kí tự\");\n      return;\n    }\n\n    if (!loading) signIn({ phone, password });\n  };\n\n  return (\n    <Fragment>\n      <Box maxW=\"370px\" w=\"full\" mx=\"auto\" mt=\"100px\">\n        <Image\n          source={{\n            uri:\n              \"https://res.cloudinary.com/cloudinaryassets/image/upload/v1632635691/favicon_gc42jc.svg\",\n          }}\n          alt=\"Odanang logo\"\n          size=\"70px\"\n          mx=\"auto\"\n        />\n        <Heading my=\"20px\" textAlign=\"center\" fontSize={[\"20px\", \"24px\"]}>\n          Đăng nhập để tiếp tục\n        </Heading>\n        <Box\n          px=\"18px\"\n          py=\"30px\"\n          rounded=\"10px\"\n          borderWidth=\"1px\"\n          borderColor=\"gray.100\"\n          bg=\"gray.50\"\n        >\n          <VStack space=\"12px\">\n            <FormControl>\n              <FormControl.Label>Số điện thoại</FormControl.Label>\n              <Input\n                ref={phoneRef}\n                name=\"phone\"\n                bgColor=\"white\"\n                px=\"8px\"\n                py=\"6px\"\n                borderWidth=\"1\"\n                borderColor=\"gray.100\"\n                rounded=\"6px\"\n                _focus={{\n                  borderColor: \"green.500\",\n                }}\n              />\n            </FormControl>\n            <FormControl>\n              <FormControl.Label>Mật khẩu</FormControl.Label>\n              <Input\n                ref={passwordRef}\n                name=\"password\"\n                type=\"password\"\n                bgColor=\"white\"\n                px=\"8px\"\n                py=\"6px\"\n                borderWidth=\"1\"\n                borderColor=\"gray.100\"\n                rounded=\"6px\"\n                _focus={{\n                  borderColor: \"green.500\",\n                }}\n              />\n            </FormControl>\n            {!loading && (\n              <Button\n                onPress={submitSignIn}\n                rounded=\"8px\"\n                bgColor=\"green.500\"\n                p=\"8px\"\n                _text={{ color: \"white\", fontWeight: \"600\" }}\n              >\n                ĐĂNG NHẬP\n              </Button>\n            )}\n            {loading && (\n              <Button\n                rounded=\"8px\"\n                bgColor=\"green.500\"\n                p=\"8px\"\n                _text={{ color: \"white\", fontWeight: \"600\" }}\n              >\n                ĐANG TẢI ...\n              </Button>\n            )}\n          </VStack>\n        </Box>\n        <Box\n          mt=\"12px\"\n          p=\"14px\"\n          rounded=\"10px\"\n          borderWidth=\"1\"\n          borderColor=\"gray.100\"\n        >\n          <HStack justifyContent=\"center\">\n            <Text>Bạn chưa có tài khoản? </Text>\n            <Link to={{ screen: \"signup\" }}>\n              <Text color=\"green.500\" textDecoration=\"none\">\n                Tạo tài khoản\n              </Text>\n            </Link>\n          </HStack>\n        </Box>\n        {error && (\n          <Box\n            mt=\"12px\"\n            p=\"14px\"\n            rounded=\"10px\"\n            borderWidth=\"1px\"\n            borderColor=\"red.500\"\n          >\n            <Text textAlign=\"center\" color=\"red.500\">\n              Sai số điện thoại hoặc mật khẩu\n            </Text>\n          </Box>\n        )}\n        {inputError && (\n          <Box\n            mt=\"12px\"\n            p=\"12px\"\n            rounded=\"10px\"\n            borderWidth=\"1px\"\n            borderColor=\"red.500\"\n          >\n            <Text textAlign=\"center\" color=\"red.500\">\n              {inputError}\n            </Text>\n          </Box>\n        )}\n      </Box>\n    </Fragment>\n  );\n}\nexport default function UserSignInSimple(props) {\n  return <UserSignIn {...props} UI={UI} />;\n}\n","import { useMutation, gql } from \"@apollo/client\";\nimport React, { useState } from \"react\";\nexport const USER_CREATE = gql`\n  mutation($data: UserCreateInput) {\n    user: createUser(data: $data) {\n      id\n    }\n  }\n`;\nexport default function UserCreateController({ UI, navigation }) {\n  const [on, { loading, error, data = {} }] = useMutation(USER_CREATE, {\n    onCompleted: ({ user }) => {\n      navigation.navigate(\"home\");\n    },\n    onError: (error) => {\n      console.log(\"onError\", error);\n    },\n  });\n  const { user } = data;\n  return <UI on={on} loading={loading} error={error} user={user} />;\n}\n","import React, { Fragment, useRef, useState } from \"react\";\nimport { Link } from \"@react-navigation/native\";\nimport {\n  Box,\n  Text,\n  Heading,\n  VStack,\n  FormControl,\n  Input,\n  Button,\n  HStack,\n  Image,\n  Radio,\n} from \"native-base\";\nimport Controller from \"../Create/Controller.js\";\nfunction UI({ loading, error, user, navigation, on }) {\n  /**\n   *\n   * @param {Event} e\n   */\n\n  const usernameRef = useRef();\n  const phoneRef = useRef();\n  const passwordRef = useRef();\n  const [sex, setSex] = useState(\"male\");\n  const [inputError, setInputError] = useState(null);\n\n  const clickSignUp = () => {\n    setInputError(null);\n    const username = usernameRef.current.value;\n    const phone = phoneRef.current.value;\n    const password = passwordRef.current.value;\n\n    // Validation phone number\n    if (\n      !phone.trim() ||\n      (!(phone.length === 10) && !(phone.length === 11)) ||\n      isNaN(phone)\n    ) {\n      setInputError(\"Kiểm tra lại số điện thoại\");\n      return;\n    }\n\n    // Validation username\n    if (!username.trim() || !isNaN(username) || !username.includes(\" \")) {\n      setInputError(\"Kiểm tra lại họ và tên\");\n      return;\n    }\n\n    // Validation password\n    if (password.trim().length < 8) {\n      setInputError(\"Độ dài mật khẩu ít nhất 8 kí tự\");\n      return;\n    }\n\n    console.log(username, phone, password, sex);\n\n    // Sign up\n    if (!loading) {\n      on({ variables: { data: { name: username, phone, password } } });\n    }\n  };\n\n  return (\n    <Fragment>\n      <Box maxW=\"370px\" w=\"full\" mx=\"auto\" mt=\"100px\">\n        <Image\n          source={{\n            uri:\n              \"https://res.cloudinary.com/cloudinaryassets/image/upload/v1632635691/favicon_gc42jc.svg\",\n          }}\n          alt=\"Odanang logo\"\n          size=\"70px\"\n          mx=\"auto\"\n        />\n        <Heading my=\"20px\" textAlign=\"center\" fontSize={[\"20px\", \"24px\"]}>\n          Tạo tài khoản mới\n        </Heading>\n        <Box\n          px=\"18px\"\n          py=\"30px\"\n          rounded=\"10px\"\n          borderWidth=\"1px\"\n          borderColor=\"gray.100\"\n          bg=\"gray.50\"\n        >\n          <VStack space=\"12px\">\n            <FormControl>\n              <FormControl.Label>Số điện thoại</FormControl.Label>\n              <Input\n                ref={phoneRef}\n                name=\"phone\"\n                bgColor=\"white\"\n                px=\"8px\"\n                py=\"6px\"\n                borderWidth=\"1\"\n                borderColor=\"gray.100\"\n                rounded=\"6px\"\n                _focus={{\n                  borderColor: \"green.500\",\n                }}\n              />\n            </FormControl>\n            <FormControl>\n              <FormControl.Label>Họ và tên</FormControl.Label>\n              <Input\n                ref={usernameRef}\n                name=\"username\"\n                bgColor=\"white\"\n                px=\"8px\"\n                py=\"6px\"\n                borderWidth=\"1\"\n                borderColor=\"gray.100\"\n                rounded=\"6px\"\n                _focus={{\n                  borderColor: \"green.500\",\n                }}\n              />\n            </FormControl>\n            <FormControl>\n              <FormControl.Label>Mật khẩu</FormControl.Label>\n              <Input\n                ref={passwordRef}\n                name=\"password\"\n                type=\"password\"\n                bgColor=\"white\"\n                px=\"8px\"\n                py=\"6px\"\n                borderWidth=\"1\"\n                borderColor=\"gray.100\"\n                rounded=\"6px\"\n                _focus={{\n                  borderColor: \"green.500\",\n                }}\n              />\n            </FormControl>\n            <FormControl mb=\"8px\">\n              <FormControl.Label>Giới tính</FormControl.Label>\n              <Radio.Group\n                name=\"sex\"\n                accessibilityLabel=\"sex\"\n                value={sex}\n                onChange={(newValue) => {\n                  setSex(newValue);\n                }}\n              >\n                <HStack space=\"32px\">\n                  <Radio\n                    colorScheme=\"green\"\n                    size=\"sm\"\n                    value=\"male\"\n                    borderWidth=\"1px\"\n                    borderColor=\"gray.300\"\n                  >\n                    <Text fontSize=\"13px\" ml=\"6px\">\n                      Nam\n                    </Text>\n                  </Radio>\n                  <Radio\n                    borderWidth=\"1px\"\n                    borderColor=\"gray.300\"\n                    colorScheme=\"green\"\n                    size=\"sm\"\n                    value=\"female\"\n                  >\n                    <Text fontSize=\"13px\" ml=\"6px\">\n                      Nữ\n                    </Text>\n                  </Radio>\n                  <Radio\n                    borderWidth=\"1px\"\n                    borderColor=\"gray.300\"\n                    colorScheme=\"green\"\n                    size=\"sm\"\n                    value=\"other\"\n                  >\n                    <Text fontSize=\"13px\" ml=\"6px\">\n                      Khác\n                    </Text>\n                  </Radio>\n                </HStack>\n              </Radio.Group>\n            </FormControl>\n            {!loading && (\n              <Button\n                onPress={clickSignUp}\n                rounded=\"8px\"\n                bgColor=\"green.500\"\n                p=\"8px\"\n                _text={{ color: \"white\", fontWeight: \"600\" }}\n              >\n                TẠO TÀI KHOẢN\n              </Button>\n            )}\n            {loading && (\n              <Button\n                rounded=\"8px\"\n                bgColor=\"green.500\"\n                p=\"8px\"\n                _text={{ color: \"white\", fontWeight: \"600\" }}\n              >\n                ĐANG TẢI ...\n              </Button>\n            )}\n          </VStack>\n        </Box>\n        <Box\n          mt=\"12px\"\n          p=\"14px\"\n          rounded=\"10px\"\n          borderWidth=\"1\"\n          borderColor=\"gray.100\"\n        >\n          <HStack justifyContent=\"center\">\n            <Text>Bạn đã có tài khoản? </Text>\n            <Link to={{ screen: \"home\" }}>\n              <Text color=\"green.500\" textDecoration=\"none\">\n                Đăng nhập ngay\n              </Text>\n            </Link>\n          </HStack>\n        </Box>\n        {error && (\n          <Box\n            mt=\"12px\"\n            p=\"14px\"\n            rounded=\"10px\"\n            borderWidth=\"1px\"\n            borderColor=\"red.500\"\n          >\n            <Text textAlign=\"center\" color=\"red.500\">\n              Vui lòng sử dụng số điện thoại khác\n            </Text>\n          </Box>\n        )}\n        {inputError && (\n          <Box\n            mt=\"12px\"\n            p=\"12px\"\n            rounded=\"10px\"\n            borderWidth=\"1px\"\n            borderColor=\"red.500\"\n          >\n            <Text textAlign=\"center\" color=\"red.500\">\n              {inputError}\n            </Text>\n          </Box>\n        )}\n      </Box>\n    </Fragment>\n  );\n}\nexport default function UserSignUp(props) {\n  return <Controller {...props} UI={UI} />;\n}\n","import React, { useContext } from \"react\";\nimport { useMutation, gql, useApolloClient, useQuery } from \"@apollo/client\";\nimport { AuthContext } from \"../../Provider/Native\";\nexport const USER_SIGNIN = gql`\n  mutation {\n    status: unauthenticateUser {\n      success\n    }\n  }\n`;\nexport default function UserSignOut({ UI, navigation }) {\n  const client = useApolloClient();\n  const auth = useContext(AuthContext);\n  const [on, result = {}] = useMutation(USER_SIGNIN, {\n    onCompleted: async ({ status }) => {\n      await client.clearStore();\n      await client.resetStore();\n      navigation.navigate(\"home\");\n    },\n    onError: (error) => {},\n  });\n  const { loading, error, data = {} } = result;\n  const { status } = data;\n  return (\n    <UI\n      signOut={on}\n      loading={loading}\n      error={error}\n      status={status}\n      auth={auth}\n    />\n  );\n}\n","import React from \"react\";\nimport UserSignOut from \"./Controller\";\nimport { Button, Text } from \"native-base\";\nimport { IoLogOut } from \"react-icons/io5\";\nfunction UI({ loading, error, signOut, navigation, auth }) {\n  /**\n   *\n   * @param {Event} e\n   */\n  const clickSignOut = (e) => {\n    signOut();\n  };\n  return loading ? (\n    <Text></Text>\n  ) : (\n    <Button\n      onPress={clickSignOut}\n      bgColor=\"white\"\n      _text={{ color: \"gray.900\" }}\n      leftIcon={<IoLogOut color=\"#22c55e\" />}\n    >\n      <Text>Đăng xuất</Text>\n    </Button>\n  );\n}\nexport default function UserSignOutButton(props) {\n  return <UserSignOut {...props} UI={UI} />;\n}\n","import React from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\n// export const POST_LIST = gql`\n//   query($first: Int, $where: UserWhereInput) {\n//     _allUsersMeta(where: $where) {\n//       count\n//     }\n//     allUsers(first: $first, where: $where) {\n//       id\n//       phone\n//       name\n//       avatar {\n//         publicUrl\n//       }\n//     }\n//   }\n// `;\nexport const POST_LIST = gql`\n  query($first: Int, $where: UserWhereInput) {\n    _allUsersMeta(where: $where) {\n      count\n    }\n    allUsers(first: $first, where: { isAdmin: true } ) {\n      id\n      phone\n      name\n      avatar {\n        publicUrl\n      }\n    }\n  }\n`;\nexport default function UserList({ UI, first = 4, where, ...props }) {\n  const { loading, error, data = {}, refetch } = useQuery(POST_LIST, {\n    variables: { first, where },\n  });\n  const { allUsers = [], _allUsersMeta = {} } = data;\n  const [user = {}] = allUsers;\n  const { count } = _allUsersMeta;\n  return (\n    <UI\n      {...props}\n      loading={loading}\n      error={error}\n      allUsers={allUsers}\n      user={user}\n      count={count}\n      refetch={refetch}\n    />\n  );\n}\n","import React from \"react\";\nimport { gql, makeVar, useQuery } from \"@apollo/client\";\nimport { POST_LIST } from \"../List/Controller\";\nexport const POST_ITEM_ME = gql`\n  query($id: ID!) {\n    User(where: { id: $id }) {\n      id\n      phone\n      name\n      description\n      avatar {\n        publicUrl\n      }\n      description\n    }\n    allPosts(where: { createdBy: { id: $id } }) {\n      id\n    }\n    _allRelationshipsMeta(\n      where: {\n        OR: [\n          { OR: { to: { id: $id }, isAccepted: true } }\n          { OR: { createdBy: { id: $id }, isAccepted: true } }\n        ]\n      }\n    ) {\n      count\n    }\n  }\n`;\nexport const POST_ITEM = gql`\n  query($id: ID!, $my_id: ID!) {\n    User(where: { id: $id }) {\n      id\n      phone\n      name\n      description\n      avatar {\n        publicUrl\n      }\n      description\n    }\n    allPosts(where: { createdBy: { id: $id } }) {\n      id\n    }\n    allRelationships(\n      where: {\n        OR: [\n          { OR: { createdBy: { id: $my_id }, to: { id: $id } } }\n          { OR: { createdBy: { id: $id }, to: { id: $my_id } } }\n        ]\n      }\n    ) {\n      id\n      isAccepted\n      createdBy {\n        id\n      }\n      to {\n        id\n      }\n    }\n    _allRelationshipsMeta(\n      where: {\n        OR: [\n          { OR: { to: { id: $id }, isAccepted: true } }\n          { OR: { createdBy: { id: $id }, isAccepted: true } }\n        ]\n      }\n    ) {\n      count\n    }\n  }\n`;\n\nexport const refetchUserItem = makeVar(() => {});\n\nexport default function UserItem({ UI, where, id, my_id, existing }) {\n  if (existing) return <UI {...existing} />\n  const { loading, error, data = {}, refetch } = useQuery(\n    id && my_id ? POST_ITEM : id ? POST_ITEM_ME : POST_LIST,\n    {\n      variables:\n        id && my_id ? { id: id, my_id: my_id } : id ? { id } : { where },\n    }\n  );\n  const { allUsers, User } = data;\n  const [user] = allUsers || [User];\n  const { allPosts = [] } = data;\n  const { allRelationships = [] } = data;\n  const { _allRelationshipsMeta = {} } = data;\n  const { count } = _allRelationshipsMeta;\n  var relationship;\n  if (allRelationships.length === 0) {\n    relationship = null;\n  } else {\n    relationship = allRelationships[0];\n  }\n  if (refetch) refetchUserItem(refetch);\n  return (\n    <UI\n      count={count}\n      loading={loading}\n      error={error}\n      user={user}\n      posts={allPosts}\n      relationship={relationship}\n    />\n  );\n}\n","import React from \"react\";\nimport { gql, makeVar, useQuery } from \"@apollo/client\";\nexport const FRIEND_SUGGEST_LIST = gql`\n  query($id: ID!) {\n    allRelationships(\n      where: {\n        OR: [\n          { OR: { createdBy: { id: $id }, isAccepted: true } }\n          { OR: { createdBy: { id: $id }, isAccepted: false } }\n          { OR: { to: { id: $id }, isAccepted: true } }\n          { OR: { to: { id: $id }, isAccepted: false } }\n        ]\n      }\n    ) {\n      id\n      isAccepted\n      createdBy {\n        id\n        phone\n        name\n        avatar {\n          publicUrl\n        }\n      }\n      to {\n        id\n        phone\n        name\n        avatar {\n          publicUrl\n        }\n      }\n    }\n    _allUsersMeta {\n      count\n    }\n    allUsers {\n      id\n      phone\n      name\n      avatar {\n        publicUrl\n      }\n    }\n  }\n`;\nexport const UserSuggestRefetch = makeVar(() => {});\n\nexport default function UserSuggest({ UI, id, ...props }) {\n  const { loading, error, data = {}, refetch } = useQuery(FRIEND_SUGGEST_LIST, {\n    variables: { id },\n  });\n  const { allUsers = [], _allUsersMeta = {} } = data;\n  const [user = {}] = allUsers;\n  const { count } = _allUsersMeta;\n  const { allRelationships = [] } = data;\n  let allFriends = [];\n  allRelationships.map((relationship) => {\n    if (relationship?.createdBy?.id === id) allFriends.push(relationship?.to);\n    if (relationship?.to?.id === id) allFriends.push(relationship?.createdBy);\n  });\n  let friendsSuggest = [];\n  friendsSuggest = allUsers.filter(\n    (ar) => !allFriends.find((rm) => rm.id === ar.id || ar.id === id)\n  );\n  if (refetch) UserSuggestRefetch(refetch);\n  return (\n    <UI\n      {...props}\n      loading={loading}\n      error={error}\n      friendsSuggest={friendsSuggest}\n      user={user}\n      count={count}\n    />\n  );\n}\n","import React from \"react\";\nimport { gql, useMutation, useReactiveVar } from \"@apollo/client\";\nimport { refetchUserItem } from \"../../User/Item/Controller\";\nimport { UserSuggestRefetch } from \"../../User/Suggest/Controller\";\n\nexport const RELATIONSHIP_CREATE = gql`\n  mutation($data: RelationshipCreateInput) {\n    createRelationship(data: $data) {\n      id\n      to {\n        id\n        name\n      }\n      createdBy {\n        id\n        name\n      }\n      isAccepted\n    }\n  }\n`;\n\nexport default function RelationshipCreate({ UI, toId, page }) {\n  const userItemRefetch = useReactiveVar(refetchUserItem);\n  const userSuggestRefetch = useReactiveVar(UserSuggestRefetch);\n  const [on, { loading, error, data = {} }] = useMutation(RELATIONSHIP_CREATE, {\n    onCompleted: (data) => {\n      page === \"SF\" ? userSuggestRefetch() : userItemRefetch();\n    },\n  });\n  const clickAddFriend = () => {\n    on({\n      variables: {\n        data: {\n          to: {\n            connect: {\n              id: toId,\n            },\n          },\n          isAccepted: false,\n        },\n      },\n    });\n  };\n  const { createRelationship } = data;\n  return (\n    <UI\n      page={page}\n      loading={loading}\n      error={error}\n      clickAddFriend={clickAddFriend}\n      createRelationship={createRelationship}\n    />\n  );\n}\n","import React from \"react\";\nimport { Text as RNText, Platform } from \"react-native\";\nimport { Button } from \"native-base\";\nimport Controller from \"./Controller\";\n\nfunction UI({ error, loading, clickAddFriend }) {\n  const clickHandler = (e) => {\n    clickAddFriend();\n  };\n\n  return (\n    <Button\n      _text={{ color: \"white\", fontSize: [\"13\", \"14\"], fontWeight: \"600\" }}\n      p=\"8px\"\n      rounded=\"8px\"\n      w=\"full\"\n      bgColor=\"green.500\"\n      onPress={clickHandler}\n    >\n      {Platform.OS !== \"web\" ? (\n        <RNText\n          style={{\n            fontWeight: \"500\",\n            color: \"white\",\n            padding: 2,\n            fontFamily: \"Lexend_500Medium\",\n          }}\n        >\n          Thêm bạn bè\n        </RNText>\n      ) : (\n        \"Thêm bạn bè\"\n      )}\n    </Button>\n  );\n}\nexport default function RelationshipCreateButton(props) {\n  return <Controller {...props} UI={UI} />;\n}\n\n// A và B chưa kết bạn với nhau, A gửi lời mời kết bạn cho B, hoặc ngược lại\n","import React from \"react\";\nimport { gql, makeVar, useQuery } from \"@apollo/client\";\nexport const FRIEND_LIST = gql`\n  query($id: ID!) {\n    allRelationships(where: { to: { id: $id }, isAccepted: false }) {\n      id\n      isAccepted\n      createdBy {\n        id\n        phone\n        name\n        avatar {\n          publicUrl\n        }\n      }\n      to {\n        id\n        phone\n        name\n        avatar {\n          publicUrl\n        }\n      }\n    }\n  }\n`;\n\nexport const refetchUserRequest = makeVar(() => {});\n\nexport default function UserList({ UI, where, id, ...props }) {\n  const { loading, error, data = {}, refetch } = useQuery(FRIEND_LIST, {\n    variables: { id },\n  });\n  const { allRelationships = [] } = data;\n  let allUsers = [];\n  allRelationships.map((relationship) => {\n    allUsers.push(relationship?.createdBy);\n  });\n  if (refetch) refetchUserRequest(refetch);\n  return (\n    <UI\n      {...props}\n      loading={loading}\n      error={error}\n      allUsers={allUsers}\n      refetch={refetch}\n      allRelationships={allRelationships}\n    />\n  );\n}\n","import React from \"react\";\nimport { gql, useMutation, useReactiveVar } from \"@apollo/client\";\nimport { refetchUserItem } from \"../../User/Item/Controller\";\nimport { refetchUserRequest } from \"../../User/Request/Controller\";\n\nexport const RELATIONSHIP_UPDATE = gql`\n  mutation($id: ID!, $data: RelationshipUpdateInput) {\n    updateRelationship(id: $id, data: $data) {\n      id\n      to {\n        id\n        name\n      }\n      createdBy {\n        id\n        name\n      }\n      isAccepted\n    }\n  }\n`;\n\nexport default function RelationshipUpdate({\n  UI,\n  children,\n  relationship,\n  id,\n  page,\n}) {\n  const userItemRefetch = useReactiveVar(refetchUserItem);\n  const userRequestRefetch = useReactiveVar(refetchUserRequest);\n  const [on, { loading, error, data = {} }] = useMutation(RELATIONSHIP_UPDATE, {\n    onCompleted: (data) => {\n      page=='FR' ? userRequestRefetch() : userItemRefetch();\n    },\n  });\n  const clickAgree = () => {\n    on({ variables: { id, data: { isAccepted: true } } });\n  };\n  const { updateRelationship } = data;\n  return (\n    <UI loading={loading} error={error} clickAgree={clickAgree} /> ||\n    children({ relationship, on, relationshipUpdated })\n  );\n}\n","import React from \"react\";\nimport { Button } from \"native-base\";\nimport { Text as RNText, Platform } from \"react-native\";\nimport Controller from \"./Controller\";\n\nfunction UI({ error, loading, clickAgree }) {\n  const clickHandler = (e) => {\n    if (!loading) clickAgree();\n  };\n\n  return (\n    <Button\n      _text={{ color: \"white\", fontSize: [\"13\", \"14\"], fontWeight: \"600\" }}\n      p=\"8px\"\n      rounded=\"8px\"\n      w=\"full\"\n      bgColor=\"green.500\"\n      onPress={clickHandler}\n    >\n      {Platform.OS !== \"web\" ? (\n        <RNText\n          style={{\n            fontWeight: \"500\",\n            fontFamily: \"Lexend_500Medium\",\n            color: \"white\",\n            padding: 2,\n          }}\n        >\n          Đồng ý kết bạn\n        </RNText>\n      ) : (\n        \"Đồng ý kết bạn\"\n      )}\n    </Button>\n  );\n}\nexport default function RelationshipUpdateButton(props) {\n  return <Controller {...props} UI={UI} />;\n}\n\n// A đã tạo Relationship tới B, B chưa đồng ý (Relationship đang inActive)\n// B vào tường của A sẽ thấy nút này (đồng ý kết bạn)\n","import React from \"react\";\nimport { gql, useMutation, useReactiveVar } from \"@apollo/client\";\nimport { refetchUserItem } from \"../../User/Item/Controller\";\nimport { refetchUserRequest } from \"../../User/Request/Controller\";\n\nexport const RELATIONSHIP_DELETE = gql`\n  mutation($id: ID!) {\n    deleteRelationship(id: $id) {\n      id\n      isAccepted\n    }\n  }\n`;\n\nexport default function RelationshipDelete({ UI, id , page}) {\n  const userItemRefetch = useReactiveVar(refetchUserItem);\n  const userRequestRefetch = useReactiveVar(refetchUserRequest);\n  const [on, { loading, error, data = {} }] = useMutation(RELATIONSHIP_DELETE, {\n    onCompleted: (data) => {\n      page=='FR' ? userRequestRefetch() : userItemRefetch();\n    },\n  });\n  const { deleteRelationship } = data;\n  const clickDetete = () => {\n    on({ variables: { id } });\n  };\n  return (\n    <UI\n      loading={loading}\n      error={error}\n      clickDetete={clickDetete}\n      relationship={deleteRelationship}\n      id={id}\n    />\n  );\n}\n","import React from \"react\";\nimport { Button } from \"native-base\";\nimport Controller from \"./Controller\";\n\nfunction UI({ error, loading, clickDetete }) {\n  const clickHandler = (e) => {\n    if (confirm(\"Bạn có chắc chắn muốn xoá hem?\") && !loading) clickDetete();\n\n    //if (!loading) clickDetete();\n  };\n\n  return (\n    <Button\n      _text={{ color: \"gray.400\", fontSize: [\"13\", \"14\"], fontWeight: \"600\" }}\n      p=\"8px\"\n      rounded=\"8px\"\n      w=\"full\"\n      bgColor=\"gray.100\"\n      onPress={clickHandler}\n    >\n      Xoá bạn bè\n    </Button>\n  );\n}\nexport default function RelationshipDeleteActive(props) {\n  return <Controller {...props} UI={UI} />;\n}\n\n// A đã tạo Relationship tới B, B đã đồng ý (cập nhật trạng thái Relationship là active)\n// A vào tường của B sẽ thấy nút \"xóa bạn\"\n","import React from \"react\";\nimport { Button } from \"native-base\";\nimport { Text as RNText, Platform } from \"react-native\";\nimport Controller from \"./Controller\";\n\nfunction UI({ error, loading, clickDetete, id }) {\n  const clickHandler = (e) => {\n    if (confirm(\"Bạn có chắc chắn muốn xoá hem?\") && !loading) clickDetete();\n  };\n\n  return (\n    <Button\n      _text={{ color: \"gray.400\", fontSize: [\"13\", \"14\"], fontWeight: \"600\" }}\n      p=\"8px\"\n      rounded=\"8px\"\n      w=\"full\"\n      bgColor=\"gray.100\"\n      onPress={clickHandler}\n    >\n      {Platform.OS !== \"web\" ? (\n        <RNText\n          style={{\n            fontWeight: \"500\",\n            fontFamily: \"Lexend_500Medium\",\n            color: \"#a1a1aa\",\n            padding: 2,\n          }}\n        >\n          Xoá lời mời\n        </RNText>\n      ) : (\n        \"Xoá lời mời\"\n      )}\n    </Button>\n  );\n}\nexport default function RelationshipDeleteDelete(props) {\n  return <Controller {...props} UI={UI} />;\n}\n\n// A đã tạo Relationship tới B, B chưa đồng ý (Relationship đang inActive)\n// B vào tường A thấy nút \"xóa lời mời\"\n","import React, { useState } from \"react\";\nimport { HStack, VStack, Box, Image, Text, Divider } from \"native-base\";\nimport {\n  RelationshipCreateButton,\n  RelationshipDeleteDelete,\n} from \"../../Relationship\";\nimport Controller from \"./Controller\";\nimport { Link } from \"@react-navigation/native\";\n\nfunction UI({ loading, error, friendsSuggest = [], count, refetch }) {\n  const [suggested] = friendsSuggest;\n  if (!suggested) {\n    return (\n      <VStack w=\"100%\">\n        <Text\n          textAlign=\"center\"\n          fontSize=\"18px\"\n          fontWeight=\"600\"\n          color=\"gray.700\"\n          mt=\"40px\"\n        >\n          Bạn không có gợi ý kết bạn nào\n        </Text>\n      </VStack>\n    );\n  }\n\n  return (\n    <VStack w=\"100%\">\n      <Box w=\"full\" mt=\"20px\" mb=\"8px\" px=\"0.5%\">\n        <Text fontSize=\"18px\" fontWeight=\"600\" color=\"gray.700\">\n          Những người bạn có thể biết\n        </Text>\n      </Box>\n      <HStack\n        maxW=\"100%\"\n        mx=\"auto\"\n        w=\"100%\"\n        flexWrap=\"wrap\"\n        justifyContent=\"flex-start\"\n      >\n        {friendsSuggest.map((user) => (\n          <VStack\n            key={user.id}\n            p=\"12px\"\n            minW={[\"49%\", \"32%\", \"24%\"]}\n            m=\"0.5%\"\n            space={[\"4px\", \"6px\"]}\n            alignItems=\"center\"\n            borderWidth=\"1px\"\n            borderColor=\"gray.100\"\n            rounded=\"8px\"\n          >\n            <Box>\n              <Link to={{ screen: \"users\", params: { id: user.id } }}>\n                <Image\n                  source={{\n                    uri:\n                      \"https://odanang.net\" +\n                      (user?.avatar?.publicUrl || \"/upload/img/no-image.png\"),\n                  }}\n                  alt={user.name}\n                  size=\"80px\"\n                  mx=\"auto\"\n                  mt=\"8px\"\n                  rounded=\"100\"\n                />\n              </Link>\n            </Box>\n            <Link to={{ screen: \"users\", params: { id: user.id } }}>\n              <Box my=\"1\">\n                <Text fontWeight=\"600\" color=\"gray.700\">\n                  {user.name}\n                </Text>\n              </Box>\n            </Link>\n            <RelationshipCreateButton toId={user.id} page={\"SF\"} />\n          </VStack>\n        ))}\n      </HStack>\n    </VStack>\n  );\n}\nexport default function UserListSuggest(props) {\n  return <Controller {...props} UI={UI} />;\n}\n","import { Text } from \"native-base\";\nimport React from \"react\";\nimport Controller from \"./Controller\";\nfunction UI({ count }) {\n  return (\n    <Text fontSize=\"inherit\" fontWeight=\"inherit\">\n      {count}\n    </Text>\n  );\n}\nexport { UI };\nexport default function UserListCount(props) {\n  return <Controller {...props} UI={UI} />;\n}\n","import React from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nexport const FRIEND_LIST = gql`\n  query($id: ID!) {\n    allRelationships(\n      where: {\n        OR: [\n          { OR: { createdBy: { id: $id }, isAccepted: true } }\n          { OR: { to: { id: $id }, isAccepted: true } }\n        ]\n      }\n    ) {\n      id\n      isAccepted\n      createdBy {\n        id\n        phone\n        name\n        avatar {\n          publicUrl\n        }\n      }\n      to {\n        id\n        phone\n        name\n        avatar {\n          publicUrl\n        }\n      }\n    }\n  }\n`;\nexport default function UserList({ UI, where, id, ...props }) {\n  const { loading, error, data = {}, refetch  } = useQuery(FRIEND_LIST, {\n    variables: { id },\n  });\n  const { allRelationships = [] } = data;\n  let allUsers = []\n  allRelationships.map((relationship) => {\n    if (relationship?.createdBy?.id === id) allUsers.push(relationship?.to)\n    if (relationship?.to?.id === id) allUsers.push(relationship?.createdBy)\n  })\n  return (\n    <UI\n      {...props}\n      loading={loading}\n      error={error}\n      allUsers={allUsers}\n      refetch={refetch}\n    />\n  );\n}\n","import React, { Fragment, useState } from \"react\";\nimport { HStack, VStack, Box, Image, Text } from \"native-base\";\nimport { Link } from \"@react-navigation/native\";\nimport { RelationshipDeleteActive } from \"../../Relationship\";\nimport Controller from \"../Friends/Controller\";\n\nfunction UI({ loading, error, allUsers }) {\n  const [friends] = allUsers;\n  if (!friends) {\n    return (\n      <VStack w=\"100%\">\n        <Text\n          textAlign=\"center\"\n          fontSize=\"18px\"\n          fontWeight=\"600\"\n          color=\"gray.700\"\n          mt=\"40px\"\n        >\n          Bạn không có bạn bè nào\n        </Text>\n      </VStack>\n    );\n  }\n\n  return (\n    <VStack w=\"100%\">\n      <Box w=\"full\" mt=\"20px\" mb=\"8px\" px=\"0.5%\">\n        <Text fontSize=\"18px\" fontWeight=\"600\" color=\"gray.700\">\n          Tất cả bạn bè\n        </Text>\n      </Box>\n      <HStack\n        maxW=\"full\"\n        mx=\"auto\"\n        w=\"full\"\n        flexWrap=\"wrap\"\n        justifyContent=\"flex-start\"\n      >\n        {allUsers.map((user) => (\n          <VStack\n            key={user.id}\n            p=\"12px\"\n            minW={[\"49%\", \"32%\", \"24%\"]}\n            m=\"0.5%\"\n            space={[\"4px\", \"6px\"]}\n            alignItems=\"center\"\n            borderWidth=\"1px\"\n            borderColor=\"gray.100\"\n            rounded=\"8px\"\n          >\n            <Box>\n              <Link to={{ screen: \"users\", params: { id: user?.id } }}>\n                <Image\n                  source={{\n                    uri:\n                      \"https://odanang.net\" +\n                      (user?.avatar?.publicUrl || \"/upload/img/no-image.png\"),\n                  }}\n                  alt={user?.name}\n                  size=\"80px\"\n                  mx=\"auto\"\n                  mt=\"8px\"\n                  rounded=\"100\"\n                />\n              </Link>\n            </Box>\n            <Link to={{ screen: \"users\", params: { id: user?.id } }}>\n              <Box my=\"1\">\n                <Text color=\"gray.700\" fontWeight=\"600\">\n                  {user.name}\n                </Text>\n              </Box>\n            </Link>\n            <RelationshipDeleteActive toId={user.id} page={\"SF\"} />\n          </VStack>\n        ))}\n      </HStack>\n    </VStack>\n  );\n}\nexport { UI };\nexport default function UserListSimple(props) {\n  return <Controller {...props} UI={UI} />;\n}\n","import React from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nexport const SEARCH_USER = gql`\n  query($keyword: String) {\n    allUsers(\n      where: {\n        OR: [\n          { OR: { name_contains_i: $keyword } }\n          { OR: { phone_contains: $keyword } }\n        ]\n      }\n    ) {\n      id\n      phone\n      name\n      avatar {\n        publicUrl\n      }\n    }\n  }\n`;\nexport const RELATIONSHIP = gql`\n  query($my_id: ID!, $id: ID!) {\n    allRelationships(\n      where: {\n        OR: [\n          { OR: { createdBy: { id: $my_id }, to: { id: $id } } }\n          { OR: { createdBy: { id: $id }, to: { id: $my_id } } }\n        ]\n      }\n    ) {\n      id\n      isAccepted\n      createdBy {\n        id\n      }\n      to {\n        id\n      }\n    }\n  }\n`;\nexport default function UserList({ UI, keyword, my_id }) {\n  const { loading, error, data = {} } = useQuery(SEARCH_USER, {\n    variables: { keyword },\n  });\n  const { allUsers = [] } = data;\n  // let relationship = []\n  // allUsers.map((user) => {\n  //   const { loading, error, data = {} } = useQuery(RELATIONSHIP, {\n  //     variables: { id: user.id, my_id: my_id },\n  //   });\n  //   const { allRelationships = [] } = data;\n  //   if (allRelationships.length === 0) {\n  //     relationship.push(null)\n  //   } else {\n  //     relationship.push(allRelationships[0])\n  //   }\n  // })\n  return (\n    <UI\n      loading={loading}\n      error={error}\n      allUsers={allUsers}\n    />\n  );\n}\n","import React from \"react\";\nimport { HStack, VStack, Box, Image, Text } from \"native-base\";\nimport { Link } from \"@react-navigation/native\";\nimport {\n  RelationshipCreateButton,\n  RelationshipDeleteDelete,\n  RelationshipUpdateButton,\n  RelationshipDeleteActive,\n  RelationshipDeleteCancel,\n} from \"../../Relationship\";\nimport Controller from \"./Controller\";\n\nfunction UI({ loading, error, allUsers = [] }) {\n  const [result] = allUsers;\n  if (!result) {\n    return (\n      <VStack w=\"100%\">\n        <Text\n          textAlign=\"center\"\n          fontSize=\"18px\"\n          fontWeight=\"600\"\n          color=\"gray.700\"\n          mt=\"40px\"\n        >\n          Không tìm thấy kết quả phù hợp\n        </Text>\n      </VStack>\n    );\n  }\n\n  return (\n    <VStack>\n      <HStack\n        maxw=\"full\"\n        mx=\"auto\"\n        w=\"full\"\n        flexWrap=\"wrap\"\n        justifyContent=\"flex-start\"\n      >\n        {allUsers.map((user) => (\n          <HStack\n            key={user.id}\n            p={[\"3\", \"4\"]}\n            pl={[\"2\", \"4\"]}\n            minW={[\"100%\", \"99%\"]}\n            m={[\"0\", \"0.5%\"]}\n            my=\"1\"\n            space={[\"0\", \"1.5\"]}\n            alignItems=\"center\"\n            borderWidth=\"1\"\n            borderColor=\"gray.100\"\n            rounded={[\"0\", \"xl\"]}\n            justifyContent=\"space-between\"\n          >\n            <HStack alignItems=\"center\" space={[\"3\", \"4\"]}>\n              <Link to={{ screen: \"users\", params: { id: user.id } }}>\n                <Box>\n                  <Image\n                    source={{\n                      uri:\n                        \"https://odanang.net\" +\n                        (user?.avatar?.publicUrl || \"/upload/img/no-image.png\"),\n                    }}\n                    alt=\"Profile Image\"\n                    size={[\"48px\", \"72px\"]}\n                    mx=\"auto\"\n                    my={[\"2.5\", \"1.5\"]}\n                    rounded=\"100\"\n                  />\n                </Box>\n              </Link>\n              <Link to={{ screen: \"users\", params: { id: user.id } }}>\n                <Text my=\"2\" fontWeight=\"600\">\n                  {user.name}\n                </Text>\n              </Link>\n            </HStack>\n            {\n              <VStack space=\"1.5\">\n                <Box w=\"120px\">\n                  <RelationshipUpdateButton />\n                </Box>\n                <Box w=\"120px\">\n                  <RelationshipDeleteDelete />\n                </Box>\n              </VStack>\n            }\n            {/* {\n              <Box w=\"120px\">\n                <RelationshipCreateButton />\n              </Box>\n            } */}\n            {/* {\n              <Box w=\"120px\">\n                <RelationshipDeleteActive />\n              </Box>\n            } */}\n            {/* {\n              <Box w=\"120px\">\n                <RelationshipDeleteCancel />\n              </Box>\n            } */}\n          </HStack>\n        ))}\n      </HStack>\n    </VStack>\n  );\n}\nexport { UI };\nexport default function UserListSearch(props) {\n  return <Controller {...props} UI={UI} />;\n}\n","import React from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nexport const FRIEND_SUGGEST_FIXED_LIST = gql`\n  query($id: ID!) {\n    allRelationships(\n      where: {\n        OR: [\n          { OR: { createdBy: { id: $id }, isAccepted: true } }\n          { OR: { createdBy: { id: $id }, isAccepted: false } }\n          { OR: { to: { id: $id }, isAccepted: true } }\n          { OR: { to: { id: $id }, isAccepted: false } }\n        ]\n      }\n    ) {\n      id\n      isAccepted\n      createdBy {\n        id\n        phone\n        name\n        avatar {\n          publicUrl\n        }\n      }\n      to {\n        id\n        phone\n        name\n        avatar {\n          publicUrl\n        }\n      }\n    }\n    _allUsersMeta {\n      count\n    }\n    allUsers {\n      id\n      phone\n      name\n      avatar {\n        publicUrl\n      }\n    }\n  }\n`;\nexport default function UserList({ UI, id, ...props }) {\n  const { loading, error, data = {}, refetch } = useQuery(FRIEND_SUGGEST_FIXED_LIST, {\n    variables: { id },\n  });\n  const { allUsers = [], _allUsersMeta = {} } = data;\n  const [user = {}] = allUsers;\n  const { count } = _allUsersMeta;\n  const { allRelationships = [] } = data;\n  let allFriends = []\n  allRelationships.map((relationship) => {\n    if (relationship?.createdBy?.id === id) allFriends.push(relationship?.to)\n    if (relationship?.to?.id === id) allFriends.push(relationship?.createdBy)\n  })\n  let friendsSuggest = []\n  friendsSuggest = allUsers.filter(ar => !allFriends.find(rm => (rm.id === ar.id || ar.id === id)));\n  friendsSuggest = friendsSuggest.slice(0, 4);\n  return (\n    <UI\n      {...props}\n      loading={loading}\n      error={error}\n      friendsSuggest={friendsSuggest}\n      user={user}\n      count={count}\n      refetch={refetch}\n    />\n  );\n}\n\n","import React, { useState } from \"react\";\nimport { HStack, VStack, Box, Image, Text, Heading, Spacer } from \"native-base\";\nimport { Link } from \"@react-navigation/native\";\nimport Controller from \"./Controller\";\n\nfunction UI({ friendsSuggest }) {\n  return (\n    <VStack my=\"2\" w=\"full\">\n      <HStack mb=\"2\" w=\"full\">\n        <Text fontSize=\"16\" fontWeight=\"600\" color=\"gray.400\">\n          Gợi ý cho bạn\n        </Text>\n        <Spacer />\n        <Link to={{ screen: \"friendsuggestion\" }}>\n          <Text color=\"green.500\">Xem thêm</Text>\n        </Link>\n      </HStack>\n\n      {friendsSuggest?.map((user) => (\n        <HStack\n          key={user.id}\n          m=\"1\"\n          mt=\"3\"\n          flex=\"1\"\n          maxw=\"full\"\n          w=\"260px\"\n          alignItems=\"center\"\n          rounded=\"8\"\n          space=\"4\"\n        >\n          <Box>\n            <Image\n              source={{\n                uri:\n                  \"https://odanang.net\" +\n                  (user?.avatar ? user.avatar.publicUrl : \"/upload/img/no-image.png\"),\n              }}\n              alt=\"img\"\n              size=\"8\"\n              mx=\"auto\"\n              rounded=\"100\"\n            />\n          </Box>\n          <Link to={{ screen: \"users\", params: { id: user.id } }}>\n            <Text fontWeight=\"600\" color=\"gray.700\">\n              {user.name}\n            </Text>\n          </Link>\n        </HStack>\n      ))}\n    </VStack>\n  );\n}\nexport default function UserListSuggestFixed(props) {\n  return <Controller {...props} UI={UI} />;\n}\n","import React, { useState } from \"react\";\nimport { HStack, VStack, Box, Image, Text } from \"native-base\";\nimport {\n  RelationshipUpdateButton,\n  RelationshipDeleteDelete,\n} from \"../../Relationship\";\nimport Controller from \"./Controller\";\nimport { Link } from \"@react-navigation/native\";\nfunction UI({ loading, error, allRelationships }) {\n  const [suggested] = allRelationships;\n  if (!suggested) {\n    return (\n      <VStack w=\"100%\">\n        <Text\n          textAlign=\"center\"\n          fontSize=\"18px\"\n          fontWeight=\"600\"\n          color=\"gray.700\"\n          mt=\"40px\"\n        >\n          Bạn không có lời mời kết bạn nào\n        </Text>\n      </VStack>\n    );\n  }\n\n  return (\n    <VStack w=\"100%\">\n      <Box w=\"full\" mt=\"20px\" mb=\"8px\" px=\"0.5%\">\n        <Text fontSize=\"18px\" fontWeight=\"600\" color=\"gray.700\">\n          Lời mời kết bạn\n        </Text>\n      </Box>\n      <HStack\n        maxW=\"full\"\n        mx=\"auto\"\n        w=\"full\"\n        flexWrap=\"wrap\"\n        justifyContent=\"flex-start\"\n      >\n        {allRelationships.map((relationship) => (\n          <VStack\n            key={relationship.id}\n            p=\"12px\"\n            minW={[\"49%\", \"32%\", \"24%\"]}\n            m=\"0.5%\"\n            space={[\"4px\", \"6px\"]}\n            alignItems=\"center\"\n            borderWidth=\"1px\"\n            borderColor=\"gray.100\"\n            rounded=\"8px\"\n          >\n            <Box>\n              <Link to=\"/\">\n                <Image\n                  source={{\n                    uri:\n                      \"https://odanang.net\" +\n                      (relationship?.createdBy?.avatar?.publicUrl ||\n                        \"/upload/img/no-image.png\"),\n                  }}\n                  alt=\"Profile Image\"\n                  size=\"80px\"\n                  mx=\"auto\"\n                  mt=\"8px\"\n                  rounded=\"100\"\n                />\n              </Link>\n            </Box>\n            <Link to=\"/\">\n              <Box my=\"1\">\n                <Text fontWeight=\"600\" color=\"gray.700\">\n                  {relationship?.createdBy?.name}\n                </Text>\n              </Box>\n            </Link>\n            <RelationshipUpdateButton id={relationship.id} page={\"FR\"} />\n            <RelationshipDeleteDelete id={relationship.id} page={\"FR\"} />\n          </VStack>\n        ))}\n      </HStack>\n    </VStack>\n  );\n}\nexport { UI };\nexport default function UserListRequest(props) {\n  return <Controller {...props} UI={UI} />;\n}\n","import React from \"react\";\nimport { Button, Box, Image } from \"native-base\";\n\nfunction UI({ item }) {\n  const singlePostHandler = () => {\n    //console.log(item.id, item.link, item.thumbnailUrl);\n    console.log(item.id, JSON.stringify(item.images));\n  };\n\n  return (\n    <Box w=\"full\" position=\"relative\">\n      {/* <Image\n        source={{\n          uri: item.thumbnailUrl,\n        }}\n        alt=\"Profile Image\"\n        backgroundSize=\"cover\"\n        flex=\"1\"\n        p=\"50%\"\n      /> */}\n      <Image\n        source={{\n          uri:\n            \"https://odanang.net\" +\n            (item?.images[0]?.file?.publicUrl || \"/upload/img/no-image.png\"),\n        }}\n        alt=\"Profile Image\"\n        // backgroundSize=\"cover\"\n        flex=\"1\"\n        p=\"50%\"\n      />\n      <Button\n        onPress={singlePostHandler}\n        position=\"absolute\"\n        w=\"full\"\n        h=\"100%\"\n        bgColor=\"transparent\"\n      ></Button>\n    </Box>\n  );\n}\nexport default UI;\n","import React from \"react\";\nimport ContentLoader from \"react-content-loader\";\nimport { Rect } from \"react-content-loader/native\";\nimport { Box } from \"native-base\";\n\nfunction UI(props) {\n  return (\n    <Box maxW=\"1005\" w=\"full\" mx=\"auto\" p=\"1%\">\n      <ContentLoader\n        speed=\"1\"\n        w=\"full\"\n        mx=\"auto\"\n        viewBox=\"0 0 1005 310\"\n        backgroundColor=\"#f3f3f3\"\n        foregroundColor=\"#ecebeb\"\n        animate=\"true\"\n      >\n        <Rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"325\" height=\"300\" />\n        <Rect x=\"340\" y=\"0\" rx=\"10\" ry=\"10\" width=\"325\" height=\"300\" />\n        <Rect x=\"680\" y=\"0\" rx=\"10\" ry=\"10\" width=\"325\" height=\"300\" />\n      </ContentLoader>\n    </Box>\n  );\n}\nexport default UI;\n","import React, { useContext, useState } from 'react'\nimport { gql, makeVar, useQuery } from '@apollo/client'\nimport { AuthContext } from '../../Provider/Native'\nexport const POST_LIST = gql`\n  query (\n    $first: Int\n    $skip: Int\n    $sortBy: [SortPostsBy!]\n    $where: PostWhereInput\n  ) {\n    _allPostsMeta {\n      count\n    }\n    allPosts(first: $first, skip: $skip, sortBy: $sortBy, where: $where) {\n      id\n      content\n      tags {\n        content\n      }\n      images {\n        file {\n          publicUrl\n        }\n      }\n      interactive {\n        id\n      }\n      createdAt\n      createdBy {\n        id\n        name\n        avatar {\n          publicUrl\n        }\n      }\n    }\n  }\n`\n\nexport default function PostListController({\n  UI,\n  first = 4,\n  skip,\n  sortBy = 'createdAt_DESC',\n  where,\n}) {\n  const { user } = useContext(AuthContext)\n  const {\n    loading,\n    error,\n    data = {},\n    fetchMore,\n    refetch,\n  } = useQuery(POST_LIST, {\n    variables: { first, where, skip, sortBy, user: { id: user.id } },\n  })\n  const [loadingMore, setLoadingMore] = useState(false)\n  const { allPosts = [], _allPostsMeta = {} } = data\n  const { count = 0 } = _allPostsMeta\n  function loadMore(e) {\n    if (loading || error) return\n    setLoadingMore(true)\n    fetchMore({\n      variables: { skip: allPosts.length },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        return {\n          ...previousResult,\n          allPosts: [...previousResult.allPosts, ...fetchMoreResult.allPosts],\n        }\n      },\n    }).finally(() => {\n      setLoadingMore(false)\n    })\n  }\n\n  return (\n    <UI\n      loading={loading}\n      error={error}\n      allPosts={allPosts}\n      count={count}\n      loadMore={loadMore}\n      loadingMore={loadingMore}\n    />\n  )\n}\n","import React from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { POST_LIST } from \"../List/Controller\";\n\nexport const GRID_POST = gql`\n  query($id: ID!) {\n    allPosts(sortBy: createdAt_DESC, where: { createdBy: { id: $id } }) {\n      id\n      images {\n        file {\n          publicUrl\n        }\n      }\n    }\n  }\n`;\nexport default function UserItem({ UI, id }) {\n\n  const { loading, error, data = {} } = useQuery(GRID_POST, { variables: { id } });\n  const { allPosts = [] } = data;\n  return <UI loading={loading} error={error} posts={allPosts} />;\n}\n","import React from \"react\";\nimport { HStack, Box, Text } from \"native-base\";\nimport PostItemImageOnly from \"../Item/ImageOnly\";\nimport PostItemSkeletonGrid from \"./SkeletonGrid\";\nimport Controller from \"../../Post/Grid/Controller\";\nimport { useRoute } from \"@react-navigation/core\";\nimport { Link } from \"@react-navigation/native\";\n\nfunction UI({ error, loading, posts }) {\n  // if (loading) return <PostItemSkeletonGrid />;\n  if (loading) return <Text>Loading</Text>;\n  if (error) return \"error\";\n  return (\n    <HStack maxw=\"full\" w=\"full\" flexWrap=\"wrap\" justifyContent=\"flex-start\">\n      {posts.map((item) => (\n        <Box\n          key={item.id}\n          minW={[\"49%\", \"32%\", \"24%\"]}\n          m=\"0.5%\"\n          borderWidth=\"1\"\n          borderColor=\"gray.100\"\n          rounded=\"10\"\n          overflow=\"hidden\"\n        >\n          <Link to={{ screen: \"posts\", params: { id: item?.id } }}>\n            <PostItemImageOnly key={item.id} item={item} />\n          </Link>\n        </Box>\n      ))}\n    </HStack>\n  );\n}\nexport { UI };\nexport default function UserPosts(props) {\n  const { params = {} } = useRoute();\n  const { id } = params;\n  return <Controller {...props} UI={UI} id={id} />;\n}\n","import React, { useContext, useState } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { AuthContext } from \"../../../Provider/Native\";\n\nexport const COMMENT_CREATE = gql`\n  mutation($data: InteractiveCommentCreateInput) {\n    createInteractiveComment(data: $data) {\n     id\n     content\n    }\n  }\n`;\n\nexport default function CommentCreate({ UI, interactive, onCompleted = () => { } }) {\n  const [on, { loading, error, data = {} }] = useMutation(COMMENT_CREATE, {\n    onCompleted: (data) => {\n      console.log(data)\n      onCompleted(data);\n    },\n    onError: e => {\n      console.log(e)\n    }\n  });\n  // \n  const { user } = useContext(AuthContext);\n  const [content, setContent] = useState(\"\");\n\n  const clickCreate = () => {\n    const data = {\n      interactive: {\n        connect: { id: interactive?.id },\n      },\n      content,\n    }\n    console.log(data, interactive)\n    if (!loading && interactive) {\n      on({\n        variables: {\n          data,\n        },\n      });\n    }\n  };\n  const contentChangeHandle = (e) => {\n    setContent(e.target.value);\n  };\n  const userCommentHandle = (e) => {\n    const value = e.target.value;\n    if (!value.trim().length) {\n      return;\n    }\n    clickCreate();\n    setContent(\"\");\n  };\n  return (\n    <UI\n      loading={loading} error={error}\n      content={content}\n      contentChangeHandle={contentChangeHandle}\n      userCommentHandle={userCommentHandle}\n      interactive={interactive} />\n  );\n}\n","import React from 'react'\nimport { Image, Link } from \"native-base\";\nimport Controller from './Controller'\nexport function UI({ user }) {\n    return <Link to={{ screen: \"users\", params: { id: user?.id } }}>\n        <Image\n            source={{\n                uri:\n                    \"https://odanang.net\" + (user?.avatar?.publicUrl ||\n                        \"/upload/img/no-image.png\"),\n            }}\n            alt=\"Profile image\"\n            size=\"8\"\n            rounded=\"100\"\n        />\n    </Link>\n}\nexport default function AuthAvatar(props) {\n    return <Controller {...props} UI={UI} />\n}","import React from \"react\";\nimport { HStack, Box, Input, Text } from \"native-base\";\nimport Controller from \"./Controller\";\nimport AuthAvatar from \"../../../User/Auth/Avatar\";\n\nexport function UI({ loading, content, contentChangeHandle, userCommentHandle }) {\n  if (loading) return <Text>Đang tải</Text>;\n  return (\n    <Box mx=\"auto\" w=\"full\">\n      <HStack space=\"2\" display=\"flex\" flexDirection=\"row\" w=\"full\">\n        <AuthAvatar />\n        <Box flex=\"1\">\n          <Input\n            name=\"comment\"\n            type=\"text\"\n            bgColor=\"white\"\n            p={2}\n            fontSize={14}\n            borderWidth={1}\n            borderColor=\"gray.100\"\n            rounded=\"8\"\n            _focus={{\n              borderColor: \"gray.100\",\n            }}\n            placeholder=\"Viết bình luận ...\"\n            value={content}\n            onChange={contentChangeHandle}\n            onSubmitEditing={userCommentHandle}\n          />\n        </Box>\n      </HStack>\n    </Box>\n  );\n}\nexport default function InteractionCommentCreateSimple(props) {\n  return <Controller {...props} UI={UI} />;\n}\n","import React from 'react'\nimport Controller from './Controller'\nimport { UI } from '../Auth/Avatar'\nexport default function UserAvatar(props) {\n    return <Controller {...props} UI={UI} />\n}","import React from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\n\nexport const COMMENT_DELETE = gql`\n  mutation($id: ID!) {\n    deleteInteractiveComment(id: $id) {\n      id\n      content\n    }\n  }\n`;\n\nexport default function CommentDelete({ UI, id, onCompleted = () => { } }) {\n  const [on, { loading, error, data = {} }] = useMutation(COMMENT_DELETE, {\n    onCompleted: (data) => {\n      onCompleted(data);\n    },\n  });\n  const { deleteInteractiveComment } = data;\n  const clickDetete = () => {\n    on({ variables: { id: id } });\n  };\n  return (\n    <UI\n      loading={loading}\n      error={error}\n      clickDetete={clickDetete}\n      comment={deleteInteractiveComment}\n    />\n  );\n}\n","import React from \"react\";\nimport { Button, Text } from \"native-base\";\nimport Controller from \"./Controller\";\nfunction UI({ loading, error, comment, clickDetete }) {\n  const toggleText = (e) => {\n    console.log(\"Comment Delete Text\");\n  };\n  const handleSubmit = (e) => {\n    clickDetete();\n  };\n  if (loading) return <Text>Đang tải</Text>\n  return (\n    <Button\n      _text={{ color: \"gray.400\", fontSize: \"12\", fontWeight: \"600\" }}\n      p=\"0\"\n      bgColor=\"transparent\"\n      onPress={handleSubmit}\n    >\n      Xoá\n    </Button>\n  );\n}\nexport default function InteractionCommentCreateDelete(props) {\n  return <Controller {...props} UI={UI} />;\n}\n","import React, { useMemo } from \"react\";\nimport { gql, useQuery, makeVar } from \"@apollo/client\";\nexport const COMMENT_LIST = gql`\n  query (\n    $first: Int\n    $skip: Int\n    $where: InteractiveCommentWhereInput\n    $sortBy: [SortInteractiveCommentsBy!]\n  ) {\n    _allInteractiveCommentsMeta(where: $where) {\n      count\n    }\n    allInteractiveComments(\n      first: $first\n      skip: $skip\n      where: $where\n      sortBy: $sortBy\n    ) {\n      id\n      content\n      my_interactive{\n        id\n      }\n    }\n  }\n`;\n\nexport default function CommentListController({\n  UI,\n  first = 5,\n  sortBy = \"createdAt_DESC\",\n  skip,\n  where,\n  refetchInteractiveItem,\n  existing,\n}) {\n  if (existing)\n    return <UI {...existing} />;\n  const {\n    loading,\n    error,\n    data = {},\n    refetch,\n  } = useQuery(COMMENT_LIST, {\n    variables: { first, skip, where, sortBy },\n  });\n  const { _allInteractiveCommentsMeta = {}, allInteractiveComments } = data;\n  const { count } = _allInteractiveCommentsMeta;\n  return useMemo(\n    () => (\n      <UI\n        loading={loading}\n        error={error}\n        allInteractiveComments={allInteractiveComments}\n        count={count}\n        refetchInteractiveItem={refetchInteractiveItem}\n      />\n    ),\n    [loading, error, data]\n  );\n}\n","import React from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { COMMENT_LIST } from \"../List/Controller\";\nexport const COMMENT_ITEM = gql`\n  query ($id: ID!) {\n    InteractiveComment(where: { id: $id }) {\n      id\n      content\n      createdAt\n      createdBy {\n        name\n        avatar {\n          publicUrl\n        }\n        id\n      }\n      my_interactive {\n        id\n      }\n    }\n  }\n`;\n\n\nfunction formatTimeCreate(createdAt) {\n  var dayjs = require(\"dayjs\");\n  let stringTime = \"\";\n  const createdTime = dayjs(createdAt);\n  const now = dayjs();\n  if (now.format(\"DD-MM-YYYY\") === createdTime.format(\"DD-MM-YYYY\")) {\n    if (Number(now.get(\"hour\")) - Number(createdTime.get(\"hour\")) === 0)\n      stringTime =\n        Number(now.get(\"minute\")) -\n        Number(createdTime.get(\"minute\")) +\n        \" phút trước\";\n    else\n      stringTime =\n        Number(now.get(\"hour\")) -\n        Number(createdTime.get(\"hour\")) +\n        \" giờ trước\";\n  } else stringTime = createdTime.format(\"DD-MM-YYYY\");\n  return stringTime;\n}\n\n\n\nexport function CommenItemController({ UI, id, where, existing = {} }) {\n  if (existing) {\n    const timeAgo = formatTimeCreate(existing.comment?.createdAt);\n    return <UI {...existing}\n      timeAgo={timeAgo} />;\n  }\n  const {\n    loading,\n    error,\n    data = {},\n  } = useQuery(id ? COMMENT_ITEM : COMMENT_LIST, {\n    variables: id ? { id } : { where },\n  });\n  const { allInteractiveComments, InteractiveComment } = data;\n  const [comment] = allInteractiveComments || [InteractiveComment];\n  const timeAgo = formatTimeCreate(comment?.createdAt);\n\n  return (\n    <UI\n      loading={loading}\n      error={error}\n      comment={comment}\n      refetchInteractiveItem={refetchInteractiveItem}\n      timeAgo={timeAgo}\n    />\n  );\n}\n","import React from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nexport const INTERACTIVE_LIST = gql`\n  query(\n    $first: Int\n    $skip: Int\n    $sortBy: [SortInteractiveCommentsBy!]\n    $where: InteractiveWhereInput\n  ) {\n    _allInteractivesMeta(where: $where) {\n      count\n    }\n    allInteractives(where: $where) {\n      id\n      comments(sortBy: $sortBy, first: $first, skip: $skip) {\n        id\n        content\n        createdAt\n        createdBy {\n          id\n          name\n          avatar {\n            publicUrl\n          }\n        }\n        my_interactive {\n          id\n          reactions {\n            id\n            emoji\n            createdBy {\n              id\n            }\n          }\n          _reactionsMeta {\n            count\n          }\n        }\n      }\n      _commentsMeta {\n        count\n      }\n      reactions {\n        id\n        emoji\n        createdBy {\n          name\n          avatar {\n            publicUrl\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function InteractiveListController({\n  UI,\n  first = 3,\n  skip,\n  sortBy,\n  where,\n  ...props\n}) {\n  const { loading, error, data = {}, fetchMore, refetch } = useQuery(\n    INTERACTIVE_LIST,\n    {\n      variables: { first, where, skip, sortBy },\n    }\n  );\n  const { allInteractives, _allInteractivesMeta = {} } = data;\n  const { comments } = allInteractives;\n  const { count = 0 } = allInteractives._commentsMeta;\n  console.log(count);\n  function getMore(e) {\n    if (loading || error) return;\n    if (count <= comments.length) return;\n    fetchMore({\n      variables: { skip: allPosts.length },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        return {\n          ...previousResult,\n          allPosts: [...previousResult.allPosts, ...fetchMoreResult.allPosts],\n        };\n      },\n    });\n  }\n  return (\n    <UI\n      {...props}\n      loading={loading}\n      error={error}\n      allInteractives={allInteractives}\n      count={count}\n      refetch={refetch}\n    />\n  );\n}\n","import React from \"react\";\nimport { gql, makeVar, useQuery } from \"@apollo/client\";\nimport { INTERACTIVE_LIST } from \"../List/Controller\";\nexport const INTERACTIVE_ITEM = gql`\n  query(\n    $id: ID!\n    $sortBy: [SortInteractiveCommentsBy!]\n    $first: Int\n    $skip: Int\n  ) {\n    Interactive(where:{id: $id}) {\n      id\n      comments(sortBy: $sortBy, first: $first, skip: $skip) {\n        id\n        content\n        createdAt\n        createdBy {\n          id\n          name\n          avatar {\n            publicUrl\n          }\n        }\n        interactive {\n          id\n          _commentsMeta {\n            count\n          }\n        }\n        my_interactive{\n          id\n        }\n      }\n      _commentsMeta {\n        count\n      }\n      reactions {\n        id\n        emoji\n        createdBy {\n          name\n          avatar {\n            publicUrl\n          }\n        }\n      }\n      _reactionsMeta {\n        count\n      }\n      createdAt\n    }\n    user: authenticatedUser {\n      id\n      phone\n      name\n      email\n      avatar {\n        publicUrl\n      }\n      gender\n      description\n    }\n  }\n`;\nfunction formatTimeCreate(createdAt) {\n  var dayjs = require(\"dayjs\");\n  let stringTime = \"\";\n  const createdTime = dayjs(createdAt);\n  const now = dayjs();\n  if (now.format(\"DD-MM-YYYY\") === createdTime.format(\"DD-MM-YYYY\")) {\n    if (Number(now.get(\"hour\")) - Number(createdTime.get(\"hour\")) === 0)\n      stringTime =\n        Number(now.get(\"minute\")) -\n        Number(createdTime.get(\"minute\")) +\n        \" phút trước\";\n    else\n      stringTime =\n        Number(now.get(\"hour\")) -\n        Number(createdTime.get(\"hour\")) +\n        \" giờ trước\";\n  } else stringTime = createdTime.format(\"DD-MM-YYYY\");\n  return stringTime;\n}\n\nexport default function InteractiveItem({\n  UI,\n  id,\n  where,\n  sortBy,\n  first = 3,\n  skip,\n}) {\n  const { loading, error, data = {}, fetchMore, refetch } = useQuery(\n    id ? INTERACTIVE_ITEM : INTERACTIVE_LIST,\n    {\n      variables: id ? { id, sortBy, first } : { where, sortBy, first, skip },\n    }\n  );\n  const { Interactive: interactive = {}, user = {} } = data;\n  const timeAgo = formatTimeCreate(interactive?.createdAt);\n  function loadMore(e) {\n    if (loading || error) return\n    fetchMore({\n      variables: { skip: interactive.comments.length },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        const [{ Interactive: { comments: previousComments = [] } },\n          { Interactive: { comments: fetchMoreComments = [] } }] = [previousResult, fetchMoreResult]\n        return {\n          ...previousResult,\n          Interactive: {\n            ...previousResult.Interactive,\n            comments: [...previousComments, ...fetchMoreComments]\n          }\n        }\n      },\n    }).finally(() => { })\n  }\n  return (\n    <UI\n      loading={loading}\n      error={error}\n      interactive={interactive}\n      user={user}\n      refetch={refetch}\n      loadMore={loadMore}\n      timeAgo={timeAgo}\n    />\n  );\n}\n","import { gql, useMutation } from \"@apollo/client\";\n\nexport const REACTION_DELETE = gql`\n  mutation($id: ID!) {\n    deleteInteractiveReaction(id: $id) {\n      id\n      emoji\n    }\n  }\n`;\n\nexport default function ReactionDelete({ UI, id, refetch }) {\n  const refetchPostItem = () => {\n    refetch();\n  };\n  const [on, { loading, error, data = {} }] = useMutation(REACTION_DELETE,{\n    onCompleted: (data) => {\n      refetchPostItem();\n    }\n  });\n  const { deleteInteractiveReaction } = data;\n  return (\n    <UI\n      loading={loading}\n      error={error}\n      onDelete={on}\n      deletedReaction={deleteInteractiveReaction}\n    />\n  );\n}\n","import React from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nexport const REACTION_LIST = gql`\n  query($where: InteractiveReactionWhereInput) {\n    _allInteractiveReactionsMeta(where: $where) {\n      count\n    }\n    allInteractiveReactions(where: $where) {\n      id\n      emoji\n    }\n  }\n`;\n\nexport default function ReactionListController({ UI, where, existing }) {\n  if (existing) return <UI {...existing} />\n  const { loading, error, data = {}, refetch } = useQuery(REACTION_LIST, {\n    variables: { where },\n  });\n  const { allInteractiveReactions = [], _allInteractiveReactionsMeta = {} } = data;\n  const { count = 0 } = _allInteractiveReactionsMeta\n  return (\n    <UI\n      loading={loading}\n      error={error}\n      allInteractiveReactions={allInteractiveReactions}\n      count={count}\n    />\n  );\n}\n","import React, { useContext } from \"react\";\nimport { gql, useMutation, useQuery } from \"@apollo/client\";\nimport { REACTION_DELETE } from \"../Delete/Controller\";\nimport { REACTION_LIST } from \"../List/Controller\";\nimport { AuthContext } from \"../../../Provider/Native\";\nimport { Text } from \"native-base\";\nexport const REACTION_CREATE = gql`\n  mutation($data: InteractiveReactionCreateInput) {\n    createInteractiveReaction(data: $data) {\n      id\n    }\n  }\n`;\nexport default function ReactionCreate({\n  UI,\n  interactive = {},\n  onCompleted = () => {},\n  onError = () => {},\n}) {\n  const { user } = useContext(AuthContext);\n  if (!user) return <Text>Đang tải</Text>;\n  // QUERY\n  const { loading, error, data = {}, refetch } = useQuery(REACTION_LIST, {\n    variables: {\n      where: {\n        createdBy: { id: user.id },\n        interactive: { id: interactive.id },\n      },\n    },\n  });\n  const {\n    _allInteractiveReactionsMeta = {},\n    allInteractiveReactions = [],\n  } = data;\n  const reacted = _allInteractiveReactionsMeta.count || 0;\n\n  // MUTATION\n  const [onCreate, createResult] = useMutation(REACTION_CREATE, {\n    onCompleted: (data) => {\n      refetch();\n      onCompleted(data);\n    },\n    onError: (e) => {\n      refetch();\n      onError(e);\n    },\n  });\n  const [onDelete, deleteResult] = useMutation(REACTION_DELETE, {\n    onCompleted: (data) => {\n      refetch();\n      onCompleted(data);\n    },\n    onError: (e) => {\n      refetch();\n      onError(e);\n    },\n  });\n  function handleClick(e) {\n    if (loading) return;\n    if (reacted) {\n      allInteractiveReactions.map((reaction) => {\n        onDelete({ variables: { id: reaction.id } });\n      });\n    } else {\n      if (interactive) {\n        onCreate({\n          variables: {\n            data: {\n              interactive: { connect: { id: interactive.id } },\n              emoji: \"like\",\n            },\n          },\n        });\n      }\n    }\n  }\n\n  return (\n    <UI\n      loading={loading}\n      interactive={interactive}\n      handleClick={handleClick}\n      createResult={createResult}\n      deleteResult={deleteResult}\n      reacted={reacted}\n    />\n  );\n}\n","import React, { Fragment, useContext, useState } from \"react\";\nimport { Button, Text } from \"native-base\";\nimport Controller from \"./Controller\";\nimport { AuthContext } from \"../../../Provider/Native\";\n\nfunction UI({\n  interactive,\n  handleClick,\n  createResult,\n  deleteResult,\n  reactions,\n  reacted,\n}) {\n  if (createResult.loading) return <Text>Đang tải</Text>;\n  if (deleteResult.loading) return <Text>Đang tải</Text>;\n  return (\n    <Fragment>\n      {reacted ? (\n        <Button\n          _text={{ color: \"green.500\", fontSize: \"12\", fontWeight: \"600\" }}\n          p=\"0\"\n          bgColor=\"transparent\"\n          onPress={handleClick}\n        >\n          Thích\n        </Button>\n      ) : (\n        <Button\n          _text={{ color: \"gray.400\", fontSize: \"12\", fontWeight: \"600\" }}\n          p=\"0\"\n          bgColor=\"transparent\"\n          onPress={handleClick}\n        >\n          Thích\n        </Button>\n      )}\n    </Fragment>\n  );\n}\nexport default function InteractionReactionCreateText(props) {\n  return <Controller {...props} UI={UI} />;\n}\n","import React, { useState, Fragment, useContext } from \"react\";\nimport { Button, Text } from \"native-base\";\nimport { FaRegHeart, FaHeart } from \"react-icons/fa\";\nimport Controller from \"./Controller\";\nimport { AuthContext } from \"../../../Provider/Native\";\nimport FontAwesome from \"react-native-vector-icons/FontAwesome\";\n\nFontAwesome.loadFont();\n\nexport function UI({ handleClick, createResult, deleteResult, reacted }) {\n  if (createResult.loading) return <Text>Đang tải</Text>;\n  if (deleteResult.loading) return <Text>Đang tải</Text>;\n\n  return (\n    <Fragment>\n      {reacted ? (\n        <Button\n          _text={{ color: \"green.500\", fontSize: \"14\", fontWeight: \"600\" }}\n          p=\"2\"\n          bgColor=\"transparent\"\n          leftIcon={\n            <FontAwesome\n              name=\"heart\"\n              color=\"#22c55e\"\n              size={18}\n              style={{ marginTop: \"-2px\" }}\n            />\n          }\n          _hover={{ bgColor: \"gray.100\" }}\n          onPress={handleClick}\n        >\n          Thích\n        </Button>\n      ) : (\n        <Button\n          _text={{ color: \"gray.400\", fontSize: \"14\", fontWeight: \"600\" }}\n          p=\"2\"\n          bgColor=\"transparent\"\n          leftIcon={\n            <FontAwesome\n              name=\"heart-o\"\n              color=\"#a1a1aa\"\n              size={18}\n              style={{ marginTop: \"-2px\" }}\n            />\n          }\n          _hover={{ bgColor: \"gray.100\" }}\n          onPress={handleClick}\n        >\n          Thích\n        </Button>\n      )}\n    </Fragment>\n  );\n}\nexport default function InteractionReactionCreateButton(props) {\n  return <Controller {...props} UI={UI} />;\n}\n","import React from \"react\";\nimport { Text } from \"native-base\";\nimport Controller from \"./Controller\";\n\nfunction UI({ loading, error, allInteractiveReactions = [], count = 0 }) {\n  return loading ? (\n    <Text>...</Text>\n  ) : (\n    <Text color=\"gray.400\" fontSize=\"12\" fontWeight=\"600\">\n      {count ? count + ' lượt thích' : ''}\n    </Text>\n  );\n}\nexport default function InteractionReactionListTextWithCount(props) {\n  return <Controller {...props} UI={UI} />;\n}\n","import React from \"react\";\nimport { HStack, Text } from \"native-base\";\nimport Controller from \"./Controller\";\nimport FontAwesome from \"react-native-vector-icons/FontAwesome\";\n\nFontAwesome.loadFont();\n\nfunction UI({ loading, error, allInteractiveReactions = [], count = 0 }) {\n  return loading ? (\n    <Text>...</Text>\n  ) : (\n    <HStack alignItems=\"center\" space=\"1\">\n      <FontAwesome\n        name=\"heart\"\n        color=\"#22c55e\"\n        size={18}\n        style={{ marginTop: \"-2px\" }}\n      />\n      <Text color=\"gray.800\" fontSize=\"14\" fontWeight=\"500\">\n        {count ? count + ' lượt thích' : 'Hãy là người đầu tiên thích'}\n\n      </Text>\n    </HStack>\n  );\n}\nexport default function InteractionReactionListIconTextWithCount(props) {\n  return <Controller {...props} UI={UI} />;\n}\n","import React, { Fragment, useState } from \"react\";\nimport { Box, HStack, Text } from \"native-base\";\nimport Controller from \"./Controller\";\nimport { InteractionReactionCreateText, InteractionReactionListTextWithCount } from \"../Reaction\";\nexport function UI({ loading, error, timeAgo, interactive, user = {}, refetch, loadMore, count }) {\n  const [openComment, setOpenComment] = useState(true)\n  function pressComment() {\n    setOpenComment(status => !status)\n  }\n  if (loading) return <Text>Đang tải</Text>;\n  return (\n    <HStack space=\"2\">\n      <InteractionReactionCreateText\n        interactive={interactive}\n        onCompleted={data => {\n          refetch()\n        }}\n      />\n      <InteractionReactionListTextWithCount\n        existing={{ count: interactive._reactionsMeta.count }}\n      />\n      <Text color=\"gray.400\" fontSize=\"12\">\n        {timeAgo}\n      </Text>\n    </HStack>\n\n  );\n}\nexport default function InteractiveItemShort(props) {\n  return <Controller {...props} UI={UI} />;\n}\n","import React, { useContext } from \"react\";\nimport ItemAvatar from \"../../../User/Item/Avatar\";\nimport DeleteText from \"../Delete/Text\";\nimport { HStack, Box, Text } from \"native-base\";\nimport { CommenItemController } from \"./Controller\";\nimport { Link } from \"@react-navigation/native\";\nimport { AuthContext } from \"../../../Provider/Native\";\nimport InteractiveItemShort from \"../../Item/Short\";\n\nfunction formatTimeCreate(createdAt) {\n  var dayjs = require(\"dayjs\");\n  let stringTime = \"\";\n  const createdTime = dayjs(createdAt);\n  const now = dayjs();\n  if (now.format(\"DD-MM-YYYY\") === createdTime.format(\"DD-MM-YYYY\")) {\n    if (Number(now.get(\"hour\")) - Number(createdTime.get(\"hour\")) === 0)\n      stringTime =\n        Number(now.get(\"minute\")) -\n        Number(createdTime.get(\"minute\")) +\n        \" phút trước\";\n    else\n      stringTime =\n        Number(now.get(\"hour\")) -\n        Number(createdTime.get(\"hour\")) +\n        \" giờ trước\";\n  } else stringTime = createdTime.format(\"DD-MM-YYYY\");\n  return stringTime;\n}\n\nexport function UI({\n  loading,\n  error,\n  comment = {},\n  refetch,\n  timeAgo,\n  onDeleted,\n}) {\n  const { user = {} } = useContext(AuthContext);\n  const { interactive = {} } = comment;\n  const { _commentsMeta = {} } = interactive;\n  if (loading) return <Text>Đang tải</Text>;\n  return (\n    <Box mx=\"auto\" my=\"2\" w=\"full\">\n      <HStack space=\"2\" display=\"flex\" flexDirection=\"row\" w=\"full\">\n        <ItemAvatar existing={{ user: comment.createdBy }} />\n        <Box flex=\"1\">\n          <Box bgColor=\"gray.50\" rounded=\"8\" p=\"2\" px=\"3\" flex=\"1\" w=\"full\">\n            <Link\n              to={{ screen: \"users\", params: { id: comment?.createdBy?.id } }}\n            >\n              <Text color=\"gray.900\" fontWeight=\"600\" fontSize=\"14\">\n                {comment?.createdBy?.name}\n              </Text>\n            </Link>\n            <Text color=\"gray.700\" lineHeight=\"18\">\n              {comment?.content}\n            </Text>\n          </Box>\n          <HStack mt=\"1\" ml=\"1\" space=\"2\">\n            {comment.my_interactive && (\n              <InteractiveItemShort id={comment.my_interactive.id} />\n            )}\n            <Box ml=\"auto\">\n              {comment.createdBy && user.id === comment.createdBy.id && (\n                <DeleteText id={comment.id} onCompleted={onDeleted} />\n              )}\n            </Box>\n          </HStack>\n        </Box>\n      </HStack>\n    </Box>\n  );\n}\nexport default function InteractionCommentItemSimple(props) {\n  return <CommenItemController {...props} UI={UI} />;\n}\n","import React from \"react\";\nimport InteractionCommentItemSimple from \"../Item/Simple\";\nimport { Button, Text, VStack } from \"native-base\";\nimport Controller from \"./Controller\";\nimport { InteractionCommentCreateSimple } from \"..\";\n\nexport function UI({\n  loading,\n  error,\n  allInteractiveComments = [], interactive,\n  count = 0,\n  refetch = () => { },\n  getMore,\n}) {\n  if (loading) return <Text>Đang tải</Text>;\n  return (\n    <VStack>\n      <InteractionCommentCreateSimple\n        my=\"10\"\n        interactive={interactive}\n        onCompleted={data => {\n          refetch()\n        }}\n      />\n      {allInteractiveComments.map((comment) => {\n        return (\n          <InteractionCommentItemSimple\n            key={comment.id}\n            existing={{ comment, onDeleted: data => { refetch() } }}\n          />\n        );\n      })}\n      {count > allInteractiveComments.length && (\n        <Button\n          _text={{\n            color: \"gray.500\",\n            fontSize: \"12\",\n            fontWeight: \"600\",\n          }}\n          p=\"0\"\n          bgColor=\"transparent\"\n          onPress={getMore}\n        >\n          Xem thêm bình luận\n        </Button>\n      )}\n    </VStack>\n  );\n}\nexport default function InteractionCommentListSimple(props) {\n  return <Controller {...props} UI={UI} />;\n}\n","import React from \"react\";\nimport { Button } from \"native-base\";\nimport FontAwesome from \"react-native-vector-icons/FontAwesome\";\n\nFontAwesome.loadFont();\n\nfunction UI({ onPress }) {\n  return (\n    <Button\n      _text={{ color: \"gray.400\", fontSize: \"14\", fontWeight: \"600\" }}\n      p=\"2\"\n      bgColor=\"transparent\"\n      leftIcon={\n        <FontAwesome\n          name=\"comment-o\"\n          color=\"#a1a1aa\"\n          size={18}\n          style={{ marginTop: \"-4px\" }}\n        />\n      }\n      _hover={{ bgColor: \"gray.100\" }}\n      onPress={onPress}\n    >\n      Bình luận\n    </Button>\n  );\n}\nexport default UI;\n","import React from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\n\nexport const COMMENT_UPDATE = gql`\n  mutation($id: ID!, $data: InteractiveCommentUpdateInput) {\n    updateInteractiveComment(id: $id, data: $data) {\n      id\n      content\n    }\n  }\n`;\n\nexport default function CommentUpdate({ UI, comment, ...props }) {\n  const [on, { loading, error, data = {} }] = useMutation(COMMENT_UPDATE, {\n    onCompleted: (data) => {\n      console.log(data);\n    },\n    onError: (e) => {\n      console.error(e);\n    },\n  });\n  const onPress = (e) => {\n    on({\n      variables: { id: comment.id, data: { interactive: { create: {} } } },\n    });\n  };\n  const { commentUpdate } = data;\n  return (\n    <UI\n      loading={loading}\n      error={error}\n      comment={comment}\n      on={on}\n      commentUpdate={commentUpdate}\n      onPress={onPress}\n    />\n  );\n}\n","import React from \"react\";\nimport { HStack, Box, VStack, Text, Divider } from \"native-base\";\nimport { PostItemImageOnly } from \"../../Post\";\n// import PostItemSkeletonGrid from \"./SkeletonGrid\";\n\nconst data = [\n  {\n    id: 1,\n    link: \"#\",\n    thumbnailUrl:\n      \"https://vcdn1-dulich.vnecdn.net/2018/10/27/home-venice-italy.jpg?w=1200&h=0&q=100&dpr=1&fit=crop&s=PnlZagm9qKzpioNh9CVmUA\",\n  },\n  {\n    id: 2,\n    link: \"#\",\n    thumbnailUrl:\n      \"https://res.cloudinary.com/cloudinaryassets/image/upload/v1632806027/241259419_246687107340299_4139464774758156957_n_s1zuao.jpg\",\n  },\n  {\n    id: 3,\n    link: \"#\",\n    thumbnailUrl: \"https://static.toiimg.com/photo/84475061.cms\",\n  },\n  {\n    id: 4,\n    link: \"#\",\n    thumbnailUrl:\n      \"http://tonyenglish.vn/uploads/news/2019/0106/1546787257_MW-GY949_travel_20181122135819_ZH.jpg\",\n  },\n  {\n    id: 5,\n    link: \"#\",\n    thumbnailUrl:\n      \"https://res.cloudinary.com/cloudinaryassets/image/upload/v1632719776/190312313_2943016239348813_282704590362946930_n_pc3vbb.jpg\",\n  },\n  {\n    id: 6,\n    link: \"#\",\n    thumbnailUrl:\n      \"https://tuandungtravel.com/wp-content/uploads/2019/07/du-lich-ba-na-hills-tuan-dung-travel-9.jpg\",\n  },\n];\n\nfunction UI(loading) {\n  // if (loading) {\n  //   return <PostItemSkeletonGrid />;\n  // }\n\n  return (\n    <VStack w=\"full\">\n      <Box w=\"full\" mt=\"20px\" mb=\"8px\" px=\"0.5%\">\n        <Text fontSize=\"18px\" fontWeight=\"600\" color=\"gray.700\">\n          Bài viết bạn đã lưu\n        </Text>\n      </Box>\n\n      <HStack maxw=\"full\" w=\"full\" flexWrap=\"wrap\" justifyContent=\"flex-start\">\n        {data.map((item) => (\n          <Box\n            key={item.id}\n            minW={[\"49%\", \"32%\", \"24%\"]}\n            m=\"0.5%\"\n            borderWidth=\"1px\"\n            borderColor=\"gray.100\"\n            rounded=\"10px\"\n            overflow=\"hidden\"\n          >\n            <PostItemImageOnly key={item.id} item={item} />\n          </Box>\n        ))}\n      </HStack>\n    </VStack>\n  );\n}\nexport default UI;\n","import React, { useState, Fragment } from \"react\";\nimport { Button } from \"native-base\";\nimport FontAwesome from \"react-native-vector-icons/FontAwesome\";\n\nFontAwesome.loadFont();\n\nfunction UI() {\n  const [isSaved, setIsSaved] = useState(false);\n\n  const saveHandle = (e) => {\n    setIsSaved((prev) => !prev);\n    console.log(\"Album Create Button\");\n  };\n\n  return (\n    <Fragment>\n      {isSaved && (\n        <Button\n          _text={{ color: \"green.500\", fontSize: \"14\", fontWeight: \"600\" }}\n          p=\"2\"\n          bgColor=\"transparent\"\n          leftIcon={<FontAwesome name=\"bookmark\" color=\"#22c55e\" size={18} />}\n          _hover={{ bgColor: \"gray.100\" }}\n          onPress={saveHandle}\n        >\n          Lưu\n        </Button>\n      )}\n      {!isSaved && (\n        <Button\n          _text={{ color: \"gray.400\", fontSize: \"14\", fontWeight: \"600\" }}\n          p=\"2\"\n          bgColor=\"transparent\"\n          leftIcon={<FontAwesome name=\"bookmark-o\" color=\"#a1a1aa\" size={18} />}\n          _hover={{ bgColor: \"gray.100\" }}\n          onPress={saveHandle}\n        >\n          Lưu\n        </Button>\n      )}\n    </Fragment>\n  );\n}\nexport default UI;\n","import React, { useState } from \"react\";\nimport { HStack, Box, Flex, Image, Button } from \"native-base\";\nimport FontAwesome from \"react-native-vector-icons/FontAwesome\";\n\nFontAwesome.loadFont();\n\nfunction UI({ urls = [] }) {\n  const arrowStyles = {\n    position: \"absolute\",\n    top: \"50%\",\n    color: \"gray.700\",\n    p: \"1\",\n    px: \"10px\",\n    fontSize: \"20\",\n    bgColor: \"white\",\n    opacity: \"0.6\",\n    rounded: \"100px\",\n  };\n\n  const [currentSlide, setCurrentSlide] = useState(0);\n\n  const urlsCount = urls.length;\n\n  const prevSlide = () => {\n    setCurrentSlide((s) => (s === 0 ? urlsCount - 1 : s - 1));\n  };\n  const nextSlide = () => {\n    setCurrentSlide((s) => (s === urlsCount - 1 ? 0 : s + 1));\n  };\n\n  const setSlide = (slide) => {\n    setCurrentSlide(slide);\n  };\n\n  const carouselStyle = {\n    ml: `-${currentSlide * 100}%`,\n  };\n\n  return (\n    <Flex w=\"full\" alignItems=\"center\" justifyContent=\"center\">\n      <Flex w=\"full\" direction=\"row\" overflow=\"hidden\" position=\"relative\">\n        <Flex direction=\"row\" w=\"full\" {...carouselStyle}>\n          {urls.map((slide, index) => (\n            <Box key={`slide-${index}`} boxSize=\"100%\">\n              <Image\n                src={slide}\n                alt=\"Slide Image\"\n                // backgroundSize=\"cover\"\n                flex=\"1\"\n                p=\"50%\"\n              />\n            </Box>\n          ))}\n        </Flex>\n        <Button {...arrowStyles} left=\"3\" onPress={prevSlide}>\n          <FontAwesome\n            name=\"angle-left\"\n            color=\"#000\"\n            size={18}\n            style={{ marginRight: 1 }}\n          />\n        </Button>\n        <Button {...arrowStyles} right=\"3\" onPress={nextSlide}>\n          <FontAwesome\n            name=\"angle-right\"\n            color=\"#000\"\n            size={18}\n            style={{ marginLeft: 1 }}\n          />\n        </Button>\n        <HStack direction=\"row\" position=\"absolute\" bottom=\"2\" right=\"2\">\n          {Array.from({ length: urlsCount }).map((_, slide) => (\n            <Button\n              key={`dots-${slide}`}\n              w=\"1\"\n              m=\"0.5\"\n              p=\"1\"\n              rounded=\"100\"\n              opacity=\"0.8\"\n              bgColor={currentSlide === slide ? \"green.500\" : \"white\"}\n              onPress={() => setSlide(slide)}\n            ></Button>\n          ))}\n        </HStack>\n      </Flex>\n    </Flex>\n  );\n}\nexport default UI;\n","import React from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { POST_LIST } from \"../List/Controller\";\nexport const POST_ITEM = gql`\n  query ($id: ID!) {\n    Post(where: { id: $id }) {\n      id\n      content\n      tags {\n        content\n      }\n      images {\n        file {\n          publicUrl\n        }\n      }\n      interactive {\n        id\n        comments(first: 5, sortBy: createdAt_DESC) {\n          id\n          content\n          createdAt\n          createdBy {\n            id\n            name\n            avatar{\n              publicUrl\n            }\n          }\n        }\n        reactions {\n          id\n          emoji\n          createdAt\n          createdBy {\n            id\n          }\n        }\n        _commentsMeta {\n          count\n        }\n        _reactionsMeta {\n          count\n        }\n      }\n      createdAt\n      createdBy {\n        id\n        name\n        avatar {\n          publicUrl\n        }\n      }\n    }\n  }\n`;\nexport default function PostItem({ UI, id, where, existing = {} }) {\n  if (existing) return <UI {...existing} />;\n\n  if (!id) return \"invalid\";\n\n  const {\n    loading,\n    error,\n    data = {},\n    refetch,\n  } = useQuery(id ? POST_ITEM : POST_LIST, {\n    variables: id ? { id } : { where },\n  });\n\n  const { allPosts, Post } = data;\n  const [post] = allPosts || [Post];\n  return <UI loading={loading} error={error} post={post} refetch={refetch} />;\n}\n","import React, { Fragment, useState } from \"react\";\nimport { Box, HStack, Text, Button } from \"native-base\";\nimport InteractionCommentCreateSimple from \"../Comment/Create/Simple\";\nimport InteractionCommentListSimple from \"../Comment/List/Simple\";\nimport Controller from \"./Controller\";\nimport {\n  InteractionReactionCreateButton,\n  InteractionReactionListIconTextWithCount,\n} from \"../Reaction\";\nimport { InteractionCommentListToggleButton } from \"../Comment\";\nimport { AlbumCreateButton } from \"../../Album\";\n\nexport function UI({\n  loading,\n  error,\n  interactive,\n  user,\n  refetch,\n  loadMore = () => {},\n  count,\n}) {\n  if (loading) return <Text>Đang tải</Text>;\n  return (\n    <Fragment>\n      <Box px=\"3\" mt=\"2\">\n        <InteractionReactionListIconTextWithCount\n          existing={{\n            allInteractiveReactions: interactive.reactions,\n            count: interactive._reactionsMeta.count,\n          }}\n        />\n      </Box>\n      <Box px=\"3\">\n        <HStack\n          w=\"full\"\n          my=\"2\"\n          borderBottomWidth=\"1\"\n          borderBottomColor=\"gray.100\"\n          borderTopWidth=\"1\"\n          borderTopColor=\"gray.100\"\n          justifyContent=\"space-around\"\n        >\n          <Box w=\"33%\">\n            <InteractionReactionCreateButton\n              interactive={interactive}\n              onCompleted={() => {\n                refetch();\n              }}\n              onError={() => {\n                refetch();\n              }}\n            />\n          </Box>\n          <Box w=\"33%\">\n            <InteractionCommentListToggleButton />\n          </Box>\n          <Box w=\"33%\">\n            <AlbumCreateButton />\n          </Box>\n        </HStack>\n      </Box>\n      <Box px=\"3\">\n        <InteractionCommentListSimple\n          existing={{\n            interactive,\n            allInteractiveComments: interactive?.comments,\n            _allInteractiveCommentsMeta: interactive.commentsMeta,\n            refetch,\n          }}\n        />\n        {interactive.comments.length < interactive._commentsMeta.count && (\n          <Button\n            w=\"150px\"\n            bgColor=\"transparent\"\n            _text={{\n              color: \"gray.400\",\n              color: \"black\",\n              fontSize: [\"13\", \"14\"],\n              fontWeight: \"600\",\n            }}\n            rounded=\"8\"\n            onPress={() => {\n              loadMore();\n            }}\n          >\n            Tải thêm bình luận ...\n          </Button>\n        )}\n      </Box>\n    </Fragment>\n  );\n}\nexport default function InteractiveItemSimple(props) {\n  return <Controller {...props} UI={UI} />;\n}\n","import React, { useState, useContext } from \"react\";\nimport { Box, HStack, Image, Text, Button, VStack, Divider } from \"native-base\";\nimport {\n  InteractionCommentCreateSimple,\n  InteractionCommentListSimple,\n  InteractionCommentListToggleButton,\n} from \"../../Interactive/Comment\";\nimport {\n  InteractionReactionCreateButton,\n  InteractionReactionListIconTextWithCount,\n} from \"../../Interactive/Reaction\";\nimport { AlbumCreateButton } from \"../../Album\";\nimport { PostDeleteText, PostUpdateText } from \"../index\";\nimport { UploadImageListCarousel } from \"../../Upload/Image\";\nimport PostItem from \"./Controller\";\nimport Entypo from \"react-native-vector-icons/Entypo\";\n\nEntypo.loadFont();\n\nimport InteractiveItemSimple from \"../../Interactive/Item/Simple\";\nimport { Link } from \"@react-navigation/native\";\nimport { AuthContext } from \"../../Provider/Native\";\n\nfunction formatTimeCreate(createdAt) {\n  var dayjs = require(\"dayjs\");\n  let stringTime = \"\";\n  const createdTime = dayjs(createdAt);\n  const now = dayjs();\n  if (now.format(\"DD-MM-YYYY\") === createdTime.format(\"DD-MM-YYYY\")) {\n    if (Number(now.get(\"hour\")) - Number(createdTime.get(\"hour\")) === 0)\n      stringTime =\n        Number(now.get(\"minute\")) -\n        Number(createdTime.get(\"minute\")) +\n        \" phút trước\";\n    else\n      stringTime =\n        Number(now.get(\"hour\")) -\n        Number(createdTime.get(\"hour\")) +\n        \" giờ trước\";\n  } else stringTime = createdTime.format(\"DD-MM-YYYY\");\n  return stringTime;\n}\n\nexport function UI({ loading, error, post = {}, refetch = () => { } }) {\n  const currentUser = useContext(AuthContext).user;\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const stringCreatedAt = formatTimeCreate(post?.createdAt);\n  const toggleModal = () => {\n    setIsModalOpen((prev) => !prev);\n    console.log(isModalOpen);\n  };\n  if (loading) return <Text>Đang tải</Text>;\n  return (\n    <Box\n      maxW={[\"100%\", \"container.md\"]}\n      my={2}\n      py={4}\n      rounded={[\"0\", \"xl\"]}\n      borderWidth=\"1\"\n\t\t  borderColor=\"gray.100\"\n    >\n      <HStack\n        space=\"3\"\n        display=\"flex\"\n        flexDirection=\"row\"\n        px=\"3\"\n        alignItems=\"center\"\n        position=\"relative\"\n        zIndex=\"1\"\n      >\n        <Link to={{ screen: \"users\", params: { id: post?.createdBy?.id } }}>\n          <Image\n            source={{\n              uri:\n                \"https://odanang.net\" +\n                (post?.createdBy?.avatar?.publicUrl ||\n                  \"/upload/img/no-image.png\"),\n            }}\n            alt=\"Profile image\"\n            size=\"8\"\n            rounded=\"100\"\n          />\n        </Link>\n        <Link to={{ screen: \"users\", params: { id: post?.createdBy?.id } }}>\n          <Text color=\"gray.900\" fontWeight=\"600\" fontSize=\"14\">\n            {post?.createdBy?.name}\n          </Text>\n        </Link>\n        <Text color=\"gray.400\" fontSize=\"12\">\n          {stringCreatedAt}\n        </Text>\n        {isModalOpen && post.createdBy.id === currentUser.id && (\n          <VStack\n            position=\"absolute\"\n            right=\"3\"\n            top=\"8\"\n            borderColor=\"gray.100\"\n            borderWidth=\"1\"\n            bgColor=\"white\"\n            rounded=\"10\"\n            space=\"1\"\n            p=\"2\"\n          >\n            <PostUpdateText />\n            <Divider w=\"full\" bgColor=\"gray.100\" />\n            {post && <PostDeleteText id={post?.id} />}\n          </VStack>\n        )}\n        {post.createdBy && post.createdBy.id === currentUser.id && (\n          <Button\n            bgColor=\"transparent\"\n            p=\"1\"\n            color=\"gray.500\"\n            ml=\"auto\"\n            onPress={toggleModal}\n          >\n            <Entypo\n              name=\"dots-three-horizontal\"\n              color=\"#a1a1aa\"\n              size={18}\n              style={{ marginTop: \"-2px\" }}\n            />\n          </Button>\n        )}\n      </HStack>\n      <Text px=\"3\" my=\"2\">\n        {post.content}\n      </Text>\n      <UploadImageListCarousel\n        urls={post?.images?.map(\n          (image) => \"https://odanang.net\" + image?.file?.publicUrl\n        )}\n      />\n\n      <InteractiveItemSimple\n        id={post?.interactive.id}\n      />\n    </Box>\n  );\n}\nexport default function PostItemSimple(props) {\n  return <PostItem {...props} UI={UI} />;\n}\n","import React, { useContext } from \"react\";\nimport { HStack, Box, Image, Text, Button } from \"native-base\";\nimport { Link } from \"@react-navigation/native\";\nimport { AuthContext } from \"../../Provider/Native\";\nfunction UI() {\n  const createHandler = () => {};\n  const user = useContext(AuthContext).user;\n  return (\n    <Box mt=\"2\" mx=\"0\" w=\"full\" px={[\"0\", \"1\"]}>\n      <HStack\n        space=\"4\"\n        alignItems=\"center\"\n        w=\"full\"\n        p=\"3\"\n        my=\"2\"\n        rounded={[\"0\", \"12\"]}\n        borderWidth=\"1\"\n        borderColor=\"gray.100\"\n      >\n        <Image\n          source={{\n            // uri:\n            //   \"https://res.cloudinary.com/cloudinaryassets/image/upload/v1632719777/200960556_1184264562021915_3530694902678239694_n_u7mk8s.jpg\",\n            uri:\n              \"https://odanang.net\" +\n              (user?.avatar?.publicUrl || \"/upload/img/no-image.png\"),\n          }}\n          alt=\"Profile image\"\n          size=\"8\"\n          mx=\"auto\"\n          rounded=\"100\"\n        />\n        <Box flex=\"1\">\n          <Text color=\"gray.500\" fontSize=\"15\">\n            Bạn đang nghĩ gì?\n          </Text>\n        </Box>\n        <Link to={{ screen: \"newpost\" }}>\n          <Button\n            bgColor=\"green.500\"\n            _text={{\n              color: \"white\",\n              fontSize: [\"13\", \"14\"],\n              fontWeight: \"600\",\n            }}\n            rounded=\"8\"\n            py=\"2\"\n            px=\"4\"\n            onPress={createHandler}\n          >\n            THÊM BÀI VIẾT\n          </Button>\n        </Link>\n      </HStack>\n    </Box>\n  );\n}\nexport default UI;\n","import React from \"react\";\nimport ContentLoader from \"react-content-loader\";\nimport { Rect, Circle } from \"react-content-loader/native\";\nimport { Box } from \"native-base\";\n\nfunction UI(props) {\n  return (\n    <Box maxW=\"700\" w=\"full\" p=\"2\">\n      <ContentLoader\n        speed=\"1\"\n        w=\"full\"\n        mx=\"auto\"\n        viewBox=\"0 0 700 720\"\n        backgroundColor=\"#f3f3f3\"\n        foregroundColor=\"#ecebeb\"\n        animate=\"true\"\n      >\n        <Rect x=\"70\" y=\"15\" rx=\"10\" ry=\"10\" width=\"180\" height=\"20\" />\n        <Rect x=\"270\" y=\"15\" rx=\"10\" ry=\"10\" width=\"80\" height=\"20\" />\n        <Rect x=\"0\" y=\"70\" rx=\"10\" ry=\"10\" width=\"500\" height=\"20\" />\n        <Rect x=\"0\" y=\"110\" rx=\"10\" ry=\"10\" width=\"700\" height=\"550\" />\n        <Circle cx=\"25\" cy=\"25\" r=\"25\" />\n      </ContentLoader>\n    </Box>\n  );\n}\nexport default UI;\n","import React, { Fragment } from \"react\";\nimport { Button, VStack, Box, Text } from \"native-base\";\nimport PostItemSimple from \"../Item/Simple\";\nimport PostCreateButton from \"../Create/Button\";\nimport PostItemSkeletonSimple from \"./SkeletonSimple\";\nimport PostListController from \"./Controller\";\n\nfunction UI({\n  loading,\n  error,\n  allPosts,\n  count,\n  loadMore,\n  loadingMore,\n  refetch,\n}) {\n  if (loading || error) {\n    return <PostItemSkeletonSimple />;\n  }\n\n  return (\n    <VStack mb=\"20px\">\n      <PostCreateButton />\n      {allPosts.map((post) => (\n        <PostItemSimple key={post.id} existing={{ post }} />\n      ))}\n      {loadingMore && <PostItemSkeletonSimple />}\n      {count > allPosts.length && (\n        <Box px=\"2\">\n          <Button\n            my={3}\n            bgColor=\"green.500\"\n            _text={{\n              color: \"white\",\n              fontSize: [\"13\", \"14\"],\n              fontWeight: \"600\",\n            }}\n            rounded=\"8\"\n            py=\"2\"\n            px=\"4\"\n            onPress={loadMore}\n          >\n            {loadingMore ? \"Đang tải\" : \"Tải thêm bài viết\"}\n          </Button>\n        </Box>\n      )}\n    </VStack>\n  );\n}\nexport default function PostListSimple(props) {\n  return <PostListController {...props} UI={UI} />;\n}\n","import React from \"react\";\nimport { VStack } from \"native-base\";\nimport PostItemSimple from \"../Item/Simple\";\nimport PostItemSkeletonSimple from \"./SkeletonSimple\";\n\nfunction UI(loading) {\n  // if (loading) {\n  //   return <PostItemSkeletonSimple />;\n  // }\n\n  return (\n    <VStack px={[\"0\", \"1\"]}>\n      {/* Map list posts */}\n      <PostItemSimple />\n      <PostItemSimple />\n    </VStack>\n  );\n}\nexport default UI;\n","import React from \"react\";\nimport ContentLoader from \"react-content-loader\";\nimport { Rect } from \"react-content-loader/native\";\nimport { Box } from \"native-base\";\n\nfunction UI() {\n  return (\n    <Box maxW=\"1000\" w=\"full\" mx=\"auto\">\n      <ContentLoader\n        speed=\"1\"\n        w=\"full\"\n        mx=\"auto\"\n        viewBox=\"0 0 1000 700\"\n        backgroundColor=\"#f3f3f3\"\n        foregroundColor=\"#ecebeb\"\n        animate=\"true\"\n      >\n        <Rect x=\"620\" y=\"15\" rx=\"40\" ry=\"40\" width=\"40\" height=\"40\" />\n        <Rect x=\"680\" y=\"25\" rx=\"10\" ry=\"10\" width=\"150\" height=\"20\" />\n        <Rect x=\"620\" y=\"70\" rx=\"10\" ry=\"10\" width=\"380\" height=\"25\" />\n        <Rect x=\"620\" y=\"120\" rx=\"10\" ry=\"10\" width=\"380\" height=\"100\" />\n        <Rect x=\"620\" y=\"235\" rx=\"10\" ry=\"10\" width=\"380\" height=\"100\" />\n        <Rect x=\"620\" y=\"350\" rx=\"10\" ry=\"10\" width=\"380\" height=\"100\" />\n        <Rect x=\"620\" y=\"465\" rx=\"10\" ry=\"10\" width=\"380\" height=\"100\" />\n        <Rect x=\"0\" y=\"15\" rx=\"10\" ry=\"10\" width=\"600\" height=\"550\" />\n      </ContentLoader>\n    </Box>\n  );\n}\nexport default UI;\n","import React from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { POST_LIST } from \"../List/Controller\";\nexport const POST_ITEM = gql`\n  query($id: ID!) {\n    Post(where: { id: $id }) {\n      id\n      content\n      tags {\n        content\n      }\n      images {\n        file {\n          publicUrl\n        }\n      }\n      interactive {\n        id\n      }\n      createdAt\n      createdBy {\n        id\n        name\n        avatar {\n          publicUrl\n        }\n      }\n    }\n  }\n`;\nexport default function PostDetail({ UI, id }) {\n  const { loading, error, data = {} , refetch} = useQuery(POST_ITEM, {\n    variables: { id }\n  }\n  );\n  const { Post } = data;\n  const post = Post;\n  return <UI loading={loading} error={error} post={post} refetch={refetch} />;\n}\n","import React, { useState, useContext } from \"react\";\nimport {\n  Box,\n  Stack,\n  HStack,\n  Image,\n  Text,\n  Button,\n  VStack,\n  Divider,\n} from \"native-base\";\nimport {\n  InteractionCommentListToggleButton,\n} from \"../../Interactive/Comment\";\nimport {\n  InteractionReactionCreateButton,\n  InteractionReactionListIconTextWithCount,\n} from \"../../Interactive/Reaction\";\n\n\nimport { AlbumCreateButton } from \"../../Album\";\nimport { PostDeleteText, PostUpdateText } from \"../index\";\nimport { UploadImageListCarousel } from \"../../Upload/Image\";\nimport { HiOutlineDotsHorizontal } from \"react-icons/hi\";\nimport PostItemSkeletonDetail from \"./SkeletonDetail\";\nimport InteractiveItemSimple from \"../../Interactive/Item/Simple\";\nimport PostDetail from \"./Controller\";\nimport { AuthContext } from \"../../Provider/Native\";\nimport { Link } from \"@react-navigation/native\";\n\nfunction formatTimeCreate(createdAt) {\n  var dayjs = require(\"dayjs\");\n  let stringTime = \"\";\n  const createdTime = dayjs(createdAt);\n  const now = dayjs();\n  if (now.format(\"DD-MM-YYYY\") === createdTime.format(\"DD-MM-YYYY\")) {\n    if (Number(now.get(\"hour\")) - Number(createdTime.get(\"hour\")) === 0)\n      stringTime =\n        Number(now.get(\"minute\")) -\n        Number(createdTime.get(\"minute\")) +\n        \" phút trước\";\n    else\n      stringTime =\n        Number(now.get(\"hour\")) -\n        Number(createdTime.get(\"hour\")) +\n        \" giờ trước\";\n  } else stringTime = createdTime.format(\"DD-MM-YYYY\");\n  return stringTime;\n}\n\nfunction UI({ loading, error, post, refetch = () => { }, isOpen = true }) {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [openComment, setOpenComment] = useState(isOpen)\n  const currentUser = useContext(AuthContext).user;\n  const stringCreatedAt = formatTimeCreate(post?.createdAt);\n  const toggleModal = () => {\n    setIsModalOpen((prev) => !prev);\n    console.log(isModalOpen);\n  };\n\n  if (loading) {\n    return <PostItemSkeletonDetail />;\n  }\n  function pressComment() {\n    setOpenComment(status => !status)\n  }\n  return (\n    <Stack\n      direction={[\"column\", \"column\", \"column\", \"row\"]}\n      mx=\"auto\"\n      my=\"3\"\n      w={[\"100%\", \"90%\", \"80%\", \"100%\"]}\n      rounded={[\"0\", \"xl\"]}\n      borderWidth=\"1\"\n      borderColor=\"gray.100\"\n    >\n      <Box w={[\"100%\", \"100%\", \"100%\", \"60%\"]}>\n        <UploadImageListCarousel\n          urls={post?.images?.map(\n            (image) => \"https://odanang.net\" + image?.file?.publicUrl\n          )}\n        />\n      </Box>\n      <VStack\n        maxW={[\"100%\", \"100%\", \"100%\", \"40%\"]}\n        py=\"3\"\n        px={[\"0\", \"0\", \"1\"]}\n      >\n        <HStack\n          space=\"3\"\n          display=\"flex\"\n          flexDirection=\"row\"\n          w=\"full\"\n          px=\"3\"\n          alignItems=\"center\"\n          position=\"relative\"\n          zIndex=\"1\"\n        >\n          <Image\n            source={{\n              uri:\n                \"https://odanang.net\" +\n                (post?.createdBy?.avatar?.publicUrl ||\n                  \"/upload/img/no-image.png\"),\n            }}\n            alt=\"Profile image\"\n            size=\"8\"\n            rounded=\"100\"\n          />\n          <Link to={{ screen: \"users\", params: { id: post?.createdBy?.id } }}>\n            <Text color=\"gray.900\" fontWeight=\"600\" fontSize=\"14\">\n              {post?.createdBy?.name}\n            </Text>\n          </Link>\n          <Text color=\"gray.400\" fontSize=\"12\">\n            {stringCreatedAt}\n          </Text>\n          {isModalOpen && (\n            <VStack\n              position=\"absolute\"\n              right=\"3\"\n              top=\"8\"\n              borderColor=\"gray.100\"\n              borderWidth=\"1\"\n              bgColor=\"white\"\n              rounded=\"10\"\n              space=\"1\"\n              p=\"2\"\n            >\n              <PostUpdateText />\n              <Divider w=\"full\" bgColor=\"gray.100\" />\n              <PostDeleteText />\n            </VStack>\n          )}\n          {isModalOpen && post?.createdBy?.id === currentUser?.id && (\n            <VStack\n              position=\"absolute\"\n              right=\"3\"\n              top=\"8\"\n              borderColor=\"gray.100\"\n              borderWidth=\"1\"\n              bgColor=\"white\"\n              rounded=\"10\"\n              space=\"1\"\n              p=\"2\"\n            >\n              <PostUpdateText />\n              <Divider w=\"full\" bgColor=\"gray.100\" />\n              <PostDeleteText id={post?.id} />\n            </VStack>\n          )}\n          {post?.createdBy?.id === currentUser?.id && (\n            <Button\n              bgColor=\"transparent\"\n              p=\"1\"\n              color=\"gray.500\"\n              ml=\"auto\"\n              onPress={toggleModal}\n            >\n              <HiOutlineDotsHorizontal />\n            </Button>\n          )}\n        </HStack>\n        <Text px=\"3\" my=\"2\">\n          {post?.content}\n        </Text>\n        {/* INTERACTABLE GROUNP */}\n        {post?.interactive && <InteractiveItemSimple\n          id={post?.interactive?.id}\n          sortBy=\"createdAt_DESC\"\n        />}\n      </VStack>\n    </Stack>\n  );\n}\nexport default function PostDetailSimple(props) {\n  return <PostDetail {...props} UI={UI} />;\n}","import React from \"react\";\nimport { gql, useMutation, useReactiveVar } from \"@apollo/client\";\nimport { PostListRefetch } from \"../List/Controller\";\nexport const POST_CREATE = gql`\n  mutation($data: PostCreateInput) {\n    createPost(data: $data) {\n      id\n      content\n      tags {\n        content\n      }\n    }\n  }\n`;\n\nexport default function PostCreate({ UI, post, navigation, onCompleted = ()=>{} }) {\n  const [on, { loading, error, data = {} }] = useMutation(POST_CREATE, {\n    onCompleted: (data) => {\n\t\t\tonCompleted(data);\n      navigation.navigate(\"home\");\n    },\n  });\n  const { createPost } = data;\n  return (\n    <UI\n      loading={loading}\n      error={error}\n      on={on}\n      createPost={createPost}\n      post={post}\n    />\n  );\n}\n","import React, { useState, useRef } from \"react\";\nimport ImageUploading from \"react-images-uploading\"; // upload image\nimport {\n  Select,\n  Box,\n  Container,\n  Heading,\n  VStack,\n  FormControl,\n  Button,\n  TextArea,\n} from \"native-base\";\nimport Controller from \"./Controller\";\nimport { useNavigation } from '@react-navigation/native';\n\nfunction UI({ loading, error, on }) {\n  const contentRef = useRef();\n  const [content, setContent] = useState(\"\");\n  const changeContent = (e) => {\n    const content = e.target.value;\n    setContent(content);\n  };\n  const submitHandler = (event) => {\n    on({\n      variables: {\n        data: {\n          content: content,\n          interactive: { create: { comments: null, reactions: null } },\n        },\n      },\n    });\n  };\n\n  return (\n    <Box maxW=\"560\" mx=\"auto\" w=\"full\" p=\"2\">\n      <Heading my=\"20px\" textAlign=\"center\" fontSize={[\"18px\", \"20px\"]}>\n        Tạo bài viết mới\n      </Heading>\n      <Box\n        px={5}\n        py={7}\n        rounded={10}\n        borderWidth={1}\n        borderColor=\"gray.100\"\n        bg=\"gray.50\"\n      >\n        <VStack space={3}>\n          <FormControl>\n            <FormControl.Label\n              _text={{\n                color: \"coolGray.800\",\n                fontSize: \"14\",\n                fontWeight: 400,\n              }}\n            >\n              Nội dung bài viết\n            </FormControl.Label>\n            <TextArea\n              placeholder=\"Nhập nội dung ...\"\n              w=\"full\"\n              onChange={changeContent}\n              ref={contentRef}\n              name=\"content\"\n              bgColor=\"white\"\n              px={2}\n              py={1.5}\n              fontSize={14}\n              borderWidth={1}\n              borderColor=\"gray.100\"\n              rounded={6}\n              _focus={{\n                borderColor: \"green.500\",\n              }}\n            />\n          </FormControl>\n\n          {!loading && (\n            <Button\n              onPress={submitHandler}\n              rounded={8}\n              bgColor=\"green.500\"\n              p={2}\n              _text={{ color: \"white\", fontWeight: \"600\" }}\n            >\n              ĐĂNG NGAY\n            </Button>\n          )}\n          {loading && (\n            <Button\n              rounded={8}\n              bgColor=\"green.500\"\n              p={2}\n              _text={{ color: \"white\", fontWeight: \"600\" }}\n            >\n              ĐANG TẢI ...\n            </Button>\n          )}\n        </VStack>\n      </Box>\n      {error && (\n        <Box mt={4} p={3.5} rounded={10} borderWidth={1} borderColor=\"red.500\">\n          <Text textAlign=\"center\" color=\"red.500\">\n            Vui lòng kiểm tra các thông tin\n          </Text>\n        </Box>\n      )}\n    </Box>\n  );\n}\nexport default function PostCreateSimple(props) {\n  const navigation = useNavigation();\n  return <Controller {...props} UI={UI} navigation={navigation} />;\n}\n","import { gql, useMutation } from \"@apollo/client\";\n\nexport const POST_UPDATE = gql`\n  mutation($id: ID!, $data: UpdatePostInput) {\n    updatePost(id: $id, data: $data) {\n      id\n      content\n      tags {\n        content\n      }\n    }\n  }\n`;\n\nexport default function PostUpdate({ UI, children, post }) {\n  const [on, { loading, error, data = {} }] = useMutation(POST_UPDATE);\n  const { updatePost } = data;\n  return (\n    <UI\n      loading={loading}\n      error={error}\n      post={post}\n      on={on}\n      updatePost={updatePost}\n    />\n  );\n}\n","import React from \"react\";\nimport { Button } from \"native-base\";\nimport { FaRegEdit } from \"react-icons/fa\";\nimport Feather from \"react-native-vector-icons/Feather\";\n\nFeather.loadFont();\n\nfunction UI() {\n  const toggleText = (e) => {\n    console.log(\"Post Update Text\");\n  };\n\n  return (\n    <Button\n      _text={{ color: \"gray.400\", fontSize: \"12\", fontWeight: \"600\" }}\n      p=\"3\"\n      py=\"1.5\"\n      bgColor=\"transparrent\"\n      onPress={toggleText}\n      leftIcon={\n        <Feather\n          name=\"edit\"\n          color=\"#22c55e\"\n          size={18}\n          style={{ marginTop: \"-2px\" }}\n        />\n      }\n    >\n      Sửa bài viết\n    </Button>\n  );\n}\nexport default UI;\n","import React from \"react\";\nimport { gql, useMutation, useReactiveVar } from \"@apollo/client\";\nimport { PostListRefetch } from \"../List/Controller\";\n\nexport const POST_DELETE = gql`\n  mutation($id: ID!) {\n    deletePost(id: $id) {\n      id\n      content\n    }\n  }\n`;\n\nexport default function PostDelete({ UI, id }) {\n  const [on, { loading, error, data = {} }] = useMutation(POST_DELETE, {\n    onCompleted: (data) => {\n    },\n  });\n  const { deletePost } = data;\n  const clickDetete = () => {\n    on({ variables: { id: id } });\n  };\n  return (\n    <UI\n      loading={loading}\n      error={error}\n      clickDetete={clickDetete}\n      post={deletePost}\n    />\n  );\n}\n","import React from \"react\";\nimport { Button } from \"native-base\";\nimport PostDelete from \"./Controller\";\n\nfunction UI({ loading, error, clickDetete, post }) {\n  const hadleSubmit = (e) => {\n    clickDetete();\n  };\n\n  return loading ? (\n    \"...\"\n  ) : (\n    <Button\n      _text={{ color: \"gray.400\", fontSize: \"12\", fontWeight: \"600\" }}\n      p=\"3\"\n      py=\"1.5\"\n      bgColor=\"transparrent\"\n      onPress={hadleSubmit}\n      // leftIcon={\n      //   <FontAwesome\n      //     name=\"trash-o\"\n      //     color=\"#22c55e\"\n      //     size={18}\n      //     style={{ marginTop: \"-2px\" }}\n      //   />\n      // }\n    >\n      Xoá bài viết\n    </Button>\n  );\n}\nexport default function PostDeleteText(props) {\n  return <PostDelete {...props} UI={UI} />;\n}\n","import React from \"react\";\nimport ContentLoader from \"react-content-loader\";\nimport { Rect, Circle } from \"react-content-loader/native\";\nimport { Box } from \"native-base\";\n\nfunction UI(props) {\n  return (\n    <Box maxW=\"1005\" w=\"full\" mx=\"auto\" p=\"1%\">\n      <ContentLoader\n        speed=\"1\"\n        w=\"full\"\n        mx=\"auto\"\n        viewBox=\"0 0 1005 320\"\n        backgroundColor=\"#f3f3f3\"\n        foregroundColor=\"#ecebeb\"\n        animate=\"true\"\n      >\n        <Circle cx=\"60\" cy=\"60\" r=\"60\" />\n        <Rect x=\"150\" y=\"10\" rx=\"15\" ry=\"15\" width=\"220\" height=\"30\" />\n        <Rect x=\"150\" y=\"55\" rx=\"10\" ry=\"10\" width=\"150\" height=\"20\" />\n        <Rect x=\"150\" y=\"90\" rx=\"10\" ry=\"10\" width=\"280\" height=\"20\" />\n        <Rect x=\"0\" y=\"160\" rx=\"10\" ry=\"10\" width=\"1005\" height=\"150\" />\n      </ContentLoader>\n    </Box>\n  );\n}\nexport default UI;\n","import React, { useMemo } from \"react\";\nimport Markdown from \"react-native-markdown-display\";\n\nconst style = {\n  // Paras\n  paragraph: {\n    fontFamily: \"Lexend_400Regular\",\n    color: \"#27272a\",\n    lineHeight: 1.5,\n  },\n\n  // Headings\n  heading1: {\n    fontSize: 30,\n    fontFamily: \"Lexend_600SemiBold\",\n    color: \"#27272a\",\n    lineHeight: 2.2,\n  },\n  heading2: {\n    fontSize: 24,\n    fontFamily: \"Lexend_600SemiBold\",\n    color: \"#27272a\",\n    lineHeight: 1.75,\n  },\n  heading3: {\n    fontSize: 20,\n    fontFamily: \"Lexend_600SemiBold\",\n    color: \"#27272a\",\n    lineHeight: 1.75,\n  },\n  heading4: {\n    fontSize: 18,\n    fontFamily: \"Lexend_600SemiBold\",\n    color: \"#27272a\",\n    lineHeight: 1.5,\n  },\n  heading5: {\n    fontSize: 16,\n    fontFamily: \"Lexend_600SemiBold\",\n    color: \"#27272a\",\n    lineHeight: 1.375,\n  },\n  heading6: {\n    fontSize: 14,\n    fontFamily: \"Lexend_600SemiBold\",\n    color: \"#27272a\",\n    lineHeight: 1.25,\n  },\n\n  // Horizontal Rule\n  hr: {\n    backgroundColor: \"#e4e4e7\",\n    height: 1,\n    marginBottom: 6,\n  },\n\n  // Lists\n  bullet_list: {},\n  ordered_list: {},\n  list_item: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    fontFamily: \"Lexend_400Regular\",\n    color: \"#27272a\",\n  },\n\n  // Links\n  link: {\n    textDecorationLine: \"none\",\n    color: \"#16a34a\",\n  },\n\n  // Blockquotes\n  blockquote: {\n    backgroundColor: \"#fafafa\",\n    borderColor: \"#e4e4e7\",\n    borderLeftWidth: 3,\n    margin: 5,\n    paddingHorizontal: 10,\n    paddingVertical: 4,\n  },\n\n  // Tables\n  table: {\n    borderWidth: 1,\n    borderColor: \"#f4f4f5\",\n  },\n  thead: {},\n  tbody: {},\n  th: {\n    padding: 5,\n    flex: 1,\n    borderWidth: 1,\n    borderColor: \"#f4f4f5\",\n  },\n  tr: {\n    flexDirection: \"row\",\n  },\n  td: {\n    borderWidth: 1,\n    borderColor: \"#f4f4f5\",\n    flex: 1,\n    padding: 5,\n  },\n\n  // Images\n  image: {\n    marginTop: 10,\n    marginBottom: 10,\n    display: \"flex\",\n  },\n};\n\nexport default function Field({\n  children = \"\",\n  round,\n  step,\n  className,\n  strongProps,\n  pProps,\n  ...props\n}) {\n  return useMemo(() => {\n    return <Markdown children={children} style={style} />;\n  }, [children]);\n}\n","import React, { useContext } from \"react\";\nimport { Link } from \"@react-navigation/native\";\nimport {\n  Box,\n  Button,\n  HStack,\n  Image,\n  VStack,\n  Text,\n  Divider,\n  Stack,\n} from \"native-base\";\nimport { PostListGrid } from \"../../Post\";\nimport {\n  RelationshipUpdateButton,\n  RelationshipDeleteDelete,\n  RelationshipCreateButton,\n  RelationshipDeleteActive,\n} from \"../../Relationship\";\nimport Controller from \"./Controller\";\nimport DetailSkeleton from \"./DetailSkeleton\";\nimport Field from \"../../Field\";\nimport { AuthContext } from \"../../Provider/Native\";\nfunction UI({ loading, error, user, posts, relationship, count }) {\n  const currentUser = useContext(AuthContext).user;\n  if (loading) return <DetailSkeleton />;\n\n  return (\n    <VStack maxw=\"full\" mx=\"auto\" my=\"5\" w=\"full\" space=\"4\">\n      <HStack space=\"7\" m=\"1%\" alignItems=\"center\">\n        <Box>\n          <Image\n            source={{\n              uri:\n                \"https://odanang.net\" +\n                (user?.avatar?.publicUrl || \"/upload/img/no-image.png\"),\n            }}\n            alt=\"Alternate Text\"\n            w={[\"100px\", \"120px\"]}\n            h={[\"100px\", \"120px\"]}\n            rounded=\"100\"\n          />\n        </Box>\n        <VStack flex=\"1\" space={[\"2\", \"3\"]}>\n          <HStack space=\"2\">\n            <Text fontSize={[\"20\", \"22\"]} fontWeight=\"600\">\n              {user?.name}\n            </Text>\n          </HStack>\n          <HStack space=\"4\">\n            <Text fontSize=\"14\" color=\"gray.500\">\n              <Text>{posts.length} bài đăng</Text>\n            </Text>\n            <Text fontSize=\"14\" color=\"gray.500\">\n              {count} bạn bè\n            </Text>\n          </HStack>\n        </VStack>\n      </HStack>\n      <VStack space=\"2\" mx=\"1%\" my={[\"1\", \"0\"]}>\n        <Stack\n          space=\"2\"\n          alignItems={[\"start\", \"center\"]}\n          direction={[\"column\", \"row\"]}\n        >\n          {user?.id !== currentUser?.id && relationship === null && (\n            <>\n              <Text mr=\"4\" fontSize=\"15\" fontWeight=\"600\" color=\"gray.500\">\n                Gửi lời mời kết bạn đến {user.name}\n              </Text>\n              <HStack space=\"2\" w=\"120\">\n                <RelationshipCreateButton toId={user?.id} />\n              </HStack>\n            </>\n          )}\n          {user?.id !== currentUser?.id && relationship?.isAccepted === true && (\n            <>\n              <Text mr=\"4\" fontSize=\"15\" fontWeight=\"600\" color=\"gray.500\">\n                Bạn và {user.name} đã là bạn bè\n              </Text>\n              <HStack space=\"2\">\n                <RelationshipDeleteActive id={relationship.id} />\n              </HStack>\n            </>\n          )}\n          {user?.id !== currentUser?.id &&\n            (relationship?.isAccepted === false ||\n              relationship?.isAccepted === null) &&\n            relationship?.createdBy?.id === currentUser.id && (\n              <>\n                <Text mr=\"4\" fontSize=\"15\" fontWeight=\"600\" color=\"gray.500\">\n                  Bạn đã gửi kết bạn đến {user.name}\n                </Text>\n                <HStack space=\"2\">\n                  <RelationshipDeleteDelete id={relationship.id} />\n                </HStack>\n              </>\n            )}\n          {user?.id !== currentUser?.id &&\n            (relationship?.isAccepted === false ||\n              relationship?.isAccepted === null) &&\n            relationship?.to?.id === currentUser?.id &&\n            relationship?.createdBy?.id === user?.id && (\n              <>\n                <Text mr=\"4\" fontSize=\"15\" fontWeight=\"600\" color=\"gray.500\">\n                  {user.name} đã gửi lời mời kết bạn\n                </Text>\n                <HStack space=\"2\">\n                  <Box w=\"130px\">\n                    <RelationshipUpdateButton id={relationship.id} />\n                  </Box>\n                  <Box w=\"130px\">\n                    <RelationshipDeleteDelete id={relationship.id} />\n                  </Box>\n                </HStack>\n              </>\n            )}\n        </Stack>\n      </VStack>\n      <VStack space=\"2\" m=\"1%\" mb=\"-1\">\n        <Text fontSize=\"18\" fontWeight=\"600\" color=\"gray.700\">\n          Giới thiệu\n        </Text>\n        <Divider bg=\"gray.100\" w=\"full\" my=\"1\" orientation=\"horizontal\" />\n        <Text fontSize=\"14\" fontWeight=\"400\" color=\"gray.600\" lineHeight=\"26px\">\n          <Field>{user?.description}</Field>\n        </Text>\n      </VStack>\n      {user?.id === currentUser?.id && (\n        <VStack space=\"2\" m=\"1%\">\n          <HStack justifyContent=\"space-between\" alignItems=\"center\">\n            <Text fontSize=\"18\" fontWeight=\"600\" color=\"gray.700\">\n              Bạn bè\n            </Text>\n            <Link to={{ screen: \"friends\" }}>\n              <Text color=\"green.500\" textDecoration=\"none\">\n                Xem tất cả\n              </Text>\n            </Link>\n          </HStack>\n          <Divider bg=\"gray.100\" w=\"full\" my=\"1\" orientation=\"horizontal\" />\n        </VStack>\n      )}\n      <Box>\n        <VStack w=\"98%\" space=\"2\" m=\"1%\">\n          <Text fontSize=\"18\" fontWeight=\"600\" color=\"gray.700\">\n            Bài viết\n          </Text>\n          <Divider bg=\"gray.100\" w=\"full\" my=\"1\" orientation=\"horizontal\" />\n        </VStack>\n        <PostListGrid />\n      </Box>\n    </VStack>\n  );\n}\nexport { UI };\nexport default function UserItemDetail(props) {\n  return <Controller {...props} UI={UI} />;\n}\n","import React from \"react\";\r\nimport { gql, useMutation, useReactiveVar } from \"@apollo/client\";\r\nexport const USER_UPDATE = gql`\r\n    mutation($id: ID!, $data: UserUpdateInput) {\r\n        updateUser(id: $id, data: $data) {\r\n            id\r\n        }\r\n    }\r\n  \r\n`;\r\nexport default function PostCreate({ UI, post, navigation, user }) {\r\n    const [on, { loading, error, data = {} }] = useMutation(USER_UPDATE);\r\n    return (\r\n        <UI\r\n            user={user}\r\n            loading={loading}\r\n            error={error}\r\n            on={on}\r\n        />\r\n    );\r\n}\r\n","import React, { Fragment, useContext, useState } from \"react\";\nimport { Link } from \"@react-navigation/native\";\nimport {\n  Box,\n  Text,\n  Heading,\n  VStack,\n  FormControl,\n  TextArea,\n  Button,\n  HStack,\n  Image,\n  Radio,\n  Input,\n} from \"native-base\";\nimport { AuthContext } from \"../../Provider/Native\";\nimport Controller from \"./Controller\";\nfunction UI({ loading, error, user, on }) {\n  /**\n   *\n   * @param {Event} e\n   */\n  const [username, setUsername] = useState(user?.name);\n  const [phone, setPhone] = useState(user?.phone);\n  const [description, setDescription] = useState(user?.description);\n  const [sex, setSex] = useState(\"male\");\n  const [inputError, setInputError] = useState(null);\n\n  const submitUpdate = () => {\n    setInputError(null);\n\n    // Validation username\n    if (!username.trim() || !isNaN(username) || !username.includes(\" \")) {\n      setInputError(\"Kiểm tra lại họ và tên\");\n      return;\n    }\n\n    // Validation phone number\n    if (\n      !phone.trim() ||\n      (!(phone.length === 10) && !(phone.length === 11)) ||\n      isNaN(phone)\n    ) {\n      setInputError(\"Kiểm tra lại số điện thoại\");\n      return;\n    }\n\n    console.log(username, phone, description, sex);\n    on({\n      variables: {\n        id: user?.id,\n        data: {\n          name: username,\n          phone: phone,\n          description: description,\n          gender: sex\n        },\n      },\n    });\n  };\n\n  return (\n    <Fragment>\n      <Box maxW=\"400\" w=\"full\" mx=\"auto\" mt=\"4\">\n        <Heading my=\"20px\" textAlign=\"center\" fontSize={[\"18px\", \"20px\"]}>\n          Chỉnh sửa trang cá nhân\n        </Heading>\n        <Box\n          px={5}\n          py={7}\n          rounded={10}\n          borderWidth={1}\n          borderColor=\"gray.100\"\n          bg=\"gray.50\"\n        >\n          <VStack space={3}>\n            <VStack space=\"4\" mb=\"3\">\n              <Image\n                source={{\n                  uri:\n                    \"https://odanang.net\" +\n                    (user?.avatar?.publicUrl || \"/upload/img/no-image.png\"),\n                }}\n                alt=\"Alternate Text\"\n                size=\"lg\"\n                mx=\"auto\"\n                rounded=\"100\"\n              />\n              <Button\n                _text={{\n                  color: \"gray.400\",\n                  fontSize: \"14\",\n                  fontWeight: \"600\",\n                }}\n                p=\"2\"\n                rounded=\"8\"\n                w=\"50%\"\n                bgColor=\"gray.100\"\n                mx=\"auto\"\n              >\n                Thay đổi ảnh đại diện\n              </Button>\n            </VStack>\n            <FormControl>\n              <FormControl.Label\n                _text={{\n                  color: \"gray.800\",\n                  fontSize: \"14\",\n                  fontWeight: 400,\n                }}\n              >\n                Họ và tên\n              </FormControl.Label>\n              <Input\n                onChange={(e) => setUsername(e.target.value)}\n                value={username}\n                name=\"username\"\n                bgColor=\"white\"\n                px={2}\n                py={1.5}\n                fontSize={14}\n                borderWidth={1}\n                borderColor=\"gray.100\"\n                rounded={6}\n                _focus={{\n                  borderColor: \"green.500\",\n                }}\n              />\n            </FormControl>\n            <FormControl>\n              <FormControl.Label\n                _text={{\n                  color: \"gray.800\",\n                  fontSize: \"14\",\n                  fontWeight: 400,\n                }}\n              >\n                Số điện thoại\n              </FormControl.Label>\n              <Input\n                onChange={(e) => setPhone(e.target.value)}\n                value={phone}\n                name=\"phone\"\n                bgColor=\"white\"\n                px={2}\n                py={1.5}\n                fontSize={14}\n                borderWidth={1}\n                borderColor=\"gray.100\"\n                rounded={6}\n                _focus={{\n                  borderColor: \"green.500\",\n                }}\n              />\n            </FormControl>\n            <FormControl>\n              <FormControl.Label\n                _text={{\n                  color: \"gray.800\",\n                  fontSize: \"14\",\n                  fontWeight: 400,\n                }}\n              >\n                Giới thiệu\n              </FormControl.Label>\n              <TextArea\n                onChange={(e) => setDescription(e.target.value)}\n                value={description}\n                name=\"description\"\n                bgColor=\"white\"\n                px={2}\n                py={1.5}\n                fontSize={14}\n                borderWidth={1}\n                borderColor=\"gray.100\"\n                rounded={6}\n                _focus={{\n                  borderColor: \"green.500\",\n                }}\n              />\n            </FormControl>\n            <FormControl mb=\"2\">\n              <FormControl.Label\n                _text={{\n                  color: \"gray.800\",\n                  fontSize: \"14\",\n                  fontWeight: 400,\n                }}\n              >\n                Giới tính\n              </FormControl.Label>\n              <Radio.Group\n                name=\"sex\"\n                accessibilityLabel=\"sex\"\n                value={sex}\n                onChange={(newValue) => {\n                  setSex(newValue);\n                }}\n              >\n                <HStack space=\"8\">\n                  <Radio\n                    colorScheme=\"green\"\n                    size=\"sm\"\n                    value=\"male\"\n                    borderWidth=\"1\"\n                    borderColor=\"gray.300\"\n                  >\n                    <Text fontSize=\"13\" ml=\"1.5\">\n                      Nam\n                    </Text>\n                  </Radio>\n                  <Radio\n                    borderWidth=\"1\"\n                    borderColor=\"gray.300\"\n                    colorScheme=\"green\"\n                    size=\"sm\"\n                    value=\"female\"\n                  >\n                    <Text fontSize=\"13\" ml=\"1.5\">\n                      Nữ\n                    </Text>\n                  </Radio>\n                  <Radio\n                    borderWidth=\"1\"\n                    borderColor=\"gray.300\"\n                    colorScheme=\"green\"\n                    size=\"sm\"\n                    value=\"other\"\n                  >\n                    <Text fontSize=\"13\" ml=\"1.5\">\n                      Khác\n                    </Text>\n                  </Radio>\n                </HStack>\n              </Radio.Group>\n            </FormControl>\n            {!loading && (\n              <Button\n                onPress={submitUpdate}\n                rounded={8}\n                bgColor=\"green.500\"\n                p={2}\n                _text={{ color: \"white\", fontWeight: \"600\" }}\n              >\n                LƯU THAY ĐỔI\n              </Button>\n            )}\n            {loading && (\n              <Button\n                rounded={8}\n                bgColor=\"green.500\"\n                p={2}\n                _text={{ color: \"white\", fontWeight: \"600\" }}\n              >\n                ĐANG TẢI ...\n              </Button>\n            )}\n          </VStack>\n        </Box>\n        {error && (\n          <Box\n            my={4}\n            p={3.5}\n            rounded={10}\n            borderWidth={1}\n            borderColor=\"red.500\"\n          >\n            <Text textAlign=\"center\" color=\"red.500\">\n              Vui lòng sử dụng số điện thoại khác\n            </Text>\n          </Box>\n        )}\n        {inputError && (\n          <Box\n            my={4}\n            p={3.5}\n            rounded={10}\n            borderWidth={1}\n            borderColor=\"red.500\"\n          >\n            <Text textAlign=\"center\" color=\"red.500\">\n              {inputError}\n            </Text>\n          </Box>\n        )}\n      </Box>\n    </Fragment>\n  );\n}\n//export default UI;\nexport default function PostCreateSimple(props) {\n  return <Controller {...props} UI={UI} />;\n}\n","import React, { Fragment, useRef, useState } from \"react\";\nimport { Link } from \"@react-navigation/native\";\nimport {\n  Box,\n  Text,\n  Heading,\n  VStack,\n  FormControl,\n  Input,\n  Button,\n} from \"native-base\";\nfunction UI({ loading, error, user, navigation }) {\n  /**\n   *\n   * @param {Event} e\n   */\n\n  const passwordOldRef = useRef();\n  const passwordNewRef = useRef();\n  const passwordConfirmRef = useRef();\n  const [inputError, setInputError] = useState(null);\n\n  const submitChange = () => {\n    setInputError(null);\n\n    const passwordOld = passwordOldRef.current.value;\n    const passwordNew = passwordNewRef.current.value;\n    const passwordConfirm = passwordConfirmRef.current.value;\n\n    // Validation password\n    if (passwordOld.trim().length < 6) {\n      setInputError(\"Kiểm tra lại mật khẩu cũ\");\n      return;\n    }\n\n    if (passwordNew.trim().length < 6) {\n      setInputError(\"Độ dài mật khẩu mới ít nhất 6 kí tự\");\n      return;\n    }\n\n    if (passwordNew !== passwordConfirm) {\n      setInputError(\"Xác nhận mật khẩu không đúng\");\n      return;\n    }\n\n    console.log(passwordOld, passwordNew, passwordConfirm);\n\n    // Save change\n    // if (!loading);\n  };\n\n  return (\n    <Fragment>\n      <Box maxW=\"350\" w=\"full\" mx=\"auto\" mt=\"4\">\n        <Heading my=\"20px\" textAlign=\"center\" fontSize={[\"18px\", \"20px\"]}>\n          Đổi mật khẩu\n        </Heading>\n        <Box\n          px={5}\n          py={7}\n          rounded={10}\n          borderWidth={1}\n          borderColor=\"gray.100\"\n          bg=\"gray.50\"\n        >\n          <VStack space={3}>\n            <FormControl>\n              <FormControl.Label\n                _text={{\n                  color: \"coolGray.800\",\n                  fontSize: \"14\",\n                  fontWeight: 400,\n                }}\n              >\n                Mật khẩu cũ\n              </FormControl.Label>\n              <Input\n                ref={passwordOldRef}\n                name=\"oldpassword\"\n                type=\"password\"\n                bgColor=\"white\"\n                px={2}\n                py={1.5}\n                fontSize={14}\n                borderWidth={1}\n                borderColor=\"gray.100\"\n                rounded={6}\n                _focus={{\n                  borderColor: \"green.500\",\n                }}\n              />\n            </FormControl>\n            <FormControl>\n              <FormControl.Label\n                _text={{\n                  color: \"coolGray.800\",\n                  fontSize: \"14\",\n                  fontWeight: 400,\n                }}\n              >\n                Mật khẩu mới\n              </FormControl.Label>\n              <Input\n                ref={passwordNewRef}\n                name=\"newpassword\"\n                type=\"password\"\n                bgColor=\"white\"\n                px={2}\n                py={1.5}\n                fontSize={14}\n                borderWidth={1}\n                borderColor=\"gray.100\"\n                rounded={6}\n                _focus={{\n                  borderColor: \"green.500\",\n                }}\n              />\n            </FormControl>\n            <FormControl>\n              <FormControl.Label\n                _text={{\n                  color: \"coolGray.800\",\n                  fontSize: \"14\",\n                  fontWeight: 400,\n                }}\n              >\n                Xác nhận mật khẩu mới\n              </FormControl.Label>\n              <Input\n                ref={passwordConfirmRef}\n                name=\"confirmpassword\"\n                type=\"password\"\n                bgColor=\"white\"\n                px={2}\n                py={1.5}\n                fontSize={14}\n                borderWidth={1}\n                borderColor=\"gray.100\"\n                rounded={6}\n                _focus={{\n                  borderColor: \"green.500\",\n                }}\n              />\n            </FormControl>\n\n            {!loading && (\n              <Button\n                onPress={submitChange}\n                rounded={8}\n                bgColor=\"green.500\"\n                p={2}\n                _text={{ color: \"white\", fontWeight: \"600\" }}\n              >\n                LƯU THAY ĐỔI\n              </Button>\n            )}\n            {loading && (\n              <Button\n                rounded={8}\n                bgColor=\"green.500\"\n                p={2}\n                _text={{ color: \"white\", fontWeight: \"600\" }}\n              >\n                ĐANG TẢI ...\n              </Button>\n            )}\n          </VStack>\n        </Box>\n        {error && (\n          <Box\n            mt={4}\n            p={3.5}\n            rounded={10}\n            borderWidth={1}\n            borderColor=\"red.500\"\n          >\n            <Text textAlign=\"center\" color=\"red.500\">\n              Vui lòng kiểm tra lại mật khẩu cũ\n            </Text>\n          </Box>\n        )}\n        {inputError && (\n          <Box\n            mt={4}\n            p={3.5}\n            rounded={10}\n            borderWidth={1}\n            borderColor=\"red.500\"\n          >\n            <Text textAlign=\"center\" color=\"red.500\">\n              {inputError}\n            </Text>\n          </Box>\n        )}\n      </Box>\n    </Fragment>\n  );\n}\nexport default UI;\n","import React from \"react\";\nimport { Container, HStack, Box, Text, VStack, Stack } from \"native-base\";\n\nfunction UI() {\n  return (\n    <Box\n      w=\"full\"\n      borderTopWidth=\"1px\"\n      borderColor=\"gray.100\"\n      py=\"12px\"\n      mt=\"40px\"\n    >\n      <Container w=\"container.lg\" mx=\"auto\" maxW=\"full\" px=\"8px\">\n        <HStack\n          borderBottomWidth=\"1px\"\n          borderColor=\"gray.100\"\n          pb=\"12px\"\n          mb=\"12px\"\n          w=\"100%\"\n        >\n          <Text color=\"gray.500\" fontSize={[\"12px\", \"13px\"]}>\n            Tiếng Việt. English. 中文 (Zhōngwén). 汉语, 漢語, 日本語 (にほんご).\n            한국어, français, langue française.\n          </Text>\n        </HStack>\n        <Stack\n          justifyContent=\"space-between\"\n          w=\"100%\"\n          direction={[\"column\", \"row\"]}\n        >\n          <VStack space=\"2px\">\n            <Text color=\"gray.500\" fontSize={[\"12px\", \"13px\"]}>\n              Odanang - Mạng xã hội sinh viên.\n            </Text>\n            <Text color=\"gray.500\" fontSize={[\"12px\", \"13px\"]}>\n              Phiên bản v1.0-beta.0\n            </Text>\n          </VStack>\n          <VStack space=\"2px\">\n            <Text\n              color=\"gray.500\"\n              fontSize={[\"12px\", \"13px\"]}\n              textAlign=\"right\"\n            >\n              Đồ án công nghệ phần mềm PBL6.\n            </Text>\n            <Text\n              color=\"gray.500\"\n              fontSize={[\"12px\", \"13px\"]}\n              textAlign=\"right\"\n            >\n              Đại học Bách Khoa - Đại học Đà Nẵng. Các thành viên: 1. Trần Ngọc\n              Huy 2. Nguyễn Kim Huy 3. Trần Diệp Phương 4. Trần Vũ Minh Triết\n            </Text>\n          </VStack>\n        </Stack>\n      </Container>\n    </Box>\n  );\n}\nexport default UI;\n","import SignIn from \"./SignIn\";\nimport Home from \"./Home\";\nimport User from \"./User\";\nimport Post from \"./Post\";\nimport SignUp from \"./SignUp\";\nimport NewPost from \"./NewPost\";\nimport FriendSuggestion from \"./FriendSuggestion\";\nimport FriendRequest from \"./FriendRequest\";\nimport UserUpdate from \"./UserUpdate\";\nimport UpdatePassword from \"./UpdatePassword\";\nimport Album from \"./Album\";\nimport EarlyAcess from \"./EarlyAcess\";\nimport Friends from \"./Friends\";\nimport Result from \"./Result\";\nimport Markdown from \"./Markdown\";\nimport Test from \"./Test\";\n\nexport default {\n  initialRouteName: \"home\",\n  auth: { component: SignIn, requires: [\"home\"] },\n  screens: [\n    {\n      name: \"home\",\n      component: Home,\n      options: { title: \"Trang chủ\" },\n    },\n    { name: \"users\", component: User, options: { title: \"Trang cá nhân\" } },\n    { name: \"posts\", component: Post, options: { title: \"Trang bài viết\" } },\n    { name: \"signup\", component: SignUp, options: { title: \"Đăng ký\" } },\n    {\n      name: \"newpost\",\n      component: NewPost,\n      options: { title: \"Tạo bài viết mới\" },\n    },\n    {\n      name: \"friendsuggestion\",\n      component: FriendSuggestion,\n      options: { title: \"Bạn bè gợi ý\" },\n    },\n    {\n      name: \"friendrequest\",\n      component: FriendRequest,\n      options: { title: \"Lời mời kết bạn\" },\n    },\n    {\n      name: \"friends\",\n      component: Friends,\n      options: { title: \"Tất cả bạn bè\" },\n    },\n    {\n      name: \"userupdate\",\n      component: UserUpdate,\n      options: { title: \"Chỉnh sửa trang cá nhân\" },\n    },\n    {\n      name: \"updatepassword\",\n      component: UpdatePassword,\n      options: { title: \"Đổi mật khẩu\" },\n    },\n    {\n      name: \"album\",\n      component: Album,\n      options: { title: \"Đã lưu\" },\n    },\n    {\n      name: \"earlyaccess\",\n      component: EarlyAcess,\n      options: { title: \"Odanang - Sắp ra mắt\" },\n    },\n    {\n      name: \"result\",\n      component: Result,\n      options: { title: \"Kết quả tìm kiếm\" },\n    },\n    {\n      name: \"markdown\",\n      component: Markdown,\n      options: { title: \"Markdown\" },\n    },\n    {\n      name: \"test\",\n      component: Test,\n      options: { title: \"Test Component\" },\n    },\n  ],\n  linking: {\n    prefixes: [\"https://odanang.net\"],\n    config: {\n      screens: {\n        home: \"/\",\n        users: \"users/:id\",\n        posts: \"posts/:id\",\n        signup: \"signup\",\n        newpost: \"newpost\",\n        friendsuggestion: \"friendsuggestion\",\n        friendrequest: \"friendrequest\",\n        userupdate: \"userupdate\",\n        updatepassword: \"updatepassword\",\n        album: \"album\",\n        earlyaccess: \"earlyaccess\",\n        friends: \"friends\",\n        result: \"result\",\n        markdown: \"markdown\",\n        test: \"test\",\n      },\n    },\n  },\n};\n\n/*\nCác trang:\nTrang đăng nhập                 /login                Form đăng nhập\nTrang đăng ký                   /signup               Form đăng ký\nTrang chủ                       /                     Nút thêm bài viết, newfeed của tài khoản, gợi ý bạn bè fixed bên phải\nTrang thêm bài viết             /newpost              Form thêm bài viết *\nTrang sửa bài viết              /updatepost           Form sửa bài viết *\nTrang bài viết đơn              /[postID]             Hiển thị duy nhất 1 bài viết\nTrang cá nhân                   /[userID]             Hiển thị thông tin cá nhân, có hiện quan hệ bạn bè\nTrang bạn bè                    /[userID]/friends     Hiển thị toàn bộ bạn bè của user *\nTrang gợi ý bạn bè              /friendsuggestion     Hiển thị danh sách bạn bè gợi ý\nTrang lời mời kết bạn           /friendrequest        Hiển thị danh sách lời mời kết bạn\nTrang chỉnh sửa trang cá nhân   /userupdate           Form đổi thông tin cá nhân\nTrang đổi mật khẩu              /userupdate           Form đổi mật khẩu\n*/\n","import React, { Fragment } from \"react\";\nimport { Container } from \"native-base\";\nimport { UserSignInSimple } from \"../ui/User\";\nimport { FooterSimple } from \"../ui/Footer\";\nexport default function SignIn({ navigation }) {\n  return (\n    <Fragment>\n      <Container w=\"container.lg\" m=\"auto\" mt=\"0\" maxW=\"90%\">\n        <UserSignInSimple navigation={navigation} />\n      </Container>\n      <FooterSimple />\n    </Fragment>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Platform } from \"react-native\";\nimport { Container, Box, Flex } from \"native-base\";\nimport { UserListSuggestFixed } from \"../ui/User\";\nimport { PostListSimple, PostCreateButton } from \"../ui/Post\";\nimport { AuthContext } from \"../ui/Provider/Native\";\n\nexport default function Home({ navigation }) {\n  const { user } = useContext(AuthContext);\n  return (\n    <Container\n      w=\"container.lg\"\n      margin=\"auto\"\n      mt=\"64px\"\n      maxW=\"full\"\n      px={[\"0\", \"8px\"]}\n    >\n      <Flex w=\"full\" direction=\"row\">\n        <Box\n          flex={[1, 1, 1, 9]}\n          maxW=\"680px\"\n          mx={[\"auto\", \"auto\", \"auto\", \"0\"]}\n        >\n          {/* <PostCreateButton /> */}\n          <PostListSimple first={5} />\n        </Box>\n        {Platform.OS === \"web\" && (\n          <Box flex={[0, 0, 0, 3]} display={[\"none\", \"none\", \"none\", \"block\"]}>\n            <Box\n              w=\"full\"\n              py=\"8px\"\n              pl=\"24px\"\n              pr=\"8px\"\n              position=\"sticky\"\n              top=\"64px\"\n            >\n              <UserListSuggestFixed id={user?.id} />\n            </Box>\n          </Box>\n        )}\n      </Flex>\n    </Container>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Container } from \"native-base\";\nimport { UserItemDetail } from \"../ui/User\";\nimport { useRoute } from \"@react-navigation/core\";\nimport { AuthContext } from \"../ui/Provider/Native\";\n\nexport default function User({ navigation }) {\n  const { user } = useContext(AuthContext);\n  const { params = {} } = useRoute();\n  const { id } = params;\n  return (\n    <Container w=\"container.lg\" margin=\"auto\" mt=\"64px\" maxW=\"full\" px=\"8px\">\n      <UserItemDetail id={id} my_id={user?.id} />\n    </Container>\n  );\n}","import React from \"react\";\nimport { Container } from \"native-base\";\nimport { PostItemDetail } from \"../ui/Post\";\nimport { useRoute } from \"@react-navigation/core\";\n\nexport default function Post({ navigation }) {\n  const { params = {} } = useRoute();\n  const { id } = params;\n  return (\n    <Container\n      w=\"container.lg\"\n      margin=\"auto\"\n      mt=\"64px\"\n      maxW=\"full\"\n      px={[\"0\", \"8px\"]}\n    >\n      <PostItemDetail id={id}/>\n    </Container>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport { Container } from \"native-base\";\nimport { UserSignUpSimple } from \"../ui/User\";\nimport { FooterSimple } from \"../ui/Footer\";\nexport default function SignIn({ navigation }) {\n  return (\n    <Fragment>\n      <Container w=\"container.lg\" m=\"auto\" mt=\"0\" maxW=\"90%\">\n        <UserSignUpSimple navigation={navigation} />\n      </Container>\n      <FooterSimple />\n    </Fragment>\n  );\n}\n","import React from \"react\";\nimport { Container } from \"native-base\";\nimport { PostCreateSimple } from \"../ui/Post\";\n\nexport default function NewPost({ navigation }) {\n  return (\n    <Container w=\"container.lg\" margin=\"auto\" mt=\"64px\" maxW=\"full\" px=\"8px\">\n      <PostCreateSimple />\n    </Container>\n  );\n}\n","import React,{useContext} from \"react\";\nimport { Container } from \"native-base\";\nimport { UserListSuggest } from \"../ui/User\";\nimport { AuthContext } from \"../ui/Provider/Native\";\nexport default function NewPost({ navigation }) {\n  const { user } = useContext(AuthContext);\n  return (\n    <Container w=\"container.lg\" margin=\"auto\" mt=\"64px\" maxW=\"full\" px=\"8px\">\n      <UserListSuggest id={user?.id}/>\n    </Container>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Container } from \"native-base\";\nimport { UserListRequest } from \"../ui/User\";\n\nimport { AuthContext } from \"../ui/Provider/Native\";\nexport default function FriendRequest({ navigation }) {\n  const { user } = useContext(AuthContext);\n  return (\n    <Container w=\"container.lg\" margin=\"auto\" mt=\"64px\" maxW=\"full\" px=\"8px\">\n      <UserListRequest id={user?.id} />\n    </Container>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Container } from \"native-base\";\nimport { UserListSimple } from \"../ui/User\";\nimport { AuthContext } from \"../ui/Provider/Native\";\nexport default function Friends({ navigation }) {\n  const { user } = useContext(AuthContext);\n  return (\n    <Container w=\"container.lg\" margin=\"auto\" mt=\"64px\" maxW=\"full\" px=\"8px\">\n      <UserListSimple id={user?.id} />\n    </Container>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Container } from \"native-base\";\nimport { UserUpdateSimple } from \"../ui/User\";\nimport { AuthContext } from \"../ui/Provider/Native\";\nexport default function UserUpdate({ navigation }) {\n  const { user } = useContext(AuthContext)\n  return (\n    <Container w=\"container.lg\" margin=\"auto\" mt=\"64px\" maxW=\"full\" px=\"8px\">\n      <UserUpdateSimple user={user} />\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Container } from \"native-base\";\nimport { UserUpdatePassword } from \"../ui/User\";\n\nexport default function UserUpdate({ navigation }) {\n  return (\n    <Container w=\"container.lg\" margin=\"auto\" mt=\"64px\" maxW=\"full\" px=\"8px\">\n      <UserUpdatePassword />\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Container } from \"native-base\";\nimport { AlbumListSimple } from \"../ui/Album\";\n\nexport default function NewPost({ navigation }) {\n  return (\n    <Container w=\"container.lg\" margin=\"auto\" mt=\"64px\" maxW=\"full\" px=\"8px\">\n      <AlbumListSimple />\n    </Container>\n  );\n}\n","import React, { Fragment, useContext } from \"react\";\nimport {\n  Container,\n  Heading,\n  Image,\n  Box,\n  Text,\n  VStack,\n  HStack,\n} from \"native-base\";\nimport { Link } from \"@react-navigation/native\";\nimport { FooterSimple } from \"../ui/Footer\";\nimport { UserListCount } from \"../ui/User\";\nimport { AuthContext } from \"../ui/Provider/Native\";\nexport default function EarlyAccess({ navigation }) {\n  const { loading, error, user } = useContext(AuthContext);\n  return (\n    <Fragment>\n      <Container w=\"container.lg\" margin=\"auto\" mt=\"24px\" maxW=\"full\" px=\"8px\">\n        <VStack\n          maxW=\"500\"\n          w=\"full\"\n          mx=\"auto\"\n          mt=\"100px\"\n          alignItems=\"center\"\n          space=\"24px\"\n        >\n          <Image\n            source={{\n              uri:\n                \"https://res.cloudinary.com/cloudinaryassets/image/upload/v1632635691/favicon_gc42jc.svg\",\n            }}\n            alt=\"Logo\"\n            size=\"100px\"\n            mx=\"auto\"\n          />\n          <VStack alignItems=\"center\">\n            <Text\n              fontSize=\"18px\"\n              fontWeight=\"600\"\n              mb=\"8px\"\n              textAlign=\"center\"\n              maxW={[\"80%\", \"100%\"]}\n            >\n              KILOGRAM - MẠNG XÃ HỘI DÀNH CHO SINH VIÊN\n            </Text>\n            <Text color=\"gray.500\" fontSize=\"16px\">\n              Được phát triển bởi sinh viên ĐH BKĐN\n            </Text>\n          </VStack>\n          <Heading\n            fontSize={[\"54px\", \"80px\"]}\n            color=\"green.500\"\n            my=\"8px\"\n            textAlign=\"center\"\n          >\n            SẮP RA MẮT\n          </Heading>\n          <Box>\n            <HStack justifyContent=\"center\" mb=\"8\">\n              <Text fontSize=\"18\" color=\"gray.500\" mr={3}>\n                Số người đăng ký:\n              </Text>\n              <Box fontSize=\"18px\" fontWeight=\"600\">\n                <UserListCount />\n              </Box>\n            </HStack>\n            {!user && (\n              <HStack justifyContent=\"center\">\n                <Text>Hãy </Text>\n                <Link to={{ screen: \"signup\" }}>\n                  <Text color=\"green.500\" textDecoration=\"none\">\n                    đăng ký\n                  </Text>\n                </Link>\n                <Text> một tài khoản để giữ chỗ </Text>\n              </HStack>\n            )}\n          </Box>\n        </VStack>\n      </Container>\n      <FooterSimple />\n    </Fragment>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Text as RNText } from \"react-native\";\nimport { Container, Box, Flex, Text, VStack } from \"native-base\";\nimport { Platform } from \"react-native\";\nimport { UserListSuggestFixed } from \"../ui/User\";\nimport { PostListSearch } from \"../ui/Post\";\nimport { UserListSearch } from \"../ui/User\";\nimport { useRoute } from \"@react-navigation/core\";\nimport { AuthContext } from \"../ui/Provider/Native\";\nexport default function Result({ navigation }) {\n  const { user } = useContext(AuthContext);\n  const { params = {} } = useRoute();\n  const { keyword } = params;\n  return (\n    <Container w=\"container.lg\" margin=\"auto\" mt=\"64px\" maxW=\"full\" px=\"8px\">\n      {Platform.OS === \"web\" ? (\n        <Flex w=\"full\" direction=\"row\">\n          <>\n            <Box\n              flex={[1, 1, 1, 9]}\n              maxW=\"680px\"\n              mx={[\"auto\", \"auto\", \"auto\", \"0\"]}\n            >\n              <Box w=\"full\" mt=\"20px\" mb=\"8px\" px=\"0.5%\">\n                <Text\n                  fontSize={[\"16\", \"18\"]}\n                  fontWeight=\"600\"\n                  color=\"gray.700\"\n                  px={[\"8px\", \"0\"]}\n                >\n                  Kết quả tìm kiếm cho {keyword}\n                </Text>\n              </Box>\n              <UserListSearch keyword={keyword} my_id={user?.id} />\n              {/* <PostListSearch /> */}\n            </Box>\n            <Box\n              flex={[0, 0, 0, 3]}\n              display={[\"none\", \"none\", \"none\", \"block\"]}\n            >\n              <Box\n                w=\"full\"\n                py=\"8px\"\n                pl=\"24px\"\n                pr=\"8px\"\n                position=\"sticky\"\n                top=\"64px\"\n              >\n                <UserListSuggestFixed />\n              </Box>\n            </Box>\n          </>\n        </Flex>\n      ) : (\n        <>\n          <VStack w=\"100%\">\n            <Box w=\"full\" mt=\"12px\" my=\"20px\" px=\"0.5%\">\n              <RNText\n                style={{\n                  fontWeight: \"500\",\n                  fontFamily: \"Lexend_500Medium\",\n                  fontSize: 20,\n                }}\n              >\n                Kết quả tìm kiếm cho {keyword}\n              </RNText>\n            </Box>\n            <UserListSearch keyword={keyword} my_id={user?.id} />\n          </VStack>\n        </>\n      )}\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Container, Box } from \"native-base\";\nimport Field from \"../ui/Field\";\n\nconst content = `\n# Odanang\n## Mạng xã hội dành cho sinh viên\n\n![Logo](https://res.cloudinary.com/cloudinaryassets/image/upload/v1633593799/logo-header_qh37fo.svg)\n\n### Giới thiệu\n\n---\n\nĐồ án công nghệ phần mềm **PBL6**.\nĐại học Bách Khoa - Đại học Đà Nẵng.\nCác thành viên:\n1. Trần Ngọc Huy\n2. Nguyễn Kim Huy\n3. Trần Diệp Phương\n4. Trần Vũ Minh Triết\n\nĐăng ký tài khoản đặt chỗ [tại đây](https://github.com/truongduchuy910/PBL6).\n\n> \"Trích dẫn của ai đó\"\n`;\n\nexport default function Markdown({ navigation }) {\n  return (\n    <Container w=\"container.lg\" margin=\"auto\" mt=\"64px\" maxW=\"full\" px=\"8px\">\n      <Field>{content}</Field>\n      <Box w=\"100%\"></Box>\n    </Container>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport { Container } from \"native-base\";\nimport { PostCreateSimple, PostItemDetail } from \"../ui/Post\";\nimport { PostListSimple } from \"../ui/Post\";\nimport { InteractionCommentListSimple } from \"../ui/Interactive/Comment\";\nexport default function Test({ navigation }) {\n  return (\n    <Fragment>\n      <Container>\n      <PostCreateSimple />\n      <PostListSimple first = {3}/>\n      </Container>\n    </Fragment>\n  );\n}\n","import React, { useState, useContext, useRef, useEffect } from \"react\";\nimport { Button, Box, VStack, Text } from \"native-base\";\nimport { Link } from \"@react-navigation/native\";\nimport { BsFillCaretDownFill } from \"react-icons/bs\";\nimport { RiUser3Fill, RiDownloadCloudFill } from \"react-icons/ri\";\nimport { MdSettings } from \"react-icons/md\";\nimport { HiLockClosed } from \"react-icons/hi\";\nimport { UserSignOutButton } from \"../User\";\nimport { AuthContext } from \"../Provider/Native\";\nfunction UI({ navigation }) {\n  const ref = useRef();\n  const [isOpenOptions, setIsOpenOptions] = useState(false);\n\n  const optionsHandler = () => {\n    setIsOpenOptions((prev) => !prev);\n  };\n  const currentUser = useContext(AuthContext).user;\n  useEffect(() => {\n    const hideOptions = (e) => {\n      if (isOpenOptions && ref.current && !ref.current.contains(e.target)) {\n        setIsOpenOptions(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", hideOptions);\n    return () => {\n      document.removeEventListener(\"mousedown\", hideOptions);\n    };\n  }, [isOpenOptions]);\n  return (\n    <Box position=\"relative\" right=\"0\" ref={ref}>\n      <Button\n        onPress={optionsHandler}\n        rounded=\"100\"\n        bgColor=\"gray.100\"\n        p=\"10px\"\n        _text={{ color: \"gray.400\", fontWeight: \"600\" }}\n      >\n        <BsFillCaretDownFill color=\"#a1a1aa\" />\n      </Button>\n      {isOpenOptions && (\n        <Box position=\"absolute\" top=\"40px\" right=\"0\" w=\"200px\">\n          <VStack\n            space=\"6px\"\n            bgColor=\"white\"\n            p=\"8px\"\n            rounded=\"8px\"\n            borderWidth=\"1px\"\n            borderColor=\"gray.100\"\n            alignItems=\"start\"\n          >\n            <Button\n              bgColor=\"white\"\n              leftIcon={<RiUser3Fill color=\"#22c55e\" />}\n              onPress={optionsHandler}\n            >\n              <Link to={{ screen: \"users\", params: { id: currentUser.id } }}>\n                <Text>Trang cá nhân</Text>\n              </Link>\n            </Button>\n            <Button\n              bgColor=\"white\"\n              leftIcon={<MdSettings color=\"#22c55e\" />}\n              onPress={optionsHandler}\n            >\n              <Link to={{ screen: \"userupdate\" }}>\n                <Text>Cài đặt</Text>\n              </Link>\n            </Button>\n            <Button\n              bgColor=\"white\"\n              leftIcon={<HiLockClosed color=\"#22c55e\" />}\n              onPress={optionsHandler}\n            >\n              <Link to={{ screen: \"updatepassword\" }}>\n                <Text>Đổi mật khẩu</Text>\n              </Link>\n            </Button>\n            <Button\n              bgColor=\"white\"\n              leftIcon={<RiDownloadCloudFill color=\"#22c55e\" />}\n              onPress={optionsHandler}\n            >\n              <Link to={{ screen: \"album\" }}>\n                <Text>Lưu</Text>\n              </Link>\n            </Button>\n\n            <UserSignOutButton navigation={navigation} />\n          </VStack>\n        </Box>\n      )}\n    </Box>\n  );\n}\nexport default UI;\n","import React from 'react'\nimport { Box, Button, Text, Image, HStack } from 'native-base'\nimport { Link } from '@react-navigation/native'\n\nfunction UI(props) {\n  return (\n    <Button bgColor=\"white\" onPress={props.notificationHandler}>\n      <HStack\n        space=\"12px\"\n        display=\"flex\"\n        flexDirection=\"row\"\n        w=\"full\"\n        px=\"4px\"\n        alignItems=\"flex-start\"\n        justifyContent=\"flex-start\"\n        position=\"relative\"\n        zIndex=\"1\"\n      >\n        <Image\n          source={{\n            uri: props.item.imgUrl,\n          }}\n          alt=\"Profile image\"\n          size=\"40px\"\n          rounded=\"100\"\n          mt=\"4px\"\n        />\n        <Box>\n          <Text color=\"gray.900\" fontWeight=\"600\">\n            {props.item.user}\n          </Text>\n          <Text>{props.item.content}</Text>\n          <Text color=\"gray.400\" fontSize=\"12px\">\n            {props.item.time}\n          </Text>\n        </Box>\n      </HStack>\n    </Button>\n  )\n}\nexport default UI\n","import React from 'react'\nimport { gql, useQuery } from '@apollo/client'\n\nexport const NOTIFICATION_LIST = gql`\n  query ($id: ID!, $first: Int) {\n    allRelationships(\n      first: $first\n      sortBy: updatedAt_DESC\n      where: { to: { id: $id } }\n    ) {\n      id\n      isAccepted\n      createdAt\n      createdBy {\n        id\n        name\n        avatar {\n          publicUrl\n        }\n      }\n      to {\n        id\n        name\n      }\n    }\n\n    allInteractives(\n      first: $first\n      where: { createdBy: { id: $id } }\n      sortBy: updatedAt_DESC\n    ) {\n      id\n      comments(first: $first, sortBy: createdAt_DESC) {\n        id\n        content\n        createdAt\n        createdBy {\n          id\n          name\n          avatar {\n            publicUrl\n          }\n        }\n      }\n      reactions(first: $first, sortBy: createdAt_DESC) {\n        id\n        createdAt\n        createdBy {\n          id\n          name\n          avatar {\n            publicUrl\n          }\n        }\n      }\n    }\n  }\n`\nfunction formatTimeCreate(createdAt) {\n  var dayjs = require('dayjs')\n  let stringTime = ''\n  const createdTime = dayjs(createdAt)\n  const now = dayjs()\n  if (now.format('DD-MM-YYYY') === createdTime.format('DD-MM-YYYY')) {\n    if (Number(now.get('hour')) - Number(createdTime.get('hour')) === 0)\n      stringTime =\n        Number(now.get('minute')) -\n        Number(createdTime.get('minute')) +\n        ' phút trước'\n    else\n      stringTime =\n        Number(now.get('hour')) - Number(createdTime.get('hour')) + ' giờ trước'\n  } else stringTime = createdTime.format('DD-MM-YYYY')\n  return stringTime\n}\n\nexport default function NotificationListController({ UI, first = 3, id }) {\n  const {\n    loading,\n    error,\n    data = {},\n  } = useQuery(NOTIFICATION_LIST, {\n    variables: { first, id },\n    pollInterval: 3000,\n  })\n  const { allRelationships = [], allInteractives = [] } = data\n  const comments = []\n  const reactions = []\n  if (allInteractives.length)\n    allInteractives.forEach((interactive) => {\n      if (interactive.comments)\n        interactive.comments.forEach((comment) => comments.push(comment))\n      if (interactive.reactions)\n        interactive.reactions.forEach((reaction) => reactions.push(reaction))\n    })\n  const arr = []\n  arr.push(...comments, ...reactions)\n  if (allRelationships) arr.push(...allRelationships)\n  arr.sort((itemA, itemB) => {\n    return new Date(itemB.createdAt) - new Date(itemA.createdAt)\n  })\n  let arrFilter = arr.filter((item) => item.createdBy?.id !== id)\n  if (arrFilter.length > 4) arrFilter = arrFilter.slice(0, 4)\n  const solvedData = []\n  arrFilter.forEach((item) => {\n    switch (item.__typename) {\n      case 'InteractiveComment':\n        solvedData.push({\n          id: item.id,\n          user: item.createdBy.name,\n          imgUrl:\n            'https://odanang.net' +\n            (item.createdBy.avatar.publicUrl || '/upload/img/no-image.png'),\n          content: 'đã bình luận về bài viết của bạn.',\n          time: formatTimeCreate(item.createdAt),\n        })\n        break\n      case 'InteractiveReaction':\n        solvedData.push({\n          id: item.id,\n          user: item.createdBy.name,\n          imgUrl:\n            'https://odanang.net' +\n            (item.createdBy.avatar.publicUrl || '/upload/img/no-image.png'),\n          content: 'đã thích bài viết của bạn.',\n          time: formatTimeCreate(item.createdAt),\n        })\n        break\n      case 'Relationship':\n        if (!item.isAccepted)\n          solvedData.push({\n            id: item.id,\n            user: item.createdBy.name,\n            imgUrl:\n              'https://odanang.net' +\n              (item.createdBy.avatar.publicUrl || '/upload/img/no-image.png'),\n            content: 'đã gửi lời mời kết bạn đến bạn.',\n            time: formatTimeCreate(item.createdAt),\n          })\n        else\n          solvedData.push({\n            id: item.id,\n            user: item.createdBy.name,\n            imgUrl:\n              'https://odanang.net' +\n              (item.createdBy.avatar.publicUrl || '/upload/img/no-image.png'),\n            content: 'và bạn đã trở thành bạn bè',\n            time: formatTimeCreate(item.createdAt),\n          })\n        break\n      default:\n        solvedData.push({})\n    }\n  })\n  return (\n    <UI\n      loading={loading}\n      error={error}\n      data={solvedData}\n      allRelationships={allRelationships}\n    />\n  )\n}\n","import React from 'react'\nimport { Box, VStack } from 'native-base'\nimport NotificationItemSimple from '../Item/Simple'\nimport { Link } from '@react-navigation/native'\nimport Controller from './Controller'\n\n// const data = [\n//   {\n//     id: 1,\n//     user: 'Nguyễn Kim Huy',\n//     imgUrl:\n//       'https://res.cloudinary.com/cloudinaryassets/image/upload/v1632719777/200960556_1184264562021915_3530694902678239694_n_u7mk8s.jpg',\n//     content: 'đã bình luận về bài viết của bạn.',\n//     time: '2 giờ',\n//   },\n//   {\n//     id: 2,\n//     user: 'Trần Diệp Phương',\n//     imgUrl:\n//       'https://res.cloudinary.com/cloudinaryassets/image/upload/v1632719776/190312313_2943016239348813_282704590362946930_n_pc3vbb.jpg',\n//     content: 'đã gửi lời mời kết bạn.',\n//     time: '3 giờ',\n//   },\n//   {\n//     id: 3,\n//     user: 'Trần Vũ Minh Triết',\n//     imgUrl:\n//       'https://res.cloudinary.com/cloudinaryassets/image/upload/v1632719776/156458382_874843366689762_6113705464882053665_n_tl05xu.jpg',\n//     content: 'đã chấp nhận lời mời kết bạn.',\n//     time: '4 giờ',\n//   },\n//   {\n//     id: 4,\n//     user: 'Trần Vũ Minh Triết',\n//     imgUrl:\n//       'https://res.cloudinary.com/cloudinaryassets/image/upload/v1632719776/156458382_874843366689762_6113705464882053665_n_tl05xu.jpg',\n//     content: 'đã thích bài viết của bạn.',\n//     time: '5 giờ',\n//   },\n// ]\n\nfunction UI({ loading, error, data, allRelationships }) {\n  return (\n    <Box position=\"absolute\" top=\"10\" right=\"0\" w=\"300px\">\n      <VStack\n        py=\"8px\"\n        bgColor=\"white\"\n        rounded=\"8px\"\n        borderWidth=\"1px\"\n        borderColor=\"gray.100\"\n        alignItems=\"start\"\n      >\n        {data.map((item) => (\n          <NotificationItemSimple key={item.id} item={item} />\n        ))}\n      </VStack>\n    </Box>\n  )\n}\nexport default function NotificationListSimple(props) {\n  return <Controller {...props} UI={UI} />\n}\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\nimport { Button, Box } from \"native-base\";\nimport { HiBell } from \"react-icons/hi\";\nimport NotificationListSimple from \"../List/Simple\";\nimport { AuthContext } from \"../../Provider/Native\";\n\nfunction UI() {\n  const ref = useRef();\n  const [isOpenNotification, setIsOpenNotification] = useState(false);\n  const user = useContext(AuthContext).user;\n  const notificationHandler = () => {\n    setIsOpenNotification((prev) => !prev);\n  };\n\n  useEffect(() => {\n    const hideNotification = (e) => {\n      if (\n        isOpenNotification &&\n        ref.current &&\n        !ref.current.contains(e.target)\n      ) {\n        setIsOpenNotification(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", hideNotification);\n    return () => {\n      document.removeEventListener(\"mousedown\", hideNotification);\n    };\n  }, [isOpenNotification]);\n\n  return (\n    <Box position=\"relative\" right=\"0\" ref={ref}>\n      <Button\n        onPress={notificationHandler}\n        rounded=\"100\"\n        bgColor=\"gray.100\"\n        p=\"10px\"\n        _text={{ color: \"gray.400\", fontWeight: \"600\" }}\n      >\n        <HiBell color=\"#a1a1aa\" />\n      </Button>\n      {isOpenNotification && (\n        <NotificationListSimple\n          notificationHandler={notificationHandler}\n          id={user?.id}\n        />\n      )}\n    </Box>\n  );\n}\nexport default UI;\n","import React from \"react\";\nimport { Box, Input, FormControl } from \"native-base\";\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\nimport { Link, useNavigation } from \"@react-navigation/native\";\n\nIonicons.loadFont();\n\nfunction UI({}) {\n  const navigation = useNavigation();\n  const submitHandler = (e) => {\n    if (e.key === \"Enter\") {\n      console.log(e.target.value);\n      // url: /result?keyword=\n      navigation.navigate(\"result\");\n    }\n  };\n\n  return (\n    <Box position=\"relative\" right=\"0\" display={[\"none\", \"none\", \"block\"]}>\n      <FormControl>\n        <Input\n          onKeyPress={submitHandler}\n          bgColor=\"white\"\n          px=\"2\"\n          py=\"1.5\"\n          pl=\"8\"\n          borderWidth=\"1\"\n          borderColor=\"gray.100\"\n          rounded=\"6\"\n          placeholder=\"Tìm kiếm trên Odanang\"\n          fontFamily=\"Lexend_400Regular\"\n          fontSize=\"14\"\n          w=\"250px\"\n          _focus={{\n            borderColor: \"green.500\",\n          }}\n        />\n      </FormControl>\n      <Box position=\"absolute\" top=\"2.5\" left=\"2.5\" size=\"14\">\n        <Ionicons name=\"search\" size={16} color=\"#a1a1aa\" />\n      </Box>\n    </Box>\n  );\n}\nexport default UI;\n","import React from \"react\";\nimport { Container, HStack, Box, Image, Text } from \"native-base\";\nimport AuthController from \"../User/Auth/Controller\";\nimport { Link } from \"@react-navigation/native\";\nimport { UserAuthShort } from \"../User\";\nimport Options from \"./Options\";\nimport { NotificationListToggle } from \"../Notification\";\nimport HeadersSearch from \"./Search\";\n\nfunction UI({ user, navigation, route, options, back }) {\n  return (\n    <Box\n      w=\"full\"\n      position=\"fixed\"\n      borderBottomWidth=\"1px\"\n      borderColor=\"gray.100\"\n      bgColor=\"white\"\n    >\n      <Container w=\"container.lg\" mx=\"auto\" maxW=\"full\" px=\"8px\">\n        <Box safeAreaTop pt=\"12px\" pb=\"8px\" boxSize=\"full\">\n          <HStack justifyContent=\"space-between\" alignItems=\"center\">\n            <Link to={{ screen: \"home\" }}>\n              <Image\n                source={{\n                  uri:\n                    \"https://res.cloudinary.com/cloudinaryassets/image/upload/v1638544817/logo-header_vczz5x.svg\",\n                }}\n                alt=\"Logo\"\n                w=\"150px\"\n                h=\"40px\"\n              />\n            </Link>\n            {user && <HeadersSearch />}\n            {user && (\n              <HStack alignItems=\"center\" space=\"10px\">\n                <Box display={[\"none\", \"block\"]}>\n                  <UserAuthShort navigation={navigation} />\n                </Box>\n                <NotificationListToggle />\n                <Options navigation={navigation} />\n              </HStack>\n            )}\n          </HStack>\n        </Box>\n      </Container>\n    </Box>\n  );\n}\nexport default function HeaderSimple(props) {\n  return <AuthController {...props} UI={UI} />;\n}\n","import React, { useState, useEffect } from \"react\";\nimport { NativeBaseProvider } from \"native-base\";\nimport { theme, useFonts } from \"./theme\";\nimport pages from \"./pages\";\nimport * as Font from \"expo-font\";\n\nimport { ProviderNative } from \"./ui/Provider\";\nimport HeaderSimple from \"./ui/Headers/Simple\";\nimport { AppRegistry } from \"react-native\";\n\nimport {\n  Lexend_300Light,\n  Lexend_400Regular,\n  Lexend_500Medium,\n  Lexend_600SemiBold,\n  Lexend_700Bold,\n} from \"@expo-google-fonts/lexend\";\n\nfunction App() {\n  const [fontLoaded, setfontLoaded] = useState(false);\n\n  const _loadFontsAsync = async () => {\n    await Font.loadAsync({\n      Lexend_300Light,\n      Lexend_400Regular,\n      Lexend_500Medium,\n      Lexend_600SemiBold,\n      Lexend_700Bold,\n    });\n    setfontLoaded(true);\n  };\n\n  useEffect(() => {\n    _loadFontsAsync();\n  }, []);\n\n  if (!fontLoaded) return null;\n  return (\n    <NativeBaseProvider theme={theme}>\n      <ProviderNative navigation={pages} header={HeaderSimple} />\n    </NativeBaseProvider>\n  );\n}\n\nAppRegistry.registerComponent(\"Odanang\", () => App);\nexport default App;\n","import 'react-native-gesture-handler';\nimport { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}